//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/Notification.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "rx/Notification.h"
#include "rx/Observer.h"

@interface RxNotification () {
 @public
  RxNotification_Kind *kind_;
  NSException *throwable_;
  id value_;
}

- (instancetype)initWithRxNotification_Kind:(RxNotification_Kind *)kind
                                     withId:(id)value
                            withNSException:(NSException *)e;

@end

J2OBJC_FIELD_SETTER(RxNotification, kind_, RxNotification_Kind *)
J2OBJC_FIELD_SETTER(RxNotification, throwable_, NSException *)
J2OBJC_FIELD_SETTER(RxNotification, value_, id)

inline RxNotification *RxNotification_get_ON_COMPLETED();
static RxNotification *RxNotification_ON_COMPLETED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxNotification, ON_COMPLETED, RxNotification *)

__attribute__((unused)) static void RxNotification_initWithRxNotification_Kind_withId_withNSException_(RxNotification *self, RxNotification_Kind *kind, id value, NSException *e);

__attribute__((unused)) static RxNotification *new_RxNotification_initWithRxNotification_Kind_withId_withNSException_(RxNotification_Kind *kind, id value, NSException *e) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxNotification *create_RxNotification_initWithRxNotification_Kind_withId_withNSException_(RxNotification_Kind *kind, id value, NSException *e);

__attribute__((unused)) static void RxNotification_Kind_initWithNSString_withInt_(RxNotification_Kind *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static RxNotification_Kind *new_RxNotification_Kind_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(RxNotification)

@implementation RxNotification

+ (RxNotification *)createOnNextWithId:(id)t {
  return RxNotification_createOnNextWithId_(t);
}

+ (RxNotification *)createOnErrorWithNSException:(NSException *)e {
  return RxNotification_createOnErrorWithNSException_(e);
}

+ (RxNotification *)createOnCompleted {
  return RxNotification_createOnCompleted();
}

+ (RxNotification *)createOnCompletedWithIOSClass:(IOSClass *)type {
  return RxNotification_createOnCompletedWithIOSClass_(type);
}

- (instancetype)initWithRxNotification_Kind:(RxNotification_Kind *)kind
                                     withId:(id)value
                            withNSException:(NSException *)e {
  RxNotification_initWithRxNotification_Kind_withId_withNSException_(self, kind, value, e);
  return self;
}

- (NSException *)getThrowable {
  return throwable_;
}

- (id)getValue {
  return value_;
}

- (jboolean)hasValue {
  return [self isOnNext] && value_ != nil;
}

- (jboolean)hasThrowable {
  return [self isOnError] && throwable_ != nil;
}

- (RxNotification_Kind *)getKind {
  return kind_;
}

- (jboolean)isOnError {
  return [self getKind] == JreLoadEnum(RxNotification_Kind, OnError);
}

- (jboolean)isOnCompleted {
  return [self getKind] == JreLoadEnum(RxNotification_Kind, OnCompleted);
}

- (jboolean)isOnNext {
  return [self getKind] == JreLoadEnum(RxNotification_Kind, OnNext);
}

- (void)acceptWithRxObserver:(id<RxObserver>)observer {
  if ([self isOnNext]) {
    [((id<RxObserver>) nil_chk(observer)) onNextWithId:[self getValue]];
  }
  else if ([self isOnCompleted]) {
    [((id<RxObserver>) nil_chk(observer)) onCompleted];
  }
  else if ([self isOnError]) {
    [((id<RxObserver>) nil_chk(observer)) onErrorWithNSException:[self getThrowable]];
  }
}

- (NSString *)description {
  JavaLangStringBuilder *str = [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([new_JavaLangStringBuilder_initWithNSString_(@"[") appendWithNSString:[super description]])) appendWithNSString:@" "])) appendWithId:[self getKind]];
  if ([self hasValue]) (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(str)) appendWithNSString:@" "])) appendWithId:[self getValue]];
  if ([self hasThrowable]) (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(str)) appendWithNSString:@" "])) appendWithNSString:[((NSException *) nil_chk([self getThrowable])) getMessage]];
  (void) [((JavaLangStringBuilder *) nil_chk(str)) appendWithNSString:@"]"];
  return [str description];
}

- (NSUInteger)hash {
  jint hash_ = ((jint) [((RxNotification_Kind *) nil_chk([self getKind])) hash]);
  if ([self hasValue]) hash_ = hash_ * 31 + ((jint) [nil_chk([self getValue]) hash]);
  if ([self hasThrowable]) hash_ = hash_ * 31 + ((jint) [((NSException *) nil_chk([self getThrowable])) hash]);
  return hash_;
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) {
    return false;
  }
  if (self == obj) {
    return true;
  }
  if ([obj getClass] != (id) [self getClass]) {
    return false;
  }
  RxNotification *notification = (RxNotification *) cast_chk(obj, [RxNotification class]);
  if ([notification getKind] != [self getKind]) {
    return false;
  }
  if ([self hasValue] && ![nil_chk([self getValue]) isEqual:[notification getValue]]) {
    return false;
  }
  if ([self hasThrowable] && ![((NSException *) nil_chk([self getThrowable])) isEqual:[notification getThrowable]]) {
    return false;
  }
  if (![self hasValue] && ![self hasThrowable] && [notification hasValue]) {
    return false;
  }
  if (![self hasValue] && ![self hasThrowable] && [notification hasThrowable]) {
    return false;
  }
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createOnNextWithId:", "LRxNotification;", 0x9, 0, 1, -1, 2, -1, -1 },
    { "createOnErrorWithNSException:", "LRxNotification;", 0x9, 3, 4, -1, 5, -1, -1 },
    { "createOnCompleted", "LRxNotification;", 0x9, -1, -1, -1, 6, -1, -1 },
    { "createOnCompletedWithIOSClass:", "LRxNotification;", 0x9, 7, 8, -1, 9, -1, -1 },
    { "initWithRxNotification_Kind:withId:withNSException:", NULL, 0x2, -1, 10, -1, 11, -1, -1 },
    { "getThrowable", "LNSException;", 0x1, -1, -1, -1, -1, -1, -1 },
    { "getValue", "LNSObject;", 0x1, -1, -1, -1, 12, -1, -1 },
    { "hasValue", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "hasThrowable", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "getKind", "LRxNotification_Kind;", 0x1, -1, -1, -1, -1, -1, -1 },
    { "isOnError", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "isOnCompleted", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "isOnNext", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "acceptWithRxObserver:", "V", 0x1, 13, 14, -1, 15, -1, -1 },
    { "description", "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { "hash", "I", 0x1, 17, -1, -1, -1, -1, -1 },
    { "isEqual:", "Z", 0x1, 18, 1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "kind_", "LRxNotification_Kind;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "throwable_", "LNSException;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 19, -1 },
    { "ON_COMPLETED", "LRxNotification;", .constantValue.asLong = 0, 0x1a, -1, 20, 21, -1 },
  };
  static const void *ptrTable[] = { "createOnNext", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Lrx/Notification<TT;>;", "createOnError", "LNSException;", "<T:Ljava/lang/Object;>(Ljava/lang/Throwable;)Lrx/Notification<TT;>;", "<T:Ljava/lang/Object;>()Lrx/Notification<TT;>;", "createOnCompleted", "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Lrx/Notification<TT;>;", "LRxNotification_Kind;LNSObject;LNSException;", "(Lrx/Notification$Kind;TT;Ljava/lang/Throwable;)V", "()TT;", "accept", "LRxObserver;", "(Lrx/Observer<-TT;>;)V", "toString", "hashCode", "equals", "TT;", &RxNotification_ON_COMPLETED, "Lrx/Notification<Ljava/lang/Void;>;", "LRxNotification_Kind;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxNotification = { "Notification", "rx", ptrTable, methods, fields, 7, 0x11, 17, 4, -1, 22, -1, 23, -1 };
  return &_RxNotification;
}

+ (void)initialize {
  if (self == [RxNotification class]) {
    RxNotification_ON_COMPLETED = new_RxNotification_initWithRxNotification_Kind_withId_withNSException_(JreLoadEnum(RxNotification_Kind, OnCompleted), nil, nil);
    J2OBJC_SET_INITIALIZED(RxNotification)
  }
}

@end

RxNotification *RxNotification_createOnNextWithId_(id t) {
  RxNotification_initialize();
  return new_RxNotification_initWithRxNotification_Kind_withId_withNSException_(JreLoadEnum(RxNotification_Kind, OnNext), t, nil);
}

RxNotification *RxNotification_createOnErrorWithNSException_(NSException *e) {
  RxNotification_initialize();
  return new_RxNotification_initWithRxNotification_Kind_withId_withNSException_(JreLoadEnum(RxNotification_Kind, OnError), nil, e);
}

RxNotification *RxNotification_createOnCompleted() {
  RxNotification_initialize();
  return RxNotification_ON_COMPLETED;
}

RxNotification *RxNotification_createOnCompletedWithIOSClass_(IOSClass *type) {
  RxNotification_initialize();
  return RxNotification_ON_COMPLETED;
}

void RxNotification_initWithRxNotification_Kind_withId_withNSException_(RxNotification *self, RxNotification_Kind *kind, id value, NSException *e) {
  NSObject_init(self);
  self->value_ = value;
  self->throwable_ = e;
  self->kind_ = kind;
}

RxNotification *new_RxNotification_initWithRxNotification_Kind_withId_withNSException_(RxNotification_Kind *kind, id value, NSException *e) {
  J2OBJC_NEW_IMPL(RxNotification, initWithRxNotification_Kind_withId_withNSException_, kind, value, e)
}

RxNotification *create_RxNotification_initWithRxNotification_Kind_withId_withNSException_(RxNotification_Kind *kind, id value, NSException *e) {
  J2OBJC_CREATE_IMPL(RxNotification, initWithRxNotification_Kind_withId_withNSException_, kind, value, e)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxNotification)

J2OBJC_INITIALIZED_DEFN(RxNotification_Kind)

RxNotification_Kind *RxNotification_Kind_values_[3];

@implementation RxNotification_Kind

+ (RxNotification_Kind *)OnNext {
  return JreEnum(RxNotification_Kind, OnNext);
}

+ (RxNotification_Kind *)OnError {
  return JreEnum(RxNotification_Kind, OnError);
}

+ (RxNotification_Kind *)OnCompleted {
  return JreEnum(RxNotification_Kind, OnCompleted);
}

+ (IOSObjectArray *)values {
  return RxNotification_Kind_values();
}

+ (RxNotification_Kind *)valueOfWithNSString:(NSString *)name {
  return RxNotification_Kind_valueOfWithNSString_(name);
}

- (RxNotification_Kind_Enum)toNSEnum {
  return (RxNotification_Kind_Enum)[self ordinal];
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "values", "[LRxNotification_Kind;", 0x9, -1, -1, -1, -1, -1, -1 },
    { "valueOfWithNSString:", "LRxNotification_Kind;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "OnNext", "LRxNotification_Kind;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "OnError", "LRxNotification_Kind;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "OnCompleted", "LRxNotification_Kind;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(RxNotification_Kind, OnNext), &JreEnum(RxNotification_Kind, OnError), &JreEnum(RxNotification_Kind, OnCompleted), "LRxNotification;", "Ljava/lang/Enum<Lrx/Notification$Kind;>;" };
  static const J2ObjcClassInfo _RxNotification_Kind = { "Kind", "rx", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_RxNotification_Kind;
}

+ (void)initialize {
  if (self == [RxNotification_Kind class]) {
    JreEnum(RxNotification_Kind, OnNext) = new_RxNotification_Kind_initWithNSString_withInt_(@"OnNext", 0);
    JreEnum(RxNotification_Kind, OnError) = new_RxNotification_Kind_initWithNSString_withInt_(@"OnError", 1);
    JreEnum(RxNotification_Kind, OnCompleted) = new_RxNotification_Kind_initWithNSString_withInt_(@"OnCompleted", 2);
    J2OBJC_SET_INITIALIZED(RxNotification_Kind)
  }
}

@end

void RxNotification_Kind_initWithNSString_withInt_(RxNotification_Kind *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

RxNotification_Kind *new_RxNotification_Kind_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(RxNotification_Kind, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *RxNotification_Kind_values() {
  RxNotification_Kind_initialize();
  return [IOSObjectArray arrayWithObjects:RxNotification_Kind_values_ count:3 type:RxNotification_Kind_class_()];
}

RxNotification_Kind *RxNotification_Kind_valueOfWithNSString_(NSString *name) {
  RxNotification_Kind_initialize();
  for (int i = 0; i < 3; i++) {
    RxNotification_Kind *e = RxNotification_Kind_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

RxNotification_Kind *RxNotification_Kind_fromOrdinal(NSUInteger ordinal) {
  RxNotification_Kind_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return RxNotification_Kind_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxNotification_Kind)
