//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/observers/SafeCompletableSubscriber.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "rx/Completable.h"
#include "rx/Subscription.h"
#include "rx/exceptions/CompositeException.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/exceptions/OnCompletedFailedException.h"
#include "rx/exceptions/OnErrorFailedException.h"
#include "rx/internal/util/RxJavaPluginUtils.h"
#include "rx/observers/SafeCompletableSubscriber.h"

@implementation RxObserversSafeCompletableSubscriber

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)actual {
  RxObserversSafeCompletableSubscriber_initWithRxCompletable_CompletableSubscriber_(self, actual);
  return self;
}

- (void)onCompleted {
  if (done_) {
    return;
  }
  done_ = true;
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(actual_)) onCompleted];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    @throw new_RxExceptionsOnCompletedFailedException_initWithNSException_(ex);
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  RxInternalUtilRxJavaPluginUtils_handleExceptionWithNSException_(e);
  if (done_) {
    return;
  }
  done_ = true;
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(actual_)) onErrorWithNSException:e];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    @throw new_RxExceptionsOnErrorFailedException_initWithNSException_(new_RxExceptionsCompositeException_initWithNSExceptionArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]));
  }
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  self->s_ = d;
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(actual_)) onSubscribeWithRxSubscription:self];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    [((id<RxSubscription>) nil_chk(d)) unsubscribe];
    [self onErrorWithNSException:ex];
  }
}

- (void)unsubscribe {
  [((id<RxSubscription>) nil_chk(s_)) unsubscribe];
}

- (jboolean)isUnsubscribed {
  return done_ || [((id<RxSubscription>) nil_chk(s_)) isUnsubscribed];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxCompletable_CompletableSubscriber:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "unsubscribe", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "isUnsubscribed", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "s_", "LRxSubscription;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_CompletableSubscriber;", "onError", "LNSException;", "onSubscribe", "LRxSubscription;" };
  static const J2ObjcClassInfo _RxObserversSafeCompletableSubscriber = { "SafeCompletableSubscriber", "rx.observers", ptrTable, methods, fields, 7, 0x11, 6, 3, -1, -1, -1, -1, -1 };
  return &_RxObserversSafeCompletableSubscriber;
}

@end

void RxObserversSafeCompletableSubscriber_initWithRxCompletable_CompletableSubscriber_(RxObserversSafeCompletableSubscriber *self, id<RxCompletable_CompletableSubscriber> actual) {
  NSObject_init(self);
  self->actual_ = actual;
}

RxObserversSafeCompletableSubscriber *new_RxObserversSafeCompletableSubscriber_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> actual) {
  J2OBJC_NEW_IMPL(RxObserversSafeCompletableSubscriber, initWithRxCompletable_CompletableSubscriber_, actual)
}

RxObserversSafeCompletableSubscriber *create_RxObserversSafeCompletableSubscriber_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> actual) {
  J2OBJC_CREATE_IMPL(RxObserversSafeCompletableSubscriber, initWithRxCompletable_CompletableSubscriber_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObserversSafeCompletableSubscriber)
