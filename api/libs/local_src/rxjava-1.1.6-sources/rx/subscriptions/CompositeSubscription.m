//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/subscriptions/CompositeSubscription.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "rx/Subscription.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/subscriptions/CompositeSubscription.h"

@interface RxSubscriptionsCompositeSubscription () {
 @public
  id<JavaUtilSet> subscriptions_;
  volatile_jboolean unsubscribed_;
}

+ (void)unsubscribeFromAllWithJavaUtilCollection:(id<JavaUtilCollection>)subscriptions;

@end

J2OBJC_FIELD_SETTER(RxSubscriptionsCompositeSubscription, subscriptions_, id<JavaUtilSet>)

__attribute__((unused)) static void RxSubscriptionsCompositeSubscription_unsubscribeFromAllWithJavaUtilCollection_(id<JavaUtilCollection> subscriptions);

@implementation RxSubscriptionsCompositeSubscription

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSubscriptionsCompositeSubscription_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithRxSubscriptionArray:(IOSObjectArray *)subscriptions {
  RxSubscriptionsCompositeSubscription_initWithRxSubscriptionArray_(self, subscriptions);
  return self;
}

- (jboolean)isUnsubscribed {
  return JreLoadVolatileBoolean(&unsubscribed_);
}

- (void)addWithRxSubscription:(id<RxSubscription>)s {
  if ([((id<RxSubscription>) nil_chk(s)) isUnsubscribed]) {
    return;
  }
  if (!JreLoadVolatileBoolean(&unsubscribed_)) {
    @synchronized(self) {
      if (!JreLoadVolatileBoolean(&unsubscribed_)) {
        if (subscriptions_ == nil) {
          subscriptions_ = new_JavaUtilHashSet_initWithInt_(4);
        }
        [subscriptions_ addWithId:s];
        return;
      }
    }
  }
  [s unsubscribe];
}

- (void)removeWithRxSubscription:(id<RxSubscription>)s {
  if (!JreLoadVolatileBoolean(&unsubscribed_)) {
    jboolean unsubscribe = false;
    @synchronized(self) {
      if (JreLoadVolatileBoolean(&unsubscribed_) || subscriptions_ == nil) {
        return;
      }
      unsubscribe = [subscriptions_ removeWithId:s];
    }
    if (unsubscribe) {
      [((id<RxSubscription>) nil_chk(s)) unsubscribe];
    }
  }
}

- (void)clear {
  if (!JreLoadVolatileBoolean(&unsubscribed_)) {
    id<JavaUtilCollection> unsubscribe = nil;
    @synchronized(self) {
      if (JreLoadVolatileBoolean(&unsubscribed_) || subscriptions_ == nil) {
        return;
      }
      else {
        unsubscribe = subscriptions_;
        subscriptions_ = nil;
      }
    }
    RxSubscriptionsCompositeSubscription_unsubscribeFromAllWithJavaUtilCollection_(unsubscribe);
  }
}

- (void)unsubscribe {
  if (!JreLoadVolatileBoolean(&unsubscribed_)) {
    id<JavaUtilCollection> unsubscribe = nil;
    @synchronized(self) {
      if (JreLoadVolatileBoolean(&unsubscribed_)) {
        return;
      }
      JreAssignVolatileBoolean(&unsubscribed_, true);
      unsubscribe = subscriptions_;
      subscriptions_ = nil;
    }
    RxSubscriptionsCompositeSubscription_unsubscribeFromAllWithJavaUtilCollection_(unsubscribe);
  }
}

+ (void)unsubscribeFromAllWithJavaUtilCollection:(id<JavaUtilCollection>)subscriptions {
  RxSubscriptionsCompositeSubscription_unsubscribeFromAllWithJavaUtilCollection_(subscriptions);
}

- (jboolean)hasSubscriptions {
  if (!JreLoadVolatileBoolean(&unsubscribed_)) {
    @synchronized(self) {
      return !JreLoadVolatileBoolean(&unsubscribed_) && subscriptions_ != nil && ![subscriptions_ isEmpty];
    }
  }
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxSubscriptionArray:", NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { "isUnsubscribed", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "addWithRxSubscription:", "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { "removeWithRxSubscription:", "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { "clear", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "unsubscribe", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "unsubscribeFromAllWithJavaUtilCollection:", "V", 0xa, 4, 5, -1, 6, -1, -1 },
    { "hasSubscriptions", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "subscriptions_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 7, -1 },
    { "unsubscribed_", "Z", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LRxSubscription;", "add", "LRxSubscription;", "remove", "unsubscribeFromAll", "LJavaUtilCollection;", "(Ljava/util/Collection<Lrx/Subscription;>;)V", "Ljava/util/Set<Lrx/Subscription;>;" };
  static const J2ObjcClassInfo _RxSubscriptionsCompositeSubscription = { "CompositeSubscription", "rx.subscriptions", ptrTable, methods, fields, 7, 0x11, 9, 2, -1, -1, -1, -1, -1 };
  return &_RxSubscriptionsCompositeSubscription;
}

@end

void RxSubscriptionsCompositeSubscription_init(RxSubscriptionsCompositeSubscription *self) {
  NSObject_init(self);
}

RxSubscriptionsCompositeSubscription *new_RxSubscriptionsCompositeSubscription_init() {
  J2OBJC_NEW_IMPL(RxSubscriptionsCompositeSubscription, init)
}

RxSubscriptionsCompositeSubscription *create_RxSubscriptionsCompositeSubscription_init() {
  J2OBJC_CREATE_IMPL(RxSubscriptionsCompositeSubscription, init)
}

void RxSubscriptionsCompositeSubscription_initWithRxSubscriptionArray_(RxSubscriptionsCompositeSubscription *self, IOSObjectArray *subscriptions) {
  NSObject_init(self);
  self->subscriptions_ = new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(subscriptions));
}

RxSubscriptionsCompositeSubscription *new_RxSubscriptionsCompositeSubscription_initWithRxSubscriptionArray_(IOSObjectArray *subscriptions) {
  J2OBJC_NEW_IMPL(RxSubscriptionsCompositeSubscription, initWithRxSubscriptionArray_, subscriptions)
}

RxSubscriptionsCompositeSubscription *create_RxSubscriptionsCompositeSubscription_initWithRxSubscriptionArray_(IOSObjectArray *subscriptions) {
  J2OBJC_CREATE_IMPL(RxSubscriptionsCompositeSubscription, initWithRxSubscriptionArray_, subscriptions)
}

void RxSubscriptionsCompositeSubscription_unsubscribeFromAllWithJavaUtilCollection_(id<JavaUtilCollection> subscriptions) {
  RxSubscriptionsCompositeSubscription_initialize();
  if (subscriptions == nil) {
    return;
  }
  id<JavaUtilList> es = nil;
  for (id<RxSubscription> __strong s in subscriptions) {
    @try {
      [((id<RxSubscription>) nil_chk(s)) unsubscribe];
    }
    @catch (NSException *e) {
      if (es == nil) {
        es = new_JavaUtilArrayList_init();
      }
      [es addWithId:e];
    }
  }
  RxExceptionsExceptions_throwIfAnyWithJavaUtilList_(es);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubscriptionsCompositeSubscription)
