//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/schedulers/Timestamped.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "rx/schedulers/Timestamped.h"

@interface RxSchedulersTimestamped () {
 @public
  jlong timestampMillis_;
  id value_;
}

@end

J2OBJC_FIELD_SETTER(RxSchedulersTimestamped, value_, id)

@implementation RxSchedulersTimestamped

- (instancetype)initWithLong:(jlong)timestampMillis
                      withId:(id)value {
  RxSchedulersTimestamped_initWithLong_withId_(self, timestampMillis, value);
  return self;
}

- (jlong)getTimestampMillis {
  return timestampMillis_;
}

- (id)getValue {
  return value_;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return true;
  }
  if (obj == nil) {
    return false;
  }
  if (!([obj isKindOfClass:[RxSchedulersTimestamped class]])) {
    return false;
  }
  RxSchedulersTimestamped *other = (RxSchedulersTimestamped *) cast_chk(obj, [RxSchedulersTimestamped class]);
  if (timestampMillis_ != other->timestampMillis_) {
    return false;
  }
  if (value_ == nil) {
    if (other->value_ != nil) {
      return false;
    }
  }
  else if (![value_ isEqual:other->value_]) {
    return false;
  }
  return true;
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + (jint) (timestampMillis_ ^ (JreURShift64(timestampMillis_, 32)));
  result = prime * result + ((value_ == nil) ? 0 : ((jint) [nil_chk(value_) hash]));
  return result;
}

- (NSString *)description {
  return NSString_formatWithNSString_withNSObjectArray_(@"Timestamped(timestampMillis = %d, value = %s)", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(timestampMillis_), [nil_chk(value_) description] } count:2 type:NSObject_class_()]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withId:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "getTimestampMillis", "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { "getValue", "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { "isEqual:", "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { "hash", "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { "description", "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "timestampMillis_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "JLNSObject;", "(JTT;)V", "()TT;", "equals", "LNSObject;", "hashCode", "toString", "TT;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxSchedulersTimestamped = { "Timestamped", "rx.schedulers", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, -1, -1, 8, -1 };
  return &_RxSchedulersTimestamped;
}

@end

void RxSchedulersTimestamped_initWithLong_withId_(RxSchedulersTimestamped *self, jlong timestampMillis, id value) {
  NSObject_init(self);
  self->value_ = value;
  self->timestampMillis_ = timestampMillis;
}

RxSchedulersTimestamped *new_RxSchedulersTimestamped_initWithLong_withId_(jlong timestampMillis, id value) {
  J2OBJC_NEW_IMPL(RxSchedulersTimestamped, initWithLong_withId_, timestampMillis, value)
}

RxSchedulersTimestamped *create_RxSchedulersTimestamped_initWithLong_withId_(jlong timestampMillis, id value) {
  J2OBJC_CREATE_IMPL(RxSchedulersTimestamped, initWithLong_withId_, timestampMillis, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSchedulersTimestamped)
