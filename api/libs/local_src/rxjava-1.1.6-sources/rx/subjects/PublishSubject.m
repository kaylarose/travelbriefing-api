//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/subjects/PublishSubject.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "rx/Observable.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Action1.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/subjects/PublishSubject.h"
#include "rx/subjects/Subject.h"
#include "rx/subjects/SubjectSubscriptionManager.h"

@interface RxSubjectsPublishSubject () {
 @public
  RxInternalOperatorsNotificationLite *nl_;
}

@end

J2OBJC_FIELD_SETTER(RxSubjectsPublishSubject, nl_, RxInternalOperatorsNotificationLite *)

@interface RxSubjectsPublishSubject_$1 : NSObject < RxFunctionsAction1 > {
 @public
  RxSubjectsSubjectSubscriptionManager *val$state_;
}

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o;

- (instancetype)initWithRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsPublishSubject_$1)

J2OBJC_FIELD_SETTER(RxSubjectsPublishSubject_$1, val$state_, RxSubjectsSubjectSubscriptionManager *)

__attribute__((unused)) static void RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsPublishSubject_$1 *self, RxSubjectsSubjectSubscriptionManager *capture$0);

__attribute__((unused)) static RxSubjectsPublishSubject_$1 *new_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSubjectsPublishSubject_$1 *create_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsPublishSubject_$1)

@implementation RxSubjectsPublishSubject

+ (RxSubjectsPublishSubject *)create {
  return RxSubjectsPublishSubject_create();
}

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe
        withRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)state {
  RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(self, onSubscribe, state);
  return self;
}

- (void)onCompleted {
  if (((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_))->active_) {
    id n = [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) completed];
    {
      IOSObjectArray *a__ = [state_ terminateWithId:n];
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxSubjectsSubjectSubscriptionManager_SubjectObserver *bo = *b__++;
        [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(bo)) emitNextWithId:n withRxInternalOperatorsNotificationLite:state_->nl_];
      }
    }
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_))->active_) {
    id n = [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) errorWithNSException:e];
    id<JavaUtilList> errors = nil;
    {
      IOSObjectArray *a__ = [state_ terminateWithId:n];
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxSubjectsSubjectSubscriptionManager_SubjectObserver *bo = *b__++;
        @try {
          [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(bo)) emitNextWithId:n withRxInternalOperatorsNotificationLite:state_->nl_];
        }
        @catch (NSException *e2) {
          if (errors == nil) {
            errors = new_JavaUtilArrayList_init();
          }
          [errors addWithId:e2];
        }
      }
    }
    RxExceptionsExceptions_throwIfAnyWithJavaUtilList_(errors);
  }
}

- (void)onNextWithId:(id)v {
  {
    IOSObjectArray *a__ = [((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_)) observers];
    RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      RxSubjectsSubjectSubscriptionManager_SubjectObserver *bo = *b__++;
      [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(bo)) onNextWithId:v];
    }
  }
}

- (jboolean)hasObservers {
  return ((IOSObjectArray *) nil_chk([((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_)) observers]))->size_ > 0;
}

- (jboolean)hasThrowable {
  id o = [((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_)) getLatest];
  return [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) isErrorWithId:o];
}

- (jboolean)hasCompleted {
  id o = [((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_)) getLatest];
  return o != nil && ![((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) isErrorWithId:o];
}

- (NSException *)getThrowable {
  id o = [((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_)) getLatest];
  if ([((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) isErrorWithId:o]) {
    return [nl_ getErrorWithId:o];
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", "LRxSubjectsPublishSubject;", 0x9, -1, -1, -1, 0, -1, -1 },
    { "initWithRxObservable_OnSubscribe:withRxSubjectsSubjectSubscriptionManager:", NULL, 0x4, -1, 1, -1, 2, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 5, 6, -1, 7, -1, -1 },
    { "hasObservers", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "hasThrowable", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "hasCompleted", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { "getThrowable", "LNSException;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", "LRxSubjectsSubjectSubscriptionManager;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "nl_", "LRxInternalOperatorsNotificationLite;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "<T:Ljava/lang/Object;>()Lrx/subjects/PublishSubject<TT;>;", "LRxObservable_OnSubscribe;LRxSubjectsSubjectSubscriptionManager;", "(Lrx/Observable$OnSubscribe<TT;>;Lrx/subjects/SubjectSubscriptionManager<TT;>;)V", "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "Lrx/subjects/SubjectSubscriptionManager<TT;>;", "Lrx/internal/operators/NotificationLite<TT;>;", "<T:Ljava/lang/Object;>Lrx/subjects/Subject<TT;TT;>;" };
  static const J2ObjcClassInfo _RxSubjectsPublishSubject = { "PublishSubject", "rx.subjects", ptrTable, methods, fields, 7, 0x11, 9, 2, -1, -1, -1, 10, -1 };
  return &_RxSubjectsPublishSubject;
}

@end

RxSubjectsPublishSubject *RxSubjectsPublishSubject_create() {
  RxSubjectsPublishSubject_initialize();
  RxSubjectsSubjectSubscriptionManager *state = new_RxSubjectsSubjectSubscriptionManager_init();
  state->onTerminated_ = new_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(state);
  return new_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(state, state);
}

void RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(RxSubjectsPublishSubject *self, id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state) {
  RxSubjectsSubject_initWithRxObservable_OnSubscribe_(self, onSubscribe);
  self->nl_ = RxInternalOperatorsNotificationLite_instance();
  self->state_ = state;
}

RxSubjectsPublishSubject *new_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state) {
  J2OBJC_NEW_IMPL(RxSubjectsPublishSubject, initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_, onSubscribe, state)
}

RxSubjectsPublishSubject *create_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state) {
  J2OBJC_CREATE_IMPL(RxSubjectsPublishSubject, initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_, onSubscribe, state)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsPublishSubject)

@implementation RxSubjectsPublishSubject_$1

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o)) emitFirstWithId:[((RxSubjectsSubjectSubscriptionManager *) nil_chk(val$state_)) getLatest] withRxInternalOperatorsNotificationLite:val$state_->nl_];
}

- (instancetype)initWithRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)capture$0 {
  RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "initWithRxSubjectsSubjectSubscriptionManager:", NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$state_", "LRxSubjectsSubjectSubscriptionManager;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V", "LRxSubjectsSubjectSubscriptionManager;", "(Lrx/subjects/SubjectSubscriptionManager<TT;>;)V", "Lrx/subjects/SubjectSubscriptionManager<TT;>;", "LRxSubjectsPublishSubject;", "create", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;" };
  static const J2ObjcClassInfo _RxSubjectsPublishSubject_$1 = { "", "rx.subjects", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxSubjectsPublishSubject_$1;
}

@end

void RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsPublishSubject_$1 *self, RxSubjectsSubjectSubscriptionManager *capture$0) {
  self->val$state_ = capture$0;
  NSObject_init(self);
}

RxSubjectsPublishSubject_$1 *new_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0) {
  J2OBJC_NEW_IMPL(RxSubjectsPublishSubject_$1, initWithRxSubjectsSubjectSubscriptionManager_, capture$0)
}

RxSubjectsPublishSubject_$1 *create_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0) {
  J2OBJC_CREATE_IMPL(RxSubjectsPublishSubject_$1, initWithRxSubjectsSubjectSubscriptionManager_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsPublishSubject_$1)
