//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/subjects/SerializedSubject.java
//

#include "J2ObjC_source.h"
#include "rx/Observable.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/observers/SerializedObserver.h"
#include "rx/subjects/SerializedSubject.h"
#include "rx/subjects/Subject.h"

@interface RxSubjectsSerializedSubject () {
 @public
  RxObserversSerializedObserver *observer_;
  RxSubjectsSubject *actual_;
}

@end

J2OBJC_FIELD_SETTER(RxSubjectsSerializedSubject, observer_, RxObserversSerializedObserver *)
J2OBJC_FIELD_SETTER(RxSubjectsSerializedSubject, actual_, RxSubjectsSubject *)

@interface RxSubjectsSerializedSubject_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxSubjectsSubject *val$actual_;
}

- (void)callWithId:(RxSubscriber *)child;

- (instancetype)initWithRxSubjectsSubject:(RxSubjectsSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsSerializedSubject_$1)

J2OBJC_FIELD_SETTER(RxSubjectsSerializedSubject_$1, val$actual_, RxSubjectsSubject *)

__attribute__((unused)) static void RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(RxSubjectsSerializedSubject_$1 *self, RxSubjectsSubject *capture$0);

__attribute__((unused)) static RxSubjectsSerializedSubject_$1 *new_RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSubjectsSerializedSubject_$1 *create_RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsSerializedSubject_$1)

@implementation RxSubjectsSerializedSubject

- (instancetype)initWithRxSubjectsSubject:(RxSubjectsSubject *)actual {
  RxSubjectsSerializedSubject_initWithRxSubjectsSubject_(self, actual);
  return self;
}

- (void)onCompleted {
  [((RxObserversSerializedObserver *) nil_chk(observer_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxObserversSerializedObserver *) nil_chk(observer_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  [((RxObserversSerializedObserver *) nil_chk(observer_)) onNextWithId:t];
}

- (jboolean)hasObservers {
  return [((RxSubjectsSubject *) nil_chk(actual_)) hasObservers];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubjectsSubject:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { "hasObservers", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LRxObserversSerializedObserver;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "actual_", "LRxSubjectsSubject;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LRxSubjectsSubject;", "(Lrx/subjects/Subject<TT;TR;>;)V", "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "Lrx/observers/SerializedObserver<TT;>;", "Lrx/subjects/Subject<TT;TR;>;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/subjects/Subject<TT;TR;>;" };
  static const J2ObjcClassInfo _RxSubjectsSerializedSubject = { "SerializedSubject", "rx.subjects", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, 9, -1 };
  return &_RxSubjectsSerializedSubject;
}

@end

void RxSubjectsSerializedSubject_initWithRxSubjectsSubject_(RxSubjectsSerializedSubject *self, RxSubjectsSubject *actual) {
  RxSubjectsSubject_initWithRxObservable_OnSubscribe_(self, new_RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(actual));
  self->actual_ = actual;
  self->observer_ = new_RxObserversSerializedObserver_initWithRxObserver_(actual);
}

RxSubjectsSerializedSubject *new_RxSubjectsSerializedSubject_initWithRxSubjectsSubject_(RxSubjectsSubject *actual) {
  J2OBJC_NEW_IMPL(RxSubjectsSerializedSubject, initWithRxSubjectsSubject_, actual)
}

RxSubjectsSerializedSubject *create_RxSubjectsSerializedSubject_initWithRxSubjectsSubject_(RxSubjectsSubject *actual) {
  J2OBJC_CREATE_IMPL(RxSubjectsSerializedSubject, initWithRxSubjectsSubject_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsSerializedSubject)

@implementation RxSubjectsSerializedSubject_$1

- (void)callWithId:(RxSubscriber *)child {
  (void) [((RxSubjectsSubject *) nil_chk(val$actual_)) unsafeSubscribeWithRxSubscriber:child];
}

- (instancetype)initWithRxSubjectsSubject:(RxSubjectsSubject *)capture$0 {
  RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "initWithRxSubjectsSubject:", NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$actual_", "LRxSubjectsSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TR;>;)V", "LRxSubjectsSubject;", "(Lrx/subjects/Subject<TT;TR;>;)V", "Lrx/subjects/Subject<TT;TR;>;", "LRxSubjectsSerializedSubject;", "initWithRxSubjectsSubject:", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TR;>;" };
  static const J2ObjcClassInfo _RxSubjectsSerializedSubject_$1 = { "", "rx.subjects", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxSubjectsSerializedSubject_$1;
}

@end

void RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(RxSubjectsSerializedSubject_$1 *self, RxSubjectsSubject *capture$0) {
  self->val$actual_ = capture$0;
  NSObject_init(self);
}

RxSubjectsSerializedSubject_$1 *new_RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxSubjectsSerializedSubject_$1, initWithRxSubjectsSubject_, capture$0)
}

RxSubjectsSerializedSubject_$1 *create_RxSubjectsSerializedSubject_$1_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxSubjectsSerializedSubject_$1, initWithRxSubjectsSubject_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsSerializedSubject_$1)
