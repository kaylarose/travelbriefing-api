//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/subjects/SubjectSubscriptionManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "rx/Observer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/functions/Action1.h"
#include "rx/functions/Actions.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/subjects/SubjectSubscriptionManager.h"
#include "rx/subscriptions/Subscriptions.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

/*!
 */
inline jlong RxSubjectsSubjectSubscriptionManager_get_serialVersionUID();
#define RxSubjectsSubjectSubscriptionManager_serialVersionUID 6035251036011671568LL
J2OBJC_STATIC_FIELD_CONSTANT(RxSubjectsSubjectSubscriptionManager, serialVersionUID, jlong)

@interface RxSubjectsSubjectSubscriptionManager_SubjectObserver () {
 @public
  /*!
   @brief Indicate where the observer is at replaying.
   */
  volatile_id index_;
}

@end

J2OBJC_VOLATILE_FIELD_SETTER(RxSubjectsSubjectSubscriptionManager_SubjectObserver, index_, id)

@interface RxSubjectsSubjectSubscriptionManager_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxSubjectsSubjectSubscriptionManager *this$0_;
  RxSubjectsSubjectSubscriptionManager_SubjectObserver *val$bo_;
}

- (void)call;

- (instancetype)initWithRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)outer$
    withRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsSubjectSubscriptionManager_$1)

J2OBJC_FIELD_SETTER(RxSubjectsSubjectSubscriptionManager_$1, this$0_, RxSubjectsSubjectSubscriptionManager *)
J2OBJC_FIELD_SETTER(RxSubjectsSubjectSubscriptionManager_$1, val$bo_, RxSubjectsSubjectSubscriptionManager_SubjectObserver *)

__attribute__((unused)) static void RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsSubjectSubscriptionManager_$1 *self, RxSubjectsSubjectSubscriptionManager *outer$, RxSubjectsSubjectSubscriptionManager_SubjectObserver *capture$0);

__attribute__((unused)) static RxSubjectsSubjectSubscriptionManager_$1 *new_RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsSubjectSubscriptionManager *outer$, RxSubjectsSubjectSubscriptionManager_SubjectObserver *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSubjectsSubjectSubscriptionManager_$1 *create_RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsSubjectSubscriptionManager *outer$, RxSubjectsSubjectSubscriptionManager_SubjectObserver *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsSubjectSubscriptionManager_$1)

@implementation RxSubjectsSubjectSubscriptionManager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSubjectsSubjectSubscriptionManager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)callWithId:(RxSubscriber *)child {
  RxSubjectsSubjectSubscriptionManager_SubjectObserver *bo = new_RxSubjectsSubjectSubscriptionManager_SubjectObserver_initWithRxSubscriber_(child);
  [self addUnsubscriberWithRxSubscriber:child withRxSubjectsSubjectSubscriptionManager_SubjectObserver:bo];
  [((id<RxFunctionsAction1>) nil_chk(onStart_)) callWithId:bo];
  if (![((RxSubscriber *) nil_chk(child)) isUnsubscribed]) {
    if ([self addWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:bo] && [child isUnsubscribed]) {
      [self removeWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:bo];
    }
  }
}

- (void)addUnsubscriberWithRxSubscriber:(RxSubscriber *)child
withRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)bo {
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(self, bo))];
}

- (void)setLatestWithId:(id)value {
  (void) JreVolatileStrongAssign(&latest_, value);
}

- (id)getLatest {
  return JreLoadVolatileId(&latest_);
}

- (IOSObjectArray *)observers {
  return ((RxSubjectsSubjectSubscriptionManager_State *) nil_chk([self get]))->observers_;
}

- (jboolean)addWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  do {
    RxSubjectsSubjectSubscriptionManager_State *oldState = [self get];
    if (((RxSubjectsSubjectSubscriptionManager_State *) nil_chk(oldState))->terminated_) {
      [((id<RxFunctionsAction1>) nil_chk(onTerminated_)) callWithId:o];
      return false;
    }
    RxSubjectsSubjectSubscriptionManager_State *newState = [oldState addWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:o];
    if ([self compareAndSetWithId:oldState withId:newState]) {
      [((id<RxFunctionsAction1>) nil_chk(onAdded_)) callWithId:o];
      return true;
    }
  }
  while (true);
}

- (void)removeWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  do {
    RxSubjectsSubjectSubscriptionManager_State *oldState = [self get];
    if (((RxSubjectsSubjectSubscriptionManager_State *) nil_chk(oldState))->terminated_) {
      return;
    }
    RxSubjectsSubjectSubscriptionManager_State *newState = [oldState removeWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:o];
    if (newState == oldState || [self compareAndSetWithId:oldState withId:newState]) {
      return;
    }
  }
  while (true);
}

- (IOSObjectArray *)nextWithId:(id)n {
  [self setLatestWithId:n];
  return ((RxSubjectsSubjectSubscriptionManager_State *) nil_chk([self get]))->observers_;
}

- (IOSObjectArray *)terminateWithId:(id)n {
  [self setLatestWithId:n];
  active_ = false;
  RxSubjectsSubjectSubscriptionManager_State *oldState = [self get];
  if (((RxSubjectsSubjectSubscriptionManager_State *) nil_chk(oldState))->terminated_) {
    return JreLoadStatic(RxSubjectsSubjectSubscriptionManager_State, NO_OBSERVERS);
  }
  return ((RxSubjectsSubjectSubscriptionManager_State *) nil_chk([self getAndSetWithId:JreLoadStatic(RxSubjectsSubjectSubscriptionManager_State, TERMINATED)]))->observers_;
}

- (void)__javaClone:(RxSubjectsSubjectSubscriptionManager *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&latest_, &original->latest_);
}

- (void)dealloc {
  JreReleaseVolatile(&latest_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { "callWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "addUnsubscriberWithRxSubscriber:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "V", 0x0, 3, 4, -1, 5, -1, -1 },
    { "setLatestWithId:", "V", 0x0, 6, 7, -1, -1, -1, -1 },
    { "getLatest", "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
    { "observers", "[LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", 0x0, -1, -1, -1, -1, -1, -1 },
    { "addWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "Z", 0x0, 8, 9, -1, 10, -1, -1 },
    { "removeWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "V", 0x0, 11, 9, -1, 12, -1, -1 },
    { "nextWithId:", "[LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", 0x0, 13, 7, -1, -1, -1, -1 },
    { "terminateWithId:", "[LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", 0x0, 14, 7, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxSubjectsSubjectSubscriptionManager_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "latest_", "LNSObject;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "active_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "onStart_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x0, -1, -1, 15, -1 },
    { "onAdded_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x0, -1, -1, 15, -1 },
    { "onTerminated_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x0, -1, -1, 15, -1 },
    { "nl_", "LRxInternalOperatorsNotificationLite;", .constantValue.asLong = 0, 0x11, -1, -1, 16, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "addUnsubscriber", "LRxSubscriber;LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", "(Lrx/Subscriber<-TT;>;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V", "setLatest", "LNSObject;", "add", "LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)Z", "remove", "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V", "next", "terminate", "Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;", "Lrx/internal/operators/NotificationLite<TT;>;", "LRxSubjectsSubjectSubscriptionManager_State;LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<Lrx/subjects/SubjectSubscriptionManager$State<TT;>;>;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxSubjectsSubjectSubscriptionManager = { "SubjectSubscriptionManager", "rx.subjects", ptrTable, methods, fields, 7, 0x10, 10, 7, -1, 17, -1, 18, -1 };
  return &_RxSubjectsSubjectSubscriptionManager;
}

@end

void RxSubjectsSubjectSubscriptionManager_init(RxSubjectsSubjectSubscriptionManager *self) {
  JavaUtilConcurrentAtomicAtomicReference_initWithId_(self, JreLoadStatic(RxSubjectsSubjectSubscriptionManager_State, EMPTY));
  self->active_ = true;
  self->onStart_ = RxFunctionsActions_empty();
  self->onAdded_ = RxFunctionsActions_empty();
  self->onTerminated_ = RxFunctionsActions_empty();
  self->nl_ = RxInternalOperatorsNotificationLite_instance();
}

RxSubjectsSubjectSubscriptionManager *new_RxSubjectsSubjectSubscriptionManager_init() {
  J2OBJC_NEW_IMPL(RxSubjectsSubjectSubscriptionManager, init)
}

RxSubjectsSubjectSubscriptionManager *create_RxSubjectsSubjectSubscriptionManager_init() {
  J2OBJC_CREATE_IMPL(RxSubjectsSubjectSubscriptionManager, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsSubjectSubscriptionManager)

J2OBJC_INITIALIZED_DEFN(RxSubjectsSubjectSubscriptionManager_State)

IOSObjectArray *RxSubjectsSubjectSubscriptionManager_State_NO_OBSERVERS;
RxSubjectsSubjectSubscriptionManager_State *RxSubjectsSubjectSubscriptionManager_State_TERMINATED;
RxSubjectsSubjectSubscriptionManager_State *RxSubjectsSubjectSubscriptionManager_State_EMPTY;

@implementation RxSubjectsSubjectSubscriptionManager_State

+ (IOSObjectArray *)NO_OBSERVERS {
  return RxSubjectsSubjectSubscriptionManager_State_NO_OBSERVERS;
}

+ (RxSubjectsSubjectSubscriptionManager_State *)TERMINATED {
  return RxSubjectsSubjectSubscriptionManager_State_TERMINATED;
}

+ (RxSubjectsSubjectSubscriptionManager_State *)EMPTY {
  return RxSubjectsSubjectSubscriptionManager_State_EMPTY;
}

- (instancetype)initWithBoolean:(jboolean)terminated
withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray:(IOSObjectArray *)observers {
  RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(self, terminated, observers);
  return self;
}

- (RxSubjectsSubjectSubscriptionManager_State *)addWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  IOSObjectArray *a = observers_;
  jint n = ((IOSObjectArray *) nil_chk(a))->size_;
  IOSObjectArray *b = [IOSObjectArray newArrayWithLength:n + 1 type:RxSubjectsSubjectSubscriptionManager_SubjectObserver_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(observers_, 0, b, 0, n);
  (void) IOSObjectArray_Set(b, n, o);
  return new_RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(terminated_, b);
}

- (RxSubjectsSubjectSubscriptionManager_State *)removeWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  IOSObjectArray *a = observers_;
  jint n = ((IOSObjectArray *) nil_chk(a))->size_;
  if (n == 1 && IOSObjectArray_Get(a, 0) == o) {
    return RxSubjectsSubjectSubscriptionManager_State_EMPTY;
  }
  else if (n == 0) {
    return self;
  }
  IOSObjectArray *b = [IOSObjectArray newArrayWithLength:n - 1 type:RxSubjectsSubjectSubscriptionManager_SubjectObserver_class_()];
  jint j = 0;
  for (jint i = 0; i < n; i++) {
    RxSubjectsSubjectSubscriptionManager_SubjectObserver *ai = IOSObjectArray_Get(a, i);
    if (ai != o) {
      if (j == n - 1) {
        return self;
      }
      (void) IOSObjectArray_Set(b, j++, ai);
    }
  }
  if (j == 0) {
    return RxSubjectsSubjectSubscriptionManager_State_EMPTY;
  }
  if (j < n - 1) {
    IOSObjectArray *c = [IOSObjectArray newArrayWithLength:j type:RxSubjectsSubjectSubscriptionManager_SubjectObserver_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, c, 0, j);
    b = c;
  }
  return new_RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(terminated_, b);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "addWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "LRxSubjectsSubjectSubscriptionManager_State;", 0x1, 1, 2, -1, -1, -1, -1 },
    { "removeWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "LRxSubjectsSubjectSubscriptionManager_State;", 0x1, 3, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "terminated_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "observers_", "[LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "NO_OBSERVERS", "[LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", .constantValue.asLong = 0, 0x18, -1, 4, -1, -1 },
    { "TERMINATED", "LRxSubjectsSubjectSubscriptionManager_State;", .constantValue.asLong = 0, 0x18, -1, 5, -1, -1 },
    { "EMPTY", "LRxSubjectsSubjectSubscriptionManager_State;", .constantValue.asLong = 0, 0x18, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "Z[LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", "add", "LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", "remove", &RxSubjectsSubjectSubscriptionManager_State_NO_OBSERVERS, &RxSubjectsSubjectSubscriptionManager_State_TERMINATED, &RxSubjectsSubjectSubscriptionManager_State_EMPTY, "LRxSubjectsSubjectSubscriptionManager;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxSubjectsSubjectSubscriptionManager_State = { "State", "rx.subjects", ptrTable, methods, fields, 7, 0x1c, 3, 5, 7, -1, -1, 8, -1 };
  return &_RxSubjectsSubjectSubscriptionManager_State;
}

+ (void)initialize {
  if (self == [RxSubjectsSubjectSubscriptionManager_State class]) {
    RxSubjectsSubjectSubscriptionManager_State_NO_OBSERVERS = [IOSObjectArray newArrayWithLength:0 type:RxSubjectsSubjectSubscriptionManager_SubjectObserver_class_()];
    RxSubjectsSubjectSubscriptionManager_State_TERMINATED = new_RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(true, RxSubjectsSubjectSubscriptionManager_State_NO_OBSERVERS);
    RxSubjectsSubjectSubscriptionManager_State_EMPTY = new_RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(false, RxSubjectsSubjectSubscriptionManager_State_NO_OBSERVERS);
    J2OBJC_SET_INITIALIZED(RxSubjectsSubjectSubscriptionManager_State)
  }
}

@end

void RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(RxSubjectsSubjectSubscriptionManager_State *self, jboolean terminated, IOSObjectArray *observers) {
  NSObject_init(self);
  self->terminated_ = terminated;
  self->observers_ = observers;
}

RxSubjectsSubjectSubscriptionManager_State *new_RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(jboolean terminated, IOSObjectArray *observers) {
  J2OBJC_NEW_IMPL(RxSubjectsSubjectSubscriptionManager_State, initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_, terminated, observers)
}

RxSubjectsSubjectSubscriptionManager_State *create_RxSubjectsSubjectSubscriptionManager_State_initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_(jboolean terminated, IOSObjectArray *observers) {
  J2OBJC_CREATE_IMPL(RxSubjectsSubjectSubscriptionManager_State, initWithBoolean_withRxSubjectsSubjectSubscriptionManager_SubjectObserverArray_, terminated, observers)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsSubjectSubscriptionManager_State)

@implementation RxSubjectsSubjectSubscriptionManager_SubjectObserver

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual {
  RxSubjectsSubjectSubscriptionManager_SubjectObserver_initWithRxSubscriber_(self, actual);
  return self;
}

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(actual_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(actual_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(actual_)) onCompleted];
}

- (void)emitNextWithId:(id)n
withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)nl {
  if (!fastPath_) {
    @synchronized(self) {
      first_ = false;
      if (emitting_) {
        if (queue_ == nil) {
          queue_ = new_JavaUtilArrayList_init();
        }
        [queue_ addWithId:n];
        return;
      }
    }
    fastPath_ = true;
  }
  [((RxInternalOperatorsNotificationLite *) nil_chk(nl)) acceptWithRxObserver:actual_ withId:n];
}

- (void)emitFirstWithId:(id)n
withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)nl {
  @synchronized(self) {
    if (!first_ || emitting_) {
      return;
    }
    first_ = false;
    emitting_ = (n != nil);
  }
  if (n != nil) {
    [self emitLoopWithJavaUtilList:nil withId:n withRxInternalOperatorsNotificationLite:nl];
  }
}

- (void)emitLoopWithJavaUtilList:(id<JavaUtilList>)localQueue
                          withId:(id)current
withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)nl {
  jboolean once = true;
  jboolean skipFinal = false;
  @try {
    do {
      if (localQueue != nil) {
        for (id __strong n in localQueue) {
          [self acceptWithId:n withRxInternalOperatorsNotificationLite:nl];
        }
      }
      if (once) {
        once = false;
        [self acceptWithId:current withRxInternalOperatorsNotificationLite:nl];
      }
      @synchronized(self) {
        localQueue = queue_;
        queue_ = nil;
        if (localQueue == nil) {
          emitting_ = false;
          skipFinal = true;
          break;
        }
      }
    }
    while (true);
  }
  @finally {
    if (!skipFinal) {
      @synchronized(self) {
        emitting_ = false;
      }
    }
  }
}

- (void)acceptWithId:(id)n
withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)nl {
  if (n != nil) {
    [((RxInternalOperatorsNotificationLite *) nil_chk(nl)) acceptWithRxObserver:actual_ withId:n];
  }
}

- (id<RxObserver>)getActual {
  return actual_;
}

- (id)index {
  return JreLoadVolatileId(&index_);
}

- (void)indexWithId:(id)newIndex {
  (void) JreVolatileStrongAssign(&self->index_, newIndex);
}

- (void)__javaClone:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&index_, &original->index_);
}

- (void)dealloc {
  JreReleaseVolatile(&index_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "emitNextWithId:withRxInternalOperatorsNotificationLite:", "V", 0x4, 7, 8, -1, 9, -1, -1 },
    { "emitFirstWithId:withRxInternalOperatorsNotificationLite:", "V", 0x4, 10, 8, -1, 9, -1, -1 },
    { "emitLoopWithJavaUtilList:withId:withRxInternalOperatorsNotificationLite:", "V", 0x4, 11, 12, -1, 13, -1, -1 },
    { "acceptWithId:withRxInternalOperatorsNotificationLite:", "V", 0x4, 14, 8, -1, 9, -1, -1 },
    { "getActual", "LRxObserver;", 0x4, -1, -1, -1, 15, -1, -1 },
    { "index", "LNSObject;", 0x1, -1, -1, -1, 16, -1, -1 },
    { "indexWithId:", "V", 0x1, 17, 3, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 18, -1 },
    { "first_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "queue_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 19, -1 },
    { "fastPath_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "caughtUp_", "Z", .constantValue.asLong = 0, 0x44, -1, -1, -1, -1 },
    { "index_", "LNSObject;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "emitNext", "LNSObject;LRxInternalOperatorsNotificationLite;", "(Ljava/lang/Object;Lrx/internal/operators/NotificationLite<TT;>;)V", "emitFirst", "emitLoop", "LJavaUtilList;LNSObject;LRxInternalOperatorsNotificationLite;", "(Ljava/util/List<Ljava/lang/Object;>;Ljava/lang/Object;Lrx/internal/operators/NotificationLite<TT;>;)V", "accept", "()Lrx/Observer<-TT;>;", "<I:Ljava/lang/Object;>()TI;", "index", "Lrx/Subscriber<-TT;>;", "Ljava/util/List<Ljava/lang/Object;>;", "LRxSubjectsSubjectSubscriptionManager;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observer<TT;>;" };
  static const J2ObjcClassInfo _RxSubjectsSubjectSubscriptionManager_SubjectObserver = { "SubjectObserver", "rx.subjects", ptrTable, methods, fields, 7, 0x1c, 11, 7, 20, -1, -1, 21, -1 };
  return &_RxSubjectsSubjectSubscriptionManager_SubjectObserver;
}

@end

void RxSubjectsSubjectSubscriptionManager_SubjectObserver_initWithRxSubscriber_(RxSubjectsSubjectSubscriptionManager_SubjectObserver *self, RxSubscriber *actual) {
  NSObject_init(self);
  self->first_ = true;
  self->actual_ = actual;
}

RxSubjectsSubjectSubscriptionManager_SubjectObserver *new_RxSubjectsSubjectSubscriptionManager_SubjectObserver_initWithRxSubscriber_(RxSubscriber *actual) {
  J2OBJC_NEW_IMPL(RxSubjectsSubjectSubscriptionManager_SubjectObserver, initWithRxSubscriber_, actual)
}

RxSubjectsSubjectSubscriptionManager_SubjectObserver *create_RxSubjectsSubjectSubscriptionManager_SubjectObserver_initWithRxSubscriber_(RxSubscriber *actual) {
  J2OBJC_CREATE_IMPL(RxSubjectsSubjectSubscriptionManager_SubjectObserver, initWithRxSubscriber_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsSubjectSubscriptionManager_SubjectObserver)

@implementation RxSubjectsSubjectSubscriptionManager_$1

- (void)call {
  [this$0_ removeWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:val$bo_];
}

- (instancetype)initWithRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)outer$
    withRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)capture$0 {
  RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxSubjectsSubjectSubscriptionManager:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxSubjectsSubjectSubscriptionManager;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$bo_", "LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxSubjectsSubjectSubscriptionManager;LRxSubjectsSubjectSubscriptionManager_SubjectObserver;", "(Lrx/subjects/SubjectSubscriptionManager;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V", "Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;", "LRxSubjectsSubjectSubscriptionManager;", "addUnsubscriberWithRxSubscriber:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:" };
  static const J2ObjcClassInfo _RxSubjectsSubjectSubscriptionManager_$1 = { "", "rx.subjects", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxSubjectsSubjectSubscriptionManager_$1;
}

@end

void RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsSubjectSubscriptionManager_$1 *self, RxSubjectsSubjectSubscriptionManager *outer$, RxSubjectsSubjectSubscriptionManager_SubjectObserver *capture$0) {
  self->this$0_ = outer$;
  self->val$bo_ = capture$0;
  NSObject_init(self);
}

RxSubjectsSubjectSubscriptionManager_$1 *new_RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsSubjectSubscriptionManager *outer$, RxSubjectsSubjectSubscriptionManager_SubjectObserver *capture$0) {
  J2OBJC_NEW_IMPL(RxSubjectsSubjectSubscriptionManager_$1, initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_, outer$, capture$0)
}

RxSubjectsSubjectSubscriptionManager_$1 *create_RxSubjectsSubjectSubscriptionManager_$1_initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsSubjectSubscriptionManager *outer$, RxSubjectsSubjectSubscriptionManager_SubjectObserver *capture$0) {
  J2OBJC_CREATE_IMPL(RxSubjectsSubjectSubscriptionManager_$1, initWithRxSubjectsSubjectSubscriptionManager_withRxSubjectsSubjectSubscriptionManager_SubjectObserver_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsSubjectSubscriptionManager_$1)
