//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorTakeUntilPredicate.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorTakeUntilPredicate")
#ifdef RESTRICT_RxInternalOperatorsOperatorTakeUntilPredicate
#define INCLUDE_ALL_RxInternalOperatorsOperatorTakeUntilPredicate 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorTakeUntilPredicate 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorTakeUntilPredicate

#if !defined (RxInternalOperatorsOperatorTakeUntilPredicate_) && (INCLUDE_ALL_RxInternalOperatorsOperatorTakeUntilPredicate || defined(INCLUDE_RxInternalOperatorsOperatorTakeUntilPredicate))
#define RxInternalOperatorsOperatorTakeUntilPredicate_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc1;

/*!
 @brief Returns an Observable that emits items emitted by the source Observable until
 the provided predicate returns false
 <p>
 */
@interface RxInternalOperatorsOperatorTakeUntilPredicate : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc1> stopPredicate_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)stopPredicate;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeUntilPredicate)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeUntilPredicate, stopPredicate_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorTakeUntilPredicate_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTakeUntilPredicate *self, id<RxFunctionsFunc1> stopPredicate);

FOUNDATION_EXPORT RxInternalOperatorsOperatorTakeUntilPredicate *new_RxInternalOperatorsOperatorTakeUntilPredicate_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> stopPredicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorTakeUntilPredicate *create_RxInternalOperatorsOperatorTakeUntilPredicate_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> stopPredicate);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeUntilPredicate)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorTakeUntilPredicate")
