//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorSkip.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "rx/Producer.h"
#include "rx/Subscriber.h"
#include "rx/internal/operators/OperatorSkip.h"

@interface RxInternalOperatorsOperatorSkip_$1 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorSkip *this$0_;
  jint skipped_;
  RxSubscriber *val$child_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (instancetype)initWithRxInternalOperatorsOperatorSkip:(RxInternalOperatorsOperatorSkip *)outer$
                                       withRxSubscriber:(RxSubscriber *)capture$0
                                       withRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSkip_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSkip_$1, this$0_, RxInternalOperatorsOperatorSkip *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSkip_$1, val$child_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkip_$1 *self, RxInternalOperatorsOperatorSkip *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSkip_$1 *new_RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkip *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSkip_$1 *create_RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkip *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSkip_$1)

@implementation RxInternalOperatorsOperatorSkip

- (instancetype)initWithInt:(jint)n {
  RxInternalOperatorsOperatorSkip_initWithInt_(self, n);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  return new_RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(self, child, child);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "callWithId:", "LRxSubscriber;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "toSkip_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSkip = { "OperatorSkip", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, 4, -1 };
  return &_RxInternalOperatorsOperatorSkip;
}

@end

void RxInternalOperatorsOperatorSkip_initWithInt_(RxInternalOperatorsOperatorSkip *self, jint n) {
  NSObject_init(self);
  if (n < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"n >= 0 required but it was ", n));
  }
  self->toSkip_ = n;
}

RxInternalOperatorsOperatorSkip *new_RxInternalOperatorsOperatorSkip_initWithInt_(jint n) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSkip, initWithInt_, n)
}

RxInternalOperatorsOperatorSkip *create_RxInternalOperatorsOperatorSkip_initWithInt_(jint n) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSkip, initWithInt_, n)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSkip)

@implementation RxInternalOperatorsOperatorSkip_$1

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$child_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$child_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  if (skipped_ >= this$0_->toSkip_) {
    [((RxSubscriber *) nil_chk(val$child_)) onNextWithId:t];
  }
  else {
    skipped_ += 1;
  }
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((RxSubscriber *) nil_chk(val$child_)) setProducerWithRxProducer:producer];
  [((id<RxProducer>) nil_chk(producer)) requestWithLong:this$0_->toSkip_];
}

- (instancetype)initWithRxInternalOperatorsOperatorSkip:(RxInternalOperatorsOperatorSkip *)outer$
                                       withRxSubscriber:(RxSubscriber *)capture$0
                                       withRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(self, outer$, capture$0, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "setProducerWithRxProducer:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorSkip:withRxSubscriber:withRxSubscriber:", NULL, 0x0, -1, 7, -1, 8, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorSkip;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "skipped_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "setProducer", "LRxProducer;", "LRxInternalOperatorsOperatorSkip;LRxSubscriber;LRxSubscriber;", "(Lrx/internal/operators/OperatorSkip;Lrx/Subscriber<-TT;>;Lrx/Subscriber<*>;)V", "Lrx/Subscriber<-TT;>;", "LRxInternalOperatorsOperatorSkip;", "callWithId:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSkip_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 3, 10, -1, 11, 12, -1 };
  return &_RxInternalOperatorsOperatorSkip_$1;
}

@end

void RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkip_$1 *self, RxInternalOperatorsOperatorSkip *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  self->this$0_ = outer$;
  self->val$child_ = capture$0;
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
  self->skipped_ = 0;
}

RxInternalOperatorsOperatorSkip_$1 *new_RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkip *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSkip_$1, initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_, outer$, capture$0, arg$0)
}

RxInternalOperatorsOperatorSkip_$1 *create_RxInternalOperatorsOperatorSkip_$1_initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSkip *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSkip_$1, initWithRxInternalOperatorsOperatorSkip_withRxSubscriber_withRxSubscriber_, outer$, capture$0, arg$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSkip_$1)
