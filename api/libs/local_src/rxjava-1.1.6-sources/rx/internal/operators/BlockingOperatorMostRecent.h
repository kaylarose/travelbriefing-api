//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/BlockingOperatorMostRecent.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsBlockingOperatorMostRecent")
#ifdef RESTRICT_RxInternalOperatorsBlockingOperatorMostRecent
#define INCLUDE_ALL_RxInternalOperatorsBlockingOperatorMostRecent 0
#else
#define INCLUDE_ALL_RxInternalOperatorsBlockingOperatorMostRecent 1
#endif
#undef RESTRICT_RxInternalOperatorsBlockingOperatorMostRecent

#if !defined (RxInternalOperatorsBlockingOperatorMostRecent_) && (INCLUDE_ALL_RxInternalOperatorsBlockingOperatorMostRecent || defined(INCLUDE_RxInternalOperatorsBlockingOperatorMostRecent))
#define RxInternalOperatorsBlockingOperatorMostRecent_

@class RxObservable;
@protocol JavaLangIterable;

/*!
 @brief Returns an Iterable that always returns the item most recently emitted by an Observable, or a
 seed value if no item has yet been emitted.
 <p>
 <img width="640" src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/B.mostRecent.png" alt="">
 */
@interface RxInternalOperatorsBlockingOperatorMostRecent : NSObject

#pragma mark Public

/*!
 @brief Returns an <code>Iterable</code> that always returns the item most recently emitted by the <code>Observable</code>.
 @param source
 the source <code>Observable</code>
 @param initialValue
 a default item to return from the <code>Iterable</code> if <code>source</code> has not yet emitted any
 items
 @return an <code>Iterable</code> that always returns the item most recently emitted by <code>source</code>, or
 <code>initialValue</code> if <code>source</code> has not yet emitted any items
 */
+ (id<JavaLangIterable>)mostRecentWithRxObservable:(RxObservable *)source
                                            withId:(id)initialValue;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBlockingOperatorMostRecent)

FOUNDATION_EXPORT id<JavaLangIterable> RxInternalOperatorsBlockingOperatorMostRecent_mostRecentWithRxObservable_withId_(RxObservable *source, id initialValue);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBlockingOperatorMostRecent)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsBlockingOperatorMostRecent")
