//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorDoOnSubscribe.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDoOnSubscribe")
#ifdef RESTRICT_RxInternalOperatorsOperatorDoOnSubscribe
#define INCLUDE_ALL_RxInternalOperatorsOperatorDoOnSubscribe 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorDoOnSubscribe 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorDoOnSubscribe

#if !defined (RxInternalOperatorsOperatorDoOnSubscribe_) && (INCLUDE_ALL_RxInternalOperatorsOperatorDoOnSubscribe || defined(INCLUDE_RxInternalOperatorsOperatorDoOnSubscribe))
#define RxInternalOperatorsOperatorDoOnSubscribe_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsAction0;

/*!
 @brief This operator modifies an <code>rx.Observable</code> so a given action is invoked when the <code>rx.Observable</code> is subscribed.
 */
@interface RxInternalOperatorsOperatorDoOnSubscribe : NSObject < RxObservable_Operator >

#pragma mark Public

/*!
 @brief Constructs an instance of the operator with the callback that gets invoked when the modified Observable is subscribed
 @param subscribe the action that gets invoked when the modified <code>rx.Observable</code> is subscribed
 */
- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)subscribe;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDoOnSubscribe)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorDoOnSubscribe_initWithRxFunctionsAction0_(RxInternalOperatorsOperatorDoOnSubscribe *self, id<RxFunctionsAction0> subscribe);

FOUNDATION_EXPORT RxInternalOperatorsOperatorDoOnSubscribe *new_RxInternalOperatorsOperatorDoOnSubscribe_initWithRxFunctionsAction0_(id<RxFunctionsAction0> subscribe) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorDoOnSubscribe *create_RxInternalOperatorsOperatorDoOnSubscribe_initWithRxFunctionsAction0_(id<RxFunctionsAction0> subscribe);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorDoOnSubscribe)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDoOnSubscribe")
