//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorSwitchIfEmpty.java
//

#include "J2ObjC_source.h"
#include "rx/Observable.h"
#include "rx/Producer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/internal/operators/OperatorSwitchIfEmpty.h"
#include "rx/internal/producers/ProducerArbiter.h"
#include "rx/subscriptions/SerialSubscription.h"

@interface RxInternalOperatorsOperatorSwitchIfEmpty () {
 @public
  RxObservable *alternate_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmpty, alternate_, RxObservable *)

@interface RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber : RxSubscriber {
 @public
  jboolean empty_;
  RxSubscriber *child_;
  RxSubscriptionsSerialSubscription *ssub_;
  RxInternalProducersProducerArbiter *arbiter_;
  RxObservable *alternate_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)ssub
withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)arbiter
                    withRxObservable:(RxObservable *)alternate;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (void)onCompleted;

- (void)subscribeToAlternate;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber, child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber, ssub_, RxSubscriptionsSerialSubscription *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber, arbiter_, RxInternalProducersProducerArbiter *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber, alternate_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *self, RxSubscriber *child, RxSubscriptionsSerialSubscription *ssub, RxInternalProducersProducerArbiter *arbiter, RxObservable *alternate);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *new_RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(RxSubscriber *child, RxSubscriptionsSerialSubscription *ssub, RxInternalProducersProducerArbiter *arbiter, RxObservable *alternate) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *create_RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(RxSubscriber *child, RxSubscriptionsSerialSubscription *ssub, RxInternalProducersProducerArbiter *arbiter, RxObservable *alternate);

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_subscribeToAlternate(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *self);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber)

@interface RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber : RxSubscriber {
 @public
  RxInternalProducersProducerArbiter *arbiter_;
  RxSubscriber *child_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)arbiter;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber, arbiter_, RxInternalProducersProducerArbiter *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber, child_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber *self, RxSubscriber *child, RxInternalProducersProducerArbiter *arbiter);

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber *new_RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(RxSubscriber *child, RxInternalProducersProducerArbiter *arbiter) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber *create_RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(RxSubscriber *child, RxInternalProducersProducerArbiter *arbiter);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber)

@implementation RxInternalOperatorsOperatorSwitchIfEmpty

- (instancetype)initWithRxObservable:(RxObservable *)alternate {
  RxInternalOperatorsOperatorSwitchIfEmpty_initWithRxObservable_(self, alternate);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxSubscriptionsSerialSubscription *ssub = new_RxSubscriptionsSerialSubscription_init();
  RxInternalProducersProducerArbiter *arbiter = new_RxInternalProducersProducerArbiter_init();
  RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *parent = new_RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(child, ssub, arbiter, alternate_);
  [ssub setWithRxSubscription:parent];
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:ssub];
  [child setProducerWithRxProducer:arbiter];
  return parent;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObservable:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "callWithId:", "LRxSubscriber;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "alternate_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;", "(Lrx/Observable<+TT;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;", "Lrx/Observable<+TT;>;", "LRxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber;LRxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmpty = { "OperatorSwitchIfEmpty", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 6, -1, 7, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmpty;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmpty_initWithRxObservable_(RxInternalOperatorsOperatorSwitchIfEmpty *self, RxObservable *alternate) {
  NSObject_init(self);
  self->alternate_ = alternate;
}

RxInternalOperatorsOperatorSwitchIfEmpty *new_RxInternalOperatorsOperatorSwitchIfEmpty_initWithRxObservable_(RxObservable *alternate) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmpty, initWithRxObservable_, alternate)
}

RxInternalOperatorsOperatorSwitchIfEmpty *create_RxInternalOperatorsOperatorSwitchIfEmpty_initWithRxObservable_(RxObservable *alternate) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmpty, initWithRxObservable_, alternate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitchIfEmpty)

@implementation RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)ssub
withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)arbiter
                    withRxObservable:(RxObservable *)alternate {
  RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(self, child, ssub, arbiter, alternate);
  return self;
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((RxInternalProducersProducerArbiter *) nil_chk(arbiter_)) setProducerWithRxProducer:producer];
}

- (void)onCompleted {
  if (!empty_) {
    [((RxSubscriber *) nil_chk(child_)) onCompleted];
  }
  else if (![((RxSubscriber *) nil_chk(child_)) isUnsubscribed]) {
    RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_subscribeToAlternate(self);
  }
}

- (void)subscribeToAlternate {
  RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_subscribeToAlternate(self);
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  empty_ = false;
  [((RxSubscriber *) nil_chk(child_)) onNextWithId:t];
  [((RxInternalProducersProducerArbiter *) nil_chk(arbiter_)) producedWithLong:1];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withRxSubscriptionsSerialSubscription:withRxInternalProducersProducerArbiter:withRxObservable:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { "setProducerWithRxProducer:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "subscribeToAlternate", "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 6, 7, -1, 8, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "empty_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "ssub_", "LRxSubscriptionsSerialSubscription;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "arbiter_", "LRxInternalProducersProducerArbiter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "alternate_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;LRxSubscriptionsSerialSubscription;LRxInternalProducersProducerArbiter;LRxObservable;", "(Lrx/Subscriber<-TT;>;Lrx/subscriptions/SerialSubscription;Lrx/internal/producers/ProducerArbiter;Lrx/Observable<+TT;>;)V", "setProducer", "LRxProducer;", "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "Lrx/Subscriber<-TT;>;", "Lrx/Observable<+TT;>;", "LRxInternalOperatorsOperatorSwitchIfEmpty;", "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber = { "ParentSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1a, 6, 5, 11, -1, -1, 12, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *self, RxSubscriber *child, RxSubscriptionsSerialSubscription *ssub, RxInternalProducersProducerArbiter *arbiter, RxObservable *alternate) {
  RxSubscriber_init(self);
  self->empty_ = true;
  self->child_ = child;
  self->ssub_ = ssub;
  self->arbiter_ = arbiter;
  self->alternate_ = alternate;
}

RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *new_RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(RxSubscriber *child, RxSubscriptionsSerialSubscription *ssub, RxInternalProducersProducerArbiter *arbiter, RxObservable *alternate) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber, initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_, child, ssub, arbiter, alternate)
}

RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *create_RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_(RxSubscriber *child, RxSubscriptionsSerialSubscription *ssub, RxInternalProducersProducerArbiter *arbiter, RxObservable *alternate) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber, initWithRxSubscriber_withRxSubscriptionsSerialSubscription_withRxInternalProducersProducerArbiter_withRxObservable_, child, ssub, arbiter, alternate)
}

void RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber_subscribeToAlternate(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber *self) {
  RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber *as = new_RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(self->child_, self->arbiter_);
  [((RxSubscriptionsSerialSubscription *) nil_chk(self->ssub_)) setWithRxSubscription:as];
  (void) [((RxObservable *) nil_chk(self->alternate_)) unsafeSubscribeWithRxSubscriber:as];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitchIfEmpty_ParentSubscriber)

@implementation RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
withRxInternalProducersProducerArbiter:(RxInternalProducersProducerArbiter *)arbiter {
  RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(self, child, arbiter);
  return self;
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((RxInternalProducersProducerArbiter *) nil_chk(arbiter_)) setProducerWithRxProducer:producer];
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(child_)) onNextWithId:t];
  [((RxInternalProducersProducerArbiter *) nil_chk(arbiter_)) producedWithLong:1];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withRxInternalProducersProducerArbiter:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { "setProducerWithRxProducer:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 6, 7, -1, 8, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "arbiter_", "LRxInternalProducersProducerArbiter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;LRxInternalProducersProducerArbiter;", "(Lrx/Subscriber<-TT;>;Lrx/internal/producers/ProducerArbiter;)V", "setProducer", "LRxProducer;", "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "Lrx/Subscriber<-TT;>;", "LRxInternalOperatorsOperatorSwitchIfEmpty;", "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber = { "AlternateSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1a, 5, 2, 10, -1, -1, 11, -1 };
  return &_RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber;
}

@end

void RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber *self, RxSubscriber *child, RxInternalProducersProducerArbiter *arbiter) {
  RxSubscriber_init(self);
  self->child_ = child;
  self->arbiter_ = arbiter;
}

RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber *new_RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(RxSubscriber *child, RxInternalProducersProducerArbiter *arbiter) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber, initWithRxSubscriber_withRxInternalProducersProducerArbiter_, child, arbiter)
}

RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber *create_RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber_initWithRxSubscriber_withRxInternalProducersProducerArbiter_(RxSubscriber *child, RxInternalProducersProducerArbiter *arbiter) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber, initWithRxSubscriber_withRxInternalProducersProducerArbiter_, child, arbiter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSwitchIfEmpty_AlternateSubscriber)
