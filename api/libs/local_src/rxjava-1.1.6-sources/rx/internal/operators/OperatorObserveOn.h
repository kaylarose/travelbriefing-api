//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorObserveOn.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorObserveOn")
#ifdef RESTRICT_RxInternalOperatorsOperatorObserveOn
#define INCLUDE_ALL_RxInternalOperatorsOperatorObserveOn 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorObserveOn 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorObserveOn

#if !defined (RxInternalOperatorsOperatorObserveOn_) && (INCLUDE_ALL_RxInternalOperatorsOperatorObserveOn || defined(INCLUDE_RxInternalOperatorsOperatorObserveOn))
#define RxInternalOperatorsOperatorObserveOn_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxScheduler;
@class RxSubscriber;

/*!
 @brief Delivers events on the specified <code>Scheduler</code> asynchronously via an unbounded buffer.
 <img width="640" src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/observeOn.png" alt="">
 */
@interface RxInternalOperatorsOperatorObserveOn : NSObject < RxObservable_Operator >

#pragma mark Public

/*!
 @param scheduler the scheduler to use
 @param delayError delay errors until all normal events are emitted in the other thread?
 */
- (instancetype)initWithRxScheduler:(RxScheduler *)scheduler
                        withBoolean:(jboolean)delayError;

/*!
 @param scheduler the scheduler to use
 @param delayError delay errors until all normal events are emitted in the other thread?
 @param bufferSize for the buffer feeding the Scheduler workers, defaults to <code>RxRingBuffer.MAX</code> if <= 0
 */
- (instancetype)initWithRxScheduler:(RxScheduler *)scheduler
                        withBoolean:(jboolean)delayError
                            withInt:(jint)bufferSize;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

+ (id<RxObservable_Operator>)rebatchWithInt:(jint)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorObserveOn)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorObserveOn_initWithRxScheduler_withBoolean_(RxInternalOperatorsOperatorObserveOn *self, RxScheduler *scheduler, jboolean delayError);

FOUNDATION_EXPORT RxInternalOperatorsOperatorObserveOn *new_RxInternalOperatorsOperatorObserveOn_initWithRxScheduler_withBoolean_(RxScheduler *scheduler, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorObserveOn *create_RxInternalOperatorsOperatorObserveOn_initWithRxScheduler_withBoolean_(RxScheduler *scheduler, jboolean delayError);

FOUNDATION_EXPORT void RxInternalOperatorsOperatorObserveOn_initWithRxScheduler_withBoolean_withInt_(RxInternalOperatorsOperatorObserveOn *self, RxScheduler *scheduler, jboolean delayError, jint bufferSize);

FOUNDATION_EXPORT RxInternalOperatorsOperatorObserveOn *new_RxInternalOperatorsOperatorObserveOn_initWithRxScheduler_withBoolean_withInt_(RxScheduler *scheduler, jboolean delayError, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorObserveOn *create_RxInternalOperatorsOperatorObserveOn_initWithRxScheduler_withBoolean_withInt_(RxScheduler *scheduler, jboolean delayError, jint bufferSize);

FOUNDATION_EXPORT id<RxObservable_Operator> RxInternalOperatorsOperatorObserveOn_rebatchWithInt_(jint n);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorObserveOn)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorObserveOn")
