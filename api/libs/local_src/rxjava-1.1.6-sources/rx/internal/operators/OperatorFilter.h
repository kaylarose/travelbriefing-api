//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorFilter.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorFilter")
#ifdef RESTRICT_RxInternalOperatorsOperatorFilter
#define INCLUDE_ALL_RxInternalOperatorsOperatorFilter 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorFilter 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorFilter

#if !defined (RxInternalOperatorsOperatorFilter_) && (INCLUDE_ALL_RxInternalOperatorsOperatorFilter || defined(INCLUDE_RxInternalOperatorsOperatorFilter))
#define RxInternalOperatorsOperatorFilter_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc1;

/*!
 @brief Filters an Observable by discarding any items it emits that do not meet some test.
 <p>
 <img width="640" src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/filter.png" alt="">
 */
@interface RxInternalOperatorsOperatorFilter : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc1> predicate_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorFilter)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorFilter, predicate_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorFilter_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorFilter *self, id<RxFunctionsFunc1> predicate);

FOUNDATION_EXPORT RxInternalOperatorsOperatorFilter *new_RxInternalOperatorsOperatorFilter_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorFilter *create_RxInternalOperatorsOperatorFilter_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> predicate);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorFilter)

#endif

#if !defined (RxInternalOperatorsOperatorFilter_FilterSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsOperatorFilter || defined(INCLUDE_RxInternalOperatorsOperatorFilter_FilterSubscriber))
#define RxInternalOperatorsOperatorFilter_FilterSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "rx/Subscriber.h"

@protocol RxFunctionsFunc1;
@protocol RxProducer;

@interface RxInternalOperatorsOperatorFilter_FilterSubscriber : RxSubscriber {
 @public
  RxSubscriber *actual_;
  id<RxFunctionsFunc1> predicate_;
  jboolean done_;
}

#pragma mark Public

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorFilter_FilterSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorFilter_FilterSubscriber, actual_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorFilter_FilterSubscriber, predicate_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorFilter_FilterSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(RxInternalOperatorsOperatorFilter_FilterSubscriber *self, RxSubscriber *actual, id<RxFunctionsFunc1> predicate);

FOUNDATION_EXPORT RxInternalOperatorsOperatorFilter_FilterSubscriber *new_RxInternalOperatorsOperatorFilter_FilterSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(RxSubscriber *actual, id<RxFunctionsFunc1> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorFilter_FilterSubscriber *create_RxInternalOperatorsOperatorFilter_FilterSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_(RxSubscriber *actual, id<RxFunctionsFunc1> predicate);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorFilter_FilterSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorFilter")
