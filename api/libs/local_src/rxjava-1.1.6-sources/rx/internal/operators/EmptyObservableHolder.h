//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/EmptyObservableHolder.java
//

/*!
 @brief Copyright 2016 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder")
#ifdef RESTRICT_RxInternalOperatorsEmptyObservableHolder
#define INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder 0
#else
#define INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder 1
#endif
#undef RESTRICT_RxInternalOperatorsEmptyObservableHolder

#if !defined (RxInternalOperatorsEmptyObservableHolder_) && (INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder || defined(INCLUDE_RxInternalOperatorsEmptyObservableHolder))
#define RxInternalOperatorsEmptyObservableHolder_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "rx/Observable.h"

@class IOSObjectArray;
@class RxObservable;
@class RxSubscriber;

typedef NS_ENUM(NSUInteger, RxInternalOperatorsEmptyObservableHolder_Enum) {
  RxInternalOperatorsEmptyObservableHolder_Enum_INSTANCE = 0,
};

/*!
 @brief Holds a singleton instance of an empty Observable which is stateless and completes
 the child subscriber immediately.
 */
@interface RxInternalOperatorsEmptyObservableHolder : JavaLangEnum < NSCopying, RxObservable_OnSubscribe >

+ (RxObservable *)EMPTY;

+ (RxInternalOperatorsEmptyObservableHolder *)INSTANCE;

#pragma mark Public

- (void)callWithId:(RxSubscriber *)child;

/*!
 @brief Returns a type-corrected singleton instance of the empty Observable.
 @return a type-corrected singleton instance of the empty Observable.
 */
+ (RxObservable *)instance;

+ (RxInternalOperatorsEmptyObservableHolder *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;
- (RxInternalOperatorsEmptyObservableHolder_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsEmptyObservableHolder)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_values_[];

inline RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_get_INSTANCE();
J2OBJC_ENUM_CONSTANT(RxInternalOperatorsEmptyObservableHolder, INSTANCE)

/*!
 @brief The singleton instance.
 */
inline RxObservable *RxInternalOperatorsEmptyObservableHolder_get_EMPTY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT RxObservable *RxInternalOperatorsEmptyObservableHolder_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsEmptyObservableHolder, EMPTY, RxObservable *)

FOUNDATION_EXPORT RxObservable *RxInternalOperatorsEmptyObservableHolder_instance();

FOUNDATION_EXPORT IOSObjectArray *RxInternalOperatorsEmptyObservableHolder_values();

FOUNDATION_EXPORT RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT RxInternalOperatorsEmptyObservableHolder *RxInternalOperatorsEmptyObservableHolder_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsEmptyObservableHolder)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsEmptyObservableHolder")
