//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorWindowWithTime.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "rx/Observable.h"
#include "rx/Observer.h"
#include "rx/Scheduler.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/internal/operators/OperatorWindowWithTime.h"
#include "rx/observers/SerializedObserver.h"
#include "rx/observers/SerializedSubscriber.h"
#include "rx/subjects/UnicastSubject.h"
#include "rx/subscriptions/Subscriptions.h"

@interface RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber () {
 @public
  RxInternalOperatorsOperatorWindowWithTime *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber, this$0_, RxInternalOperatorsOperatorWindowWithTime *)

@interface RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1, this$0_, RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 *self, RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 *new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 *create_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1)

@interface RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2, this$0_, RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 *self, RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 *new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 *create_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2)

@interface RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber () {
 @public
  RxInternalOperatorsOperatorWindowWithTime *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber, this$0_, RxInternalOperatorsOperatorWindowWithTime *)

@interface RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1, this$0_, RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 *self, RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 *new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 *create_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1)

@interface RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *this$0_;
  RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *val$chunk_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *)outer$
             withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject:(RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2, this$0_, RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2, val$chunk_, RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 *self, RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$, RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 *new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$, RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 *create_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$, RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorWindowWithTime)

id RxInternalOperatorsOperatorWindowWithTime_NEXT_SUBJECT;
RxInternalOperatorsNotificationLite *RxInternalOperatorsOperatorWindowWithTime_nl;

@implementation RxInternalOperatorsOperatorWindowWithTime

+ (id)NEXT_SUBJECT {
  return RxInternalOperatorsOperatorWindowWithTime_NEXT_SUBJECT;
}

+ (RxInternalOperatorsNotificationLite *)nl {
  return RxInternalOperatorsOperatorWindowWithTime_nl;
}

- (instancetype)initWithLong:(jlong)timespan
                    withLong:(jlong)timeshift
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withInt:(jint)size
             withRxScheduler:(RxScheduler *)scheduler {
  RxInternalOperatorsOperatorWindowWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, timeshift, unit, size, scheduler);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxScheduler_Worker *worker = [((RxScheduler *) nil_chk(scheduler_)) createWorker];
  if (timespan_ == timeshift_) {
    RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *s = new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(self, child, worker);
    [s addWithRxSubscription:worker];
    [s scheduleExact];
    return s;
  }
  RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *s = new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(self, child, worker);
  [s addWithRxSubscription:worker];
  [s startNewChunk];
  [s scheduleChunk];
  return s;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withLong:withJavaUtilConcurrentTimeUnit:withInt:withRxScheduler:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "callWithId:", "LRxSubscriber;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "timespan_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "timeshift_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "NEXT_SUBJECT", "LNSObject;", .constantValue.asLong = 0, 0x18, -1, 4, -1, -1 },
    { "nl", "LRxInternalOperatorsNotificationLite;", .constantValue.asLong = 0, 0x18, -1, 5, 6, -1 },
  };
  static const void *ptrTable[] = { "JJLJavaUtilConcurrentTimeUnit;ILRxScheduler;", "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<TT;>;>;)Lrx/Subscriber<-TT;>;", &RxInternalOperatorsOperatorWindowWithTime_NEXT_SUBJECT, &RxInternalOperatorsOperatorWindowWithTime_nl, "Lrx/internal/operators/NotificationLite<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorWindowWithTime_State;LRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber;LRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject;LRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<Lrx/Observable<TT;>;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime = { "OperatorWindowWithTime", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 7, -1, 7, -1, 8, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorWindowWithTime class]) {
    RxInternalOperatorsOperatorWindowWithTime_NEXT_SUBJECT = new_NSObject_init();
    RxInternalOperatorsOperatorWindowWithTime_nl = RxInternalOperatorsNotificationLite_instance();
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorWindowWithTime)
  }
}

@end

void RxInternalOperatorsOperatorWindowWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxInternalOperatorsOperatorWindowWithTime *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint size, RxScheduler *scheduler) {
  NSObject_init(self);
  self->timespan_ = timespan;
  self->timeshift_ = timeshift;
  self->unit_ = unit;
  self->size_ = size;
  self->scheduler_ = scheduler;
}

RxInternalOperatorsOperatorWindowWithTime *new_RxInternalOperatorsOperatorWindowWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint size, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime, initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_, timespan, timeshift, unit, size, scheduler)
}

RxInternalOperatorsOperatorWindowWithTime *create_RxInternalOperatorsOperatorWindowWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint size, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime, initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_, timespan, timeshift, unit, size, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorWindowWithTime_State)

RxInternalOperatorsOperatorWindowWithTime_State *RxInternalOperatorsOperatorWindowWithTime_State_EMPTY;

@implementation RxInternalOperatorsOperatorWindowWithTime_State

+ (RxInternalOperatorsOperatorWindowWithTime_State *)EMPTY {
  return RxInternalOperatorsOperatorWindowWithTime_State_EMPTY;
}

- (instancetype)initWithRxObserver:(id<RxObserver>)consumer
                  withRxObservable:(RxObservable *)producer
                           withInt:(jint)count {
  RxInternalOperatorsOperatorWindowWithTime_State_initWithRxObserver_withRxObservable_withInt_(self, consumer, producer, count);
  return self;
}

- (RxInternalOperatorsOperatorWindowWithTime_State *)next {
  return new_RxInternalOperatorsOperatorWindowWithTime_State_initWithRxObserver_withRxObservable_withInt_(consumer_, producer_, count_ + 1);
}

- (RxInternalOperatorsOperatorWindowWithTime_State *)createWithRxObserver:(id<RxObserver>)consumer
                                                         withRxObservable:(RxObservable *)producer {
  return new_RxInternalOperatorsOperatorWindowWithTime_State_initWithRxObserver_withRxObservable_withInt_(consumer, producer, 0);
}

- (RxInternalOperatorsOperatorWindowWithTime_State *)clear {
  return RxInternalOperatorsOperatorWindowWithTime_State_empty();
}

+ (RxInternalOperatorsOperatorWindowWithTime_State *)empty {
  return RxInternalOperatorsOperatorWindowWithTime_State_empty();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObserver:withRxObservable:withInt:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "next", "LRxInternalOperatorsOperatorWindowWithTime_State;", 0x1, -1, -1, -1, 2, -1, -1 },
    { "createWithRxObserver:withRxObservable:", "LRxInternalOperatorsOperatorWindowWithTime_State;", 0x1, 3, 4, -1, 5, -1, -1 },
    { "clear", "LRxInternalOperatorsOperatorWindowWithTime_State;", 0x1, -1, -1, -1, 2, -1, -1 },
    { "empty", "LRxInternalOperatorsOperatorWindowWithTime_State;", 0x9, -1, -1, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "consumer_", "LRxObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "producer_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "EMPTY", "LRxInternalOperatorsOperatorWindowWithTime_State;", .constantValue.asLong = 0, 0x18, -1, 9, 10, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;LRxObservable;I", "(Lrx/Observer<TT;>;Lrx/Observable<TT;>;I)V", "()Lrx/internal/operators/OperatorWindowWithTime$State<TT;>;", "create", "LRxObserver;LRxObservable;", "(Lrx/Observer<TT;>;Lrx/Observable<TT;>;)Lrx/internal/operators/OperatorWindowWithTime$State<TT;>;", "<T:Ljava/lang/Object;>()Lrx/internal/operators/OperatorWindowWithTime$State<TT;>;", "Lrx/Observer<TT;>;", "Lrx/Observable<TT;>;", &RxInternalOperatorsOperatorWindowWithTime_State_EMPTY, "Lrx/internal/operators/OperatorWindowWithTime$State<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorWindowWithTime;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_State = { "State", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 5, 4, 11, -1, -1, 12, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_State;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorWindowWithTime_State class]) {
    RxInternalOperatorsOperatorWindowWithTime_State_EMPTY = new_RxInternalOperatorsOperatorWindowWithTime_State_initWithRxObserver_withRxObservable_withInt_(nil, nil, 0);
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorWindowWithTime_State)
  }
}

@end

void RxInternalOperatorsOperatorWindowWithTime_State_initWithRxObserver_withRxObservable_withInt_(RxInternalOperatorsOperatorWindowWithTime_State *self, id<RxObserver> consumer, RxObservable *producer, jint count) {
  NSObject_init(self);
  self->consumer_ = consumer;
  self->producer_ = producer;
  self->count_ = count;
}

RxInternalOperatorsOperatorWindowWithTime_State *new_RxInternalOperatorsOperatorWindowWithTime_State_initWithRxObserver_withRxObservable_withInt_(id<RxObserver> consumer, RxObservable *producer, jint count) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_State, initWithRxObserver_withRxObservable_withInt_, consumer, producer, count)
}

RxInternalOperatorsOperatorWindowWithTime_State *create_RxInternalOperatorsOperatorWindowWithTime_State_initWithRxObserver_withRxObservable_withInt_(id<RxObserver> consumer, RxObservable *producer, jint count) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_State, initWithRxObserver_withRxObservable_withInt_, consumer, producer, count)
}

RxInternalOperatorsOperatorWindowWithTime_State *RxInternalOperatorsOperatorWindowWithTime_State_empty() {
  RxInternalOperatorsOperatorWindowWithTime_State_initialize();
  return RxInternalOperatorsOperatorWindowWithTime_State_EMPTY;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_State)

@implementation RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime:(RxInternalOperatorsOperatorWindowWithTime *)outer$
                                                 withRxSubscriber:(RxSubscriber *)child
                                           withRxScheduler_Worker:(RxScheduler_Worker *)worker {
  RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(self, outer$, child, worker);
  return self;
}

- (void)onStart {
  [self requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)onNextWithId:(id)t {
  @synchronized(guard_) {
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_JavaUtilArrayList_init();
      }
      [queue_ addWithId:t];
      return;
    }
    emitting_ = true;
  }
  jboolean skipFinal = false;
  @try {
    if (![self emitValueWithId:t]) {
      return;
    }
    for (; ; ) {
      id<JavaUtilList> localQueue;
      @synchronized(guard_) {
        localQueue = queue_;
        if (localQueue == nil) {
          emitting_ = false;
          skipFinal = true;
          return;
        }
        queue_ = nil;
      }
      if (![self drainWithJavaUtilList:localQueue]) {
        return;
      }
    }
  }
  @finally {
    if (!skipFinal) {
      @synchronized(guard_) {
        emitting_ = false;
      }
    }
  }
}

- (jboolean)drainWithJavaUtilList:(id<JavaUtilList>)queue {
  if (queue == nil) {
    return true;
  }
  for (id __strong o in queue) {
    if (o == JreLoadStatic(RxInternalOperatorsOperatorWindowWithTime, NEXT_SUBJECT)) {
      if (![self replaceSubject]) {
        return false;
      }
    }
    else if ([((RxInternalOperatorsNotificationLite *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorWindowWithTime, nl))) isErrorWithId:o]) {
      [self errorWithNSException:[JreLoadStatic(RxInternalOperatorsOperatorWindowWithTime, nl) getErrorWithId:o]];
      break;
    }
    else if ([JreLoadStatic(RxInternalOperatorsOperatorWindowWithTime, nl) isCompletedWithId:o]) {
      [self complete];
      break;
    }
    else {
      id t = o;
      if (![self emitValueWithId:t]) {
        return false;
      }
    }
  }
  return true;
}

- (jboolean)replaceSubject {
  id<RxObserver> s = ((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&state_)))->consumer_;
  if (s != nil) {
    [s onCompleted];
  }
  if ([((RxSubscriber *) nil_chk(child_)) isUnsubscribed]) {
    (void) JreVolatileStrongAssign(&state_, [((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&state_))) clear]);
    [self unsubscribe];
    return false;
  }
  RxSubjectsUnicastSubject *bus = RxSubjectsUnicastSubject_create();
  (void) JreVolatileStrongAssign(&state_, [((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&state_))) createWithRxObserver:bus withRxObservable:bus]);
  [child_ onNextWithId:bus];
  return true;
}

- (jboolean)emitValueWithId:(id)t {
  RxInternalOperatorsOperatorWindowWithTime_State *s = JreLoadVolatileId(&state_);
  if (((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(s))->consumer_ == nil) {
    if (![self replaceSubject]) {
      return false;
    }
    s = JreLoadVolatileId(&state_);
  }
  [((id<RxObserver>) nil_chk(((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(s))->consumer_)) onNextWithId:t];
  if (s->count_ == this$0_->size_ - 1) {
    [s->consumer_ onCompleted];
    s = [s clear];
  }
  else {
    s = [s next];
  }
  (void) JreVolatileStrongAssign(&state_, s);
  return true;
}

- (void)onErrorWithNSException:(NSException *)e {
  @synchronized(guard_) {
    if (emitting_) {
      queue_ = JavaUtilCollections_singletonListWithId_([((RxInternalOperatorsNotificationLite *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorWindowWithTime, nl))) errorWithNSException:e]);
      return;
    }
    queue_ = nil;
    emitting_ = true;
  }
  [self errorWithNSException:e];
}

- (void)errorWithNSException:(NSException *)e {
  id<RxObserver> s = ((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&state_)))->consumer_;
  (void) JreVolatileStrongAssign(&state_, [((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&state_))) clear]);
  if (s != nil) {
    [s onErrorWithNSException:e];
  }
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
  [self unsubscribe];
}

- (void)complete {
  id<RxObserver> s = ((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&state_)))->consumer_;
  (void) JreVolatileStrongAssign(&state_, [((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&state_))) clear]);
  if (s != nil) {
    [s onCompleted];
  }
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
  [self unsubscribe];
}

- (void)onCompleted {
  id<JavaUtilList> localQueue;
  @synchronized(guard_) {
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_JavaUtilArrayList_init();
      }
      [queue_ addWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorWindowWithTime, nl))) completed]];
      return;
    }
    localQueue = queue_;
    queue_ = nil;
    emitting_ = true;
  }
  @try {
    [self drainWithJavaUtilList:localQueue];
  }
  @catch (NSException *e) {
    [self errorWithNSException:e];
    return;
  }
  [self complete];
}

- (void)scheduleExact {
  (void) [((RxScheduler_Worker *) nil_chk(worker_)) schedulePeriodicallyWithRxFunctionsAction0:new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(self) withLong:0 withLong:this$0_->timespan_ withJavaUtilConcurrentTimeUnit:this$0_->unit_];
}

- (void)nextWindow {
  @synchronized(guard_) {
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_JavaUtilArrayList_init();
      }
      [queue_ addWithId:JreLoadStatic(RxInternalOperatorsOperatorWindowWithTime, NEXT_SUBJECT)];
      return;
    }
    emitting_ = true;
  }
  jboolean skipFinal = false;
  @try {
    if (![self replaceSubject]) {
      return;
    }
    for (; ; ) {
      id<JavaUtilList> localQueue;
      @synchronized(guard_) {
        localQueue = queue_;
        if (localQueue == nil) {
          emitting_ = false;
          skipFinal = true;
          return;
        }
        queue_ = nil;
      }
      if (![self drainWithJavaUtilList:localQueue]) {
        return;
      }
    }
  }
  @finally {
    if (!skipFinal) {
      @synchronized(guard_) {
        emitting_ = false;
      }
    }
  }
}

- (void)__javaClone:(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&state_, &original->state_);
}

- (void)dealloc {
  JreReleaseVolatile(&state_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorWindowWithTime:withRxSubscriber:withRxScheduler_Worker:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onStart", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "drainWithJavaUtilList:", "Z", 0x0, 5, 6, -1, 7, -1, -1 },
    { "replaceSubject", "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { "emitValueWithId:", "Z", 0x0, 8, 3, -1, 9, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { "errorWithNSException:", "V", 0x0, 12, 11, -1, -1, -1, -1 },
    { "complete", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "scheduleExact", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "nextWindow", "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithTime;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 13, -1 },
    { "worker_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "guard_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "queue_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 14, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "state_", "LRxInternalOperatorsOperatorWindowWithTime_State;", .constantValue.asLong = 0, 0x40, -1, -1, 15, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorWindowWithTime;LRxSubscriber;LRxScheduler_Worker;", "(Lrx/internal/operators/OperatorWindowWithTime;Lrx/Subscriber<-Lrx/Observable<TT;>;>;Lrx/Scheduler$Worker;)V", "onNext", "LNSObject;", "(TT;)V", "drain", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Object;>;)Z", "emitValue", "(TT;)Z", "onError", "LNSException;", "error", "Lrx/Subscriber<-Lrx/Observable<TT;>;>;", "Ljava/util/List<Ljava/lang/Object;>;", "Lrx/internal/operators/OperatorWindowWithTime$State<TT;>;", "LRxInternalOperatorsOperatorWindowWithTime;", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber = { "ExactSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x10, 12, 7, 16, -1, -1, 17, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber;
}

@end

void RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *self, RxInternalOperatorsOperatorWindowWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *worker) {
  self->this$0_ = outer$;
  RxSubscriber_init(self);
  self->child_ = new_RxObserversSerializedSubscriber_initWithRxSubscriber_(child);
  self->worker_ = worker;
  self->guard_ = new_NSObject_init();
  (void) JreVolatileStrongAssign(&self->state_, RxInternalOperatorsOperatorWindowWithTime_State_empty());
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(self))];
}

RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorWindowWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *worker) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber, initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, worker)
}

RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *create_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorWindowWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *worker) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber, initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, worker)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber)

@implementation RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1

- (void)call {
  if (((RxInternalOperatorsOperatorWindowWithTime_State *) nil_chk(JreLoadVolatileId(&this$0_->state_)))->consumer_ == nil) {
    [this$0_ unsubscribe];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *)outer$ {
  RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber;", "initWithRxSubscriber:withRxScheduler_Worker:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1;
}

@end

void RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 *self, RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 *new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1, initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_, outer$)
}

RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1 *create_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1, initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$1)

@implementation RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2

- (void)call {
  [this$0_ nextWindow];
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *)outer$ {
  RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber;", "scheduleExact" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2;
}

@end

void RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 *self, RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 *new_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2, initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_, outer$)
}

RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2 *create_RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2, initWithRxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_ExactSubscriber_$2)

@implementation RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject

- (instancetype)initWithRxObserver:(id<RxObserver>)consumer
                  withRxObservable:(RxObservable *)producer {
  RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_initWithRxObserver_withRxObservable_(self, consumer, producer);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObserver:withRxObservable:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "consumer_", "LRxObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 2, -1 },
    { "producer_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObserver;LRxObservable;", "(Lrx/Observer<TT;>;Lrx/Observable<TT;>;)V", "Lrx/Observer<TT;>;", "Lrx/Observable<TT;>;", "LRxInternalOperatorsOperatorWindowWithTime;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject = { "CountedSerializedSubject", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 1, 3, 4, -1, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject;
}

@end

void RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_initWithRxObserver_withRxObservable_(RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *self, id<RxObserver> consumer, RxObservable *producer) {
  NSObject_init(self);
  self->consumer_ = new_RxObserversSerializedObserver_initWithRxObserver_(consumer);
  self->producer_ = producer;
}

RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *new_RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_initWithRxObserver_withRxObservable_(id<RxObserver> consumer, RxObservable *producer) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject, initWithRxObserver_withRxObservable_, consumer, producer)
}

RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *create_RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_initWithRxObserver_withRxObservable_(id<RxObserver> consumer, RxObservable *producer) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject, initWithRxObserver_withRxObservable_, consumer, producer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject)

@implementation RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime:(RxInternalOperatorsOperatorWindowWithTime *)outer$
                                                 withRxSubscriber:(RxSubscriber *)child
                                           withRxScheduler_Worker:(RxScheduler_Worker *)worker {
  RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(self, outer$, child, worker);
  return self;
}

- (void)onStart {
  [self requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)onNextWithId:(id)t {
  id<JavaUtilList> list;
  @synchronized(guard_) {
    if (done_) {
      return;
    }
    list = new_JavaUtilArrayList_initWithJavaUtilCollection_(chunks_);
    id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(chunks_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *cs = [it next];
      if (++((RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *) nil_chk(cs))->count_ == this$0_->size_) {
        [it remove];
      }
    }
  }
  for (RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject * __strong cs in list) {
    [((id<RxObserver>) nil_chk(((RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *) nil_chk(cs))->consumer_)) onNextWithId:t];
    if (cs->count_ == this$0_->size_) {
      [cs->consumer_ onCompleted];
    }
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  id<JavaUtilList> list;
  @synchronized(guard_) {
    if (done_) {
      return;
    }
    done_ = true;
    list = new_JavaUtilArrayList_initWithJavaUtilCollection_(chunks_);
    [((id<JavaUtilList>) nil_chk(chunks_)) clear];
  }
  for (RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject * __strong cs in list) {
    [((id<RxObserver>) nil_chk(((RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *) nil_chk(cs))->consumer_)) onErrorWithNSException:e];
  }
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  id<JavaUtilList> list;
  @synchronized(guard_) {
    if (done_) {
      return;
    }
    done_ = true;
    list = new_JavaUtilArrayList_initWithJavaUtilCollection_(chunks_);
    [((id<JavaUtilList>) nil_chk(chunks_)) clear];
  }
  for (RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject * __strong cs in list) {
    [((id<RxObserver>) nil_chk(((RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *) nil_chk(cs))->consumer_)) onCompleted];
  }
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
}

- (void)scheduleChunk {
  (void) [((RxScheduler_Worker *) nil_chk(worker_)) schedulePeriodicallyWithRxFunctionsAction0:new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(self) withLong:this$0_->timeshift_ withLong:this$0_->timeshift_ withJavaUtilConcurrentTimeUnit:this$0_->unit_];
}

- (void)startNewChunk {
  RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *chunk = [self createCountedSerializedSubject];
  @synchronized(guard_) {
    if (done_) {
      return;
    }
    [((id<JavaUtilList>) nil_chk(chunks_)) addWithId:chunk];
  }
  @try {
    [((RxSubscriber *) nil_chk(child_)) onNextWithId:((RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *) nil_chk(chunk))->producer_];
  }
  @catch (NSException *e) {
    [self onErrorWithNSException:e];
    return;
  }
  (void) [((RxScheduler_Worker *) nil_chk(worker_)) scheduleWithRxFunctionsAction0:new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(self, chunk) withLong:this$0_->timespan_ withJavaUtilConcurrentTimeUnit:this$0_->unit_];
}

- (void)terminateChunkWithRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject:(RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *)chunk {
  jboolean terminate = false;
  @synchronized(guard_) {
    if (done_) {
      return;
    }
    id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(chunks_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *cs = [it next];
      if (cs == chunk) {
        terminate = true;
        [it remove];
        break;
      }
    }
  }
  if (terminate) {
    [((id<RxObserver>) nil_chk(((RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *) nil_chk(chunk))->consumer_)) onCompleted];
  }
}

- (RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *)createCountedSerializedSubject {
  RxSubjectsUnicastSubject *bus = RxSubjectsUnicastSubject_create();
  return new_RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_initWithRxObserver_withRxObservable_(bus, bus);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorWindowWithTime:withRxSubscriber:withRxScheduler_Worker:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onStart", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "scheduleChunk", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "startNewChunk", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "terminateChunkWithRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject:", "V", 0x0, 7, 8, -1, 9, -1, -1 },
    { "createCountedSerializedSubject", "LRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject;", 0x0, -1, -1, -1, 10, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithTime;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 11, -1 },
    { "worker_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "guard_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "chunks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 12, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorWindowWithTime;LRxSubscriber;LRxScheduler_Worker;", "(Lrx/internal/operators/OperatorWindowWithTime;Lrx/Subscriber<-Lrx/Observable<TT;>;>;Lrx/Scheduler$Worker;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "terminateChunk", "LRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject;", "(Lrx/internal/operators/OperatorWindowWithTime$CountedSerializedSubject<TT;>;)V", "()Lrx/internal/operators/OperatorWindowWithTime$CountedSerializedSubject<TT;>;", "Lrx/Subscriber<-Lrx/Observable<TT;>;>;", "Ljava/util/List<Lrx/internal/operators/OperatorWindowWithTime$CountedSerializedSubject<TT;>;>;", "LRxInternalOperatorsOperatorWindowWithTime;", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber = { "InexactSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x10, 9, 6, 13, -1, -1, 14, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber;
}

@end

void RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *self, RxInternalOperatorsOperatorWindowWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *worker) {
  self->this$0_ = outer$;
  RxSubscriber_initWithRxSubscriber_(self, child);
  self->child_ = child;
  self->worker_ = worker;
  self->guard_ = new_NSObject_init();
  self->chunks_ = new_JavaUtilLinkedList_init();
}

RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorWindowWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *worker) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber, initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, worker)
}

RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *create_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorWindowWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *worker) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber, initWithRxInternalOperatorsOperatorWindowWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, worker)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber)

@implementation RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1

- (void)call {
  [this$0_ startNewChunk];
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *)outer$ {
  RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber;", "scheduleChunk" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1;
}

@end

void RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 *self, RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 *new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1, initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_, outer$)
}

RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1 *create_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1, initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$1)

@implementation RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2

- (void)call {
  [this$0_ terminateChunkWithRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject:val$chunk_];
}

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber:(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *)outer$
             withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject:(RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *)capture$0 {
  RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber:withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$chunk_", "LRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber;LRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject;", "(Lrx/internal/operators/OperatorWindowWithTime$InexactSubscriber;Lrx/internal/operators/OperatorWindowWithTime$CountedSerializedSubject<TT;>;)V", "Lrx/internal/operators/OperatorWindowWithTime$CountedSerializedSubject<TT;>;", "LRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber;", "startNewChunk" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2;
}

@end

void RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 *self, RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$, RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *capture$0) {
  self->this$0_ = outer$;
  self->val$chunk_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 *new_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$, RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2, initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_, outer$, capture$0)
}

RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2 *create_RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber *outer$, RxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject *capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2, initWithRxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_withRxInternalOperatorsOperatorWindowWithTime_CountedSerializedSubject_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithTime_InexactSubscriber_$2)
