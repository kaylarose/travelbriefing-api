//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorSkip.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSkip")
#ifdef RESTRICT_RxInternalOperatorsOperatorSkip
#define INCLUDE_ALL_RxInternalOperatorsOperatorSkip 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorSkip 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorSkip

#if !defined (RxInternalOperatorsOperatorSkip_) && (INCLUDE_ALL_RxInternalOperatorsOperatorSkip || defined(INCLUDE_RxInternalOperatorsOperatorSkip))
#define RxInternalOperatorsOperatorSkip_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;

/*!
 @brief Returns an Observable that skips the first <code>num</code> items emitted by the source
 Observable.
 <p>
 <img width="640" src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/skip.png" alt="">
 <p>
 You can ignore the first <code>num</code> items emitted by an Observable and attend only to
 those items that come after, by modifying the Observable with the <code>skip</code> operator.
 */
@interface RxInternalOperatorsOperatorSkip : NSObject < RxObservable_Operator > {
 @public
  jint toSkip_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)n;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSkip)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSkip_initWithInt_(RxInternalOperatorsOperatorSkip *self, jint n);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSkip *new_RxInternalOperatorsOperatorSkip_initWithInt_(jint n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSkip *create_RxInternalOperatorsOperatorSkip_initWithInt_(jint n);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSkip)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSkip")
