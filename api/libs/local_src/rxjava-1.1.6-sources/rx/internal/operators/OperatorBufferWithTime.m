//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorBufferWithTime.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "rx/Scheduler.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Action0.h"
#include "rx/internal/operators/OperatorBufferWithTime.h"
#include "rx/observers/SerializedSubscriber.h"

@interface RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber () {
 @public
  RxInternalOperatorsOperatorBufferWithTime *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber, this$0_, RxInternalOperatorsOperatorBufferWithTime *)

@interface RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber:(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1, this$0_, RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 *self, RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 *new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 *create_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1)

@interface RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *this$0_;
  id<JavaUtilList> val$chunk_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber:(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *)outer$
                                                                   withJavaUtilList:(id<JavaUtilList>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2, this$0_, RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2, val$chunk_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 *self, RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$, id<JavaUtilList> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 *new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$, id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 *create_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$, id<JavaUtilList> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2)

@interface RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber () {
 @public
  RxInternalOperatorsOperatorBufferWithTime *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber, this$0_, RxInternalOperatorsOperatorBufferWithTime *)

@interface RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber:(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1, this$0_, RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 *self, RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 *new_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 *create_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1)

@implementation RxInternalOperatorsOperatorBufferWithTime

- (instancetype)initWithLong:(jlong)timespan
                    withLong:(jlong)timeshift
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withInt:(jint)count
             withRxScheduler:(RxScheduler *)scheduler {
  RxInternalOperatorsOperatorBufferWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(self, timespan, timeshift, unit, count, scheduler);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxScheduler_Worker *inner = [((RxScheduler *) nil_chk(scheduler_)) createWorker];
  RxObserversSerializedSubscriber *serialized = new_RxObserversSerializedSubscriber_initWithRxSubscriber_(child);
  if (timespan_ == timeshift_) {
    RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *bsub = new_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(self, serialized, inner);
    [bsub addWithRxSubscription:inner];
    [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:bsub];
    [bsub scheduleExact];
    return bsub;
  }
  RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *bsub = new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(self, serialized, inner);
  [bsub addWithRxSubscription:inner];
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:bsub];
  [bsub startNewChunk];
  [bsub scheduleChunk];
  return bsub;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withLong:withJavaUtilConcurrentTimeUnit:withInt:withRxScheduler:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "callWithId:", "LRxSubscriber;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "timespan_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "timeshift_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JJLJavaUtilConcurrentTimeUnit;ILRxScheduler;", "call", "LRxSubscriber;", "(Lrx/Subscriber<-Ljava/util/List<TT;>;>;)Lrx/Subscriber<-TT;>;", "LRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber;LRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<Ljava/util/List<TT;>;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithTime = { "OperatorBufferWithTime", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 5, -1, 4, -1, 5, -1 };
  return &_RxInternalOperatorsOperatorBufferWithTime;
}

@end

void RxInternalOperatorsOperatorBufferWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(RxInternalOperatorsOperatorBufferWithTime *self, jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler) {
  NSObject_init(self);
  self->timespan_ = timespan;
  self->timeshift_ = timeshift;
  self->unit_ = unit;
  self->count_ = count;
  self->scheduler_ = scheduler;
}

RxInternalOperatorsOperatorBufferWithTime *new_RxInternalOperatorsOperatorBufferWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferWithTime, initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_, timespan, timeshift, unit, count, scheduler)
}

RxInternalOperatorsOperatorBufferWithTime *create_RxInternalOperatorsOperatorBufferWithTime_initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(jlong timespan, jlong timeshift, JavaUtilConcurrentTimeUnit *unit, jint count, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferWithTime, initWithLong_withLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_, timespan, timeshift, unit, count, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithTime)

@implementation RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime:(RxInternalOperatorsOperatorBufferWithTime *)outer$
                                                 withRxSubscriber:(RxSubscriber *)child
                                           withRxScheduler_Worker:(RxScheduler_Worker *)inner {
  RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(self, outer$, child, inner);
  return self;
}

- (void)onNextWithId:(id)t {
  id<JavaUtilList> sizeReached = nil;
  @synchronized(self) {
    if (done_) {
      return;
    }
    id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(chunks_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      id<JavaUtilList> chunk = [it next];
      [((id<JavaUtilList>) nil_chk(chunk)) addWithId:t];
      if ([chunk size] == this$0_->count_) {
        [it remove];
        if (sizeReached == nil) {
          sizeReached = new_JavaUtilLinkedList_init();
        }
        [sizeReached addWithId:chunk];
      }
    }
  }
  if (sizeReached != nil) {
    for (id<JavaUtilList> __strong chunk in sizeReached) {
      [((RxSubscriber *) nil_chk(child_)) onNextWithId:chunk];
    }
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  @synchronized(self) {
    if (done_) {
      return;
    }
    done_ = true;
    [((id<JavaUtilList>) nil_chk(chunks_)) clear];
  }
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
  [self unsubscribe];
}

- (void)onCompleted {
  @try {
    id<JavaUtilList> sizeReached;
    @synchronized(self) {
      if (done_) {
        return;
      }
      done_ = true;
      sizeReached = new_JavaUtilLinkedList_initWithJavaUtilCollection_(chunks_);
      [((id<JavaUtilList>) nil_chk(chunks_)) clear];
    }
    for (id<JavaUtilList> __strong chunk in sizeReached) {
      [((RxSubscriber *) nil_chk(child_)) onNextWithId:chunk];
    }
  }
  @catch (NSException *t) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(t, child_);
    return;
  }
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
  [self unsubscribe];
}

- (void)scheduleChunk {
  (void) [((RxScheduler_Worker *) nil_chk(inner_)) schedulePeriodicallyWithRxFunctionsAction0:new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(self) withLong:this$0_->timeshift_ withLong:this$0_->timeshift_ withJavaUtilConcurrentTimeUnit:this$0_->unit_];
}

- (void)startNewChunk {
  id<JavaUtilList> chunk = new_JavaUtilArrayList_init();
  @synchronized(self) {
    if (done_) {
      return;
    }
    [((id<JavaUtilList>) nil_chk(chunks_)) addWithId:chunk];
  }
  (void) [((RxScheduler_Worker *) nil_chk(inner_)) scheduleWithRxFunctionsAction0:new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(self, chunk) withLong:this$0_->timespan_ withJavaUtilConcurrentTimeUnit:this$0_->unit_];
}

- (void)emitChunkWithJavaUtilList:(id<JavaUtilList>)chunkToEmit {
  jboolean emit = false;
  @synchronized(self) {
    if (done_) {
      return;
    }
    id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(chunks_)) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      id<JavaUtilList> chunk = [it next];
      if (chunk == chunkToEmit) {
        [it remove];
        emit = true;
        break;
      }
    }
  }
  if (emit) {
    @try {
      [((RxSubscriber *) nil_chk(child_)) onNextWithId:chunkToEmit];
    }
    @catch (NSException *t) {
      RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(t, self);
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorBufferWithTime:withRxSubscriber:withRxScheduler_Worker:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "scheduleChunk", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "startNewChunk", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "emitChunkWithJavaUtilList:", "V", 0x0, 7, 8, -1, 9, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferWithTime;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "inner_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "chunks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 11, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorBufferWithTime;LRxSubscriber;LRxScheduler_Worker;", "(Lrx/internal/operators/OperatorBufferWithTime;Lrx/Subscriber<-Ljava/util/List<TT;>;>;Lrx/Scheduler$Worker;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "emitChunk", "LJavaUtilList;", "(Ljava/util/List<TT;>;)V", "Lrx/Subscriber<-Ljava/util/List<TT;>;>;", "Ljava/util/List<Ljava/util/List<TT;>;>;", "LRxInternalOperatorsOperatorBufferWithTime;", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber = { "InexactSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x10, 7, 5, 12, -1, -1, 13, -1 };
  return &_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber;
}

@end

void RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *self, RxInternalOperatorsOperatorBufferWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *inner) {
  self->this$0_ = outer$;
  RxSubscriber_init(self);
  self->child_ = child;
  self->inner_ = inner;
  self->chunks_ = new_JavaUtilLinkedList_init();
}

RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorBufferWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *inner) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber, initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, inner)
}

RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *create_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorBufferWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *inner) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber, initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, inner)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber)

@implementation RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1

- (void)call {
  [this$0_ startNewChunk];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber:(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *)outer$ {
  RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber;", "scheduleChunk" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1;
}

@end

void RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 *self, RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 *new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1, initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_, outer$)
}

RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1 *create_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1, initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$1)

@implementation RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2

- (void)call {
  [this$0_ emitChunkWithJavaUtilList:val$chunk_];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber:(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *)outer$
                                                                   withJavaUtilList:(id<JavaUtilList>)capture$0 {
  RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber:withJavaUtilList:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$chunk_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber;LJavaUtilList;", "(Lrx/internal/operators/OperatorBufferWithTime$InexactSubscriber;Ljava/util/List<TT;>;)V", "Ljava/util/List<TT;>;", "LRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber;", "startNewChunk" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2;
}

@end

void RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 *self, RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$, id<JavaUtilList> capture$0) {
  self->this$0_ = outer$;
  self->val$chunk_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 *new_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$, id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2, initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_, outer$, capture$0)
}

RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2 *create_RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2_initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber *outer$, id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2, initWithRxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_withJavaUtilList_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithTime_InexactSubscriber_$2)

@implementation RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime:(RxInternalOperatorsOperatorBufferWithTime *)outer$
                                                 withRxSubscriber:(RxSubscriber *)child
                                           withRxScheduler_Worker:(RxScheduler_Worker *)inner {
  RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(self, outer$, child, inner);
  return self;
}

- (void)onNextWithId:(id)t {
  id<JavaUtilList> toEmit = nil;
  @synchronized(self) {
    if (done_) {
      return;
    }
    [((id<JavaUtilList>) nil_chk(chunk_)) addWithId:t];
    if ([((id<JavaUtilList>) nil_chk(chunk_)) size] == this$0_->count_) {
      toEmit = chunk_;
      chunk_ = new_JavaUtilArrayList_init();
    }
  }
  if (toEmit != nil) {
    [((RxSubscriber *) nil_chk(child_)) onNextWithId:toEmit];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  @synchronized(self) {
    if (done_) {
      return;
    }
    done_ = true;
    chunk_ = nil;
  }
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
  [self unsubscribe];
}

- (void)onCompleted {
  @try {
    [((RxScheduler_Worker *) nil_chk(inner_)) unsubscribe];
    id<JavaUtilList> toEmit;
    @synchronized(self) {
      if (done_) {
        return;
      }
      done_ = true;
      toEmit = chunk_;
      chunk_ = nil;
    }
    [((RxSubscriber *) nil_chk(child_)) onNextWithId:toEmit];
  }
  @catch (NSException *t) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(t, child_);
    return;
  }
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
  [self unsubscribe];
}

- (void)scheduleExact {
  (void) [((RxScheduler_Worker *) nil_chk(inner_)) schedulePeriodicallyWithRxFunctionsAction0:new_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(self) withLong:this$0_->timespan_ withLong:this$0_->timespan_ withJavaUtilConcurrentTimeUnit:this$0_->unit_];
}

- (void)emit {
  id<JavaUtilList> toEmit;
  @synchronized(self) {
    if (done_) {
      return;
    }
    toEmit = chunk_;
    chunk_ = new_JavaUtilArrayList_init();
  }
  @try {
    [((RxSubscriber *) nil_chk(child_)) onNextWithId:toEmit];
  }
  @catch (NSException *t) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_(t, self);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorBufferWithTime:withRxSubscriber:withRxScheduler_Worker:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "scheduleExact", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "emit", "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferWithTime;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "inner_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "chunk_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 8, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorBufferWithTime;LRxSubscriber;LRxScheduler_Worker;", "(Lrx/internal/operators/OperatorBufferWithTime;Lrx/Subscriber<-Ljava/util/List<TT;>;>;Lrx/Scheduler$Worker;)V", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lrx/Subscriber<-Ljava/util/List<TT;>;>;", "Ljava/util/List<TT;>;", "LRxInternalOperatorsOperatorBufferWithTime;", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber = { "ExactSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x10, 6, 5, 9, -1, -1, 10, -1 };
  return &_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber;
}

@end

void RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *self, RxInternalOperatorsOperatorBufferWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *inner) {
  self->this$0_ = outer$;
  RxSubscriber_init(self);
  self->child_ = child;
  self->inner_ = inner;
  self->chunk_ = new_JavaUtilArrayList_init();
}

RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *new_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorBufferWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *inner) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber, initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, inner)
}

RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *create_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_(RxInternalOperatorsOperatorBufferWithTime *outer$, RxSubscriber *child, RxScheduler_Worker *inner) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber, initWithRxInternalOperatorsOperatorBufferWithTime_withRxSubscriber_withRxScheduler_Worker_, outer$, child, inner)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber)

@implementation RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1

- (void)call {
  [this$0_ emit];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber:(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *)outer$ {
  RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber;", "scheduleExact" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1;
}

@end

void RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 *self, RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 *new_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1, initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_, outer$)
}

RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1 *create_RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1_initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1, initWithRxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithTime_ExactSubscriber_$1)
