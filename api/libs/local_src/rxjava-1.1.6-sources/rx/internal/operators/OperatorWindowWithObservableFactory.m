//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorWindowWithObservableFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "rx/Observable.h"
#include "rx/Observer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/functions/Func0.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/internal/operators/OperatorWindowWithObservableFactory.h"
#include "rx/observers/SerializedSubscriber.h"
#include "rx/subjects/UnicastSubject.h"
#include "rx/subscriptions/SerialSubscription.h"

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorWindowWithObservableFactory)

id RxInternalOperatorsOperatorWindowWithObservableFactory_NEXT_SUBJECT;
RxInternalOperatorsNotificationLite *RxInternalOperatorsOperatorWindowWithObservableFactory_nl;

@implementation RxInternalOperatorsOperatorWindowWithObservableFactory

+ (id)NEXT_SUBJECT {
  return RxInternalOperatorsOperatorWindowWithObservableFactory_NEXT_SUBJECT;
}

+ (RxInternalOperatorsNotificationLite *)nl {
  return RxInternalOperatorsOperatorWindowWithObservableFactory_nl;
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)otherFactory {
  RxInternalOperatorsOperatorWindowWithObservableFactory_initWithRxFunctionsFunc0_(self, otherFactory);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *sub = new_RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc0_(child, otherFactory_);
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:sub];
  [sub replaceWindow];
  return sub;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxFunctionsFunc0:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "callWithId:", "LRxSubscriber;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "otherFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "NEXT_SUBJECT", "LNSObject;", .constantValue.asLong = 0, 0x18, -1, 6, -1, -1 },
    { "nl", "LRxInternalOperatorsNotificationLite;", .constantValue.asLong = 0, 0x18, -1, 7, 8, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc0;", "(Lrx/functions/Func0<+Lrx/Observable<+TU;>;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lrx/Observable<TT;>;>;)Lrx/Subscriber<-TT;>;", "Lrx/functions/Func0<+Lrx/Observable<+TU;>;>;", &RxInternalOperatorsOperatorWindowWithObservableFactory_NEXT_SUBJECT, &RxInternalOperatorsOperatorWindowWithObservableFactory_nl, "Lrx/internal/operators/NotificationLite<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber;LRxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<Lrx/Observable<TT;>;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithObservableFactory = { "OperatorWindowWithObservableFactory", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 3, -1, 9, -1, 10, -1 };
  return &_RxInternalOperatorsOperatorWindowWithObservableFactory;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorWindowWithObservableFactory class]) {
    RxInternalOperatorsOperatorWindowWithObservableFactory_NEXT_SUBJECT = new_NSObject_init();
    RxInternalOperatorsOperatorWindowWithObservableFactory_nl = RxInternalOperatorsNotificationLite_instance();
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorWindowWithObservableFactory)
  }
}

@end

void RxInternalOperatorsOperatorWindowWithObservableFactory_initWithRxFunctionsFunc0_(RxInternalOperatorsOperatorWindowWithObservableFactory *self, id<RxFunctionsFunc0> otherFactory) {
  NSObject_init(self);
  self->otherFactory_ = otherFactory;
}

RxInternalOperatorsOperatorWindowWithObservableFactory *new_RxInternalOperatorsOperatorWindowWithObservableFactory_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> otherFactory) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithObservableFactory, initWithRxFunctionsFunc0_, otherFactory)
}

RxInternalOperatorsOperatorWindowWithObservableFactory *create_RxInternalOperatorsOperatorWindowWithObservableFactory_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> otherFactory) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithObservableFactory, initWithRxFunctionsFunc0_, otherFactory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithObservableFactory)

@implementation RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
                withRxFunctionsFunc0:(id<RxFunctionsFunc0>)otherFactory {
  RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc0_(self, child, otherFactory);
  return self;
}

- (void)onStart {
  [self requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)onNextWithId:(id)t {
  id<JavaUtilList> localQueue;
  @synchronized(guard_) {
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_JavaUtilArrayList_init();
      }
      [queue_ addWithId:t];
      return;
    }
    localQueue = queue_;
    queue_ = nil;
    emitting_ = true;
  }
  jboolean once = true;
  jboolean skipFinal = false;
  @try {
    do {
      [self drainWithJavaUtilList:localQueue];
      if (once) {
        once = false;
        [self emitValueWithId:t];
      }
      @synchronized(guard_) {
        localQueue = queue_;
        queue_ = nil;
        if (localQueue == nil) {
          emitting_ = false;
          skipFinal = true;
          return;
        }
      }
    }
    while (![((RxSubscriber *) nil_chk(child_)) isUnsubscribed]);
  }
  @finally {
    if (!skipFinal) {
      @synchronized(guard_) {
        emitting_ = false;
      }
    }
  }
}

- (void)drainWithJavaUtilList:(id<JavaUtilList>)queue {
  if (queue == nil) {
    return;
  }
  for (id __strong o in queue) {
    if (o == JreLoadStatic(RxInternalOperatorsOperatorWindowWithObservableFactory, NEXT_SUBJECT)) {
      [self replaceSubject];
    }
    else if ([((RxInternalOperatorsNotificationLite *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorWindowWithObservableFactory, nl))) isErrorWithId:o]) {
      [self errorWithNSException:[JreLoadStatic(RxInternalOperatorsOperatorWindowWithObservableFactory, nl) getErrorWithId:o]];
      break;
    }
    else if ([JreLoadStatic(RxInternalOperatorsOperatorWindowWithObservableFactory, nl) isCompletedWithId:o]) {
      [self complete];
      break;
    }
    else {
      id t = o;
      [self emitValueWithId:t];
    }
  }
}

- (void)replaceSubject {
  id<RxObserver> s = consumer_;
  if (s != nil) {
    [s onCompleted];
  }
  [self createNewWindow];
  [((RxSubscriber *) nil_chk(child_)) onNextWithId:producer_SourceSubscriber_];
}

- (void)createNewWindow {
  RxSubjectsUnicastSubject *bus = RxSubjectsUnicastSubject_create();
  consumer_ = bus;
  producer_SourceSubscriber_ = bus;
  RxObservable *other;
  @try {
    other = [((id<RxFunctionsFunc0>) nil_chk(otherFactory_)) call];
  }
  @catch (NSException *e) {
    [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
    [self unsubscribe];
    return;
  }
  RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber *bs = new_RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber_initWithRxSubscriber_withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_(child_, self);
  [((RxSubscriptionsSerialSubscription *) nil_chk(ssub_)) setWithRxSubscription:bs];
  (void) [((RxObservable *) nil_chk(other)) unsafeSubscribeWithRxSubscriber:bs];
}

- (void)emitValueWithId:(id)t {
  id<RxObserver> s = consumer_;
  if (s != nil) {
    [s onNextWithId:t];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  @synchronized(guard_) {
    if (emitting_) {
      queue_ = JavaUtilCollections_singletonListWithId_([((RxInternalOperatorsNotificationLite *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorWindowWithObservableFactory, nl))) errorWithNSException:e]);
      return;
    }
    queue_ = nil;
    emitting_ = true;
  }
  [self errorWithNSException:e];
}

- (void)onCompleted {
  id<JavaUtilList> localQueue;
  @synchronized(guard_) {
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_JavaUtilArrayList_init();
      }
      [queue_ addWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorWindowWithObservableFactory, nl))) completed]];
      return;
    }
    localQueue = queue_;
    queue_ = nil;
    emitting_ = true;
  }
  @try {
    [self drainWithJavaUtilList:localQueue];
  }
  @catch (NSException *e) {
    [self errorWithNSException:e];
    return;
  }
  [self complete];
}

- (void)replaceWindow {
  id<JavaUtilList> localQueue;
  @synchronized(guard_) {
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_JavaUtilArrayList_init();
      }
      [queue_ addWithId:JreLoadStatic(RxInternalOperatorsOperatorWindowWithObservableFactory, NEXT_SUBJECT)];
      return;
    }
    localQueue = queue_;
    queue_ = nil;
    emitting_ = true;
  }
  jboolean once = true;
  jboolean skipFinal = false;
  @try {
    do {
      [self drainWithJavaUtilList:localQueue];
      if (once) {
        once = false;
        [self replaceSubject];
      }
      @synchronized(guard_) {
        localQueue = queue_;
        queue_ = nil;
        if (localQueue == nil) {
          emitting_ = false;
          skipFinal = true;
          return;
        }
      }
    }
    while (![((RxSubscriber *) nil_chk(child_)) isUnsubscribed]);
  }
  @finally {
    if (!skipFinal) {
      @synchronized(guard_) {
        emitting_ = false;
      }
    }
  }
}

- (void)complete {
  id<RxObserver> s = consumer_;
  consumer_ = nil;
  producer_SourceSubscriber_ = nil;
  if (s != nil) {
    [s onCompleted];
  }
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
  [self unsubscribe];
}

- (void)errorWithNSException:(NSException *)e {
  id<RxObserver> s = consumer_;
  consumer_ = nil;
  producer_SourceSubscriber_ = nil;
  if (s != nil) {
    [s onErrorWithNSException:e];
  }
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
  [self unsubscribe];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withRxFunctionsFunc0:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onStart", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "drainWithJavaUtilList:", "V", 0x0, 5, 6, -1, 7, -1, -1 },
    { "replaceSubject", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "createNewWindow", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "emitValueWithId:", "V", 0x0, 8, 3, -1, 4, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "replaceWindow", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "complete", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "errorWithNSException:", "V", 0x0, 11, 10, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 12, -1 },
    { "guard_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "consumer_", "LRxObserver;", .constantValue.asLong = 0, 0x0, -1, -1, 13, -1 },
    { "producer_SourceSubscriber_", "LRxObservable;", .constantValue.asLong = 0, 0x0, 14, -1, 15, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "queue_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 16, -1 },
    { "ssub_", "LRxSubscriptionsSerialSubscription;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "otherFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x10, -1, -1, 17, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;LRxFunctionsFunc0;", "(Lrx/Subscriber<-Lrx/Observable<TT;>;>;Lrx/functions/Func0<+Lrx/Observable<+TU;>;>;)V", "onNext", "LNSObject;", "(TT;)V", "drain", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Object;>;)V", "emitValue", "onError", "LNSException;", "error", "Lrx/Subscriber<-Lrx/Observable<TT;>;>;", "Lrx/Observer<TT;>;", "producer", "Lrx/Observable<TT;>;", "Ljava/util/List<Ljava/lang/Object;>;", "Lrx/functions/Func0<+Lrx/Observable<+TU;>;>;", "LRxInternalOperatorsOperatorWindowWithObservableFactory;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber = { "SourceSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 12, 8, 18, -1, -1, 19, -1 };
  return &_RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber;
}

@end

void RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc0_(RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *self, RxSubscriber *child, id<RxFunctionsFunc0> otherFactory) {
  RxSubscriber_init(self);
  self->child_ = new_RxObserversSerializedSubscriber_initWithRxSubscriber_(child);
  self->guard_ = new_NSObject_init();
  self->ssub_ = new_RxSubscriptionsSerialSubscription_init();
  self->otherFactory_ = otherFactory;
  [self addWithRxSubscription:self->ssub_];
}

RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *new_RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc0_(RxSubscriber *child, id<RxFunctionsFunc0> otherFactory) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber, initWithRxSubscriber_withRxFunctionsFunc0_, child, otherFactory)
}

RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *create_RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc0_(RxSubscriber *child, id<RxFunctionsFunc0> otherFactory) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber, initWithRxSubscriber_withRxFunctionsFunc0_, child, otherFactory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber)

@implementation RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber:(RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *)sub {
  RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber_initWithRxSubscriber_withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_(self, child, sub);
  return self;
}

- (void)onStart {
  [self requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)onNextWithId:(id)t {
  if (!done_) {
    done_ = true;
    [((RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *) nil_chk(sub_)) replaceWindow];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *) nil_chk(sub_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  if (!done_) {
    done_ = true;
    [((RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *) nil_chk(sub_)) onCompleted];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onStart", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sub_", "LRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;LRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber;", "(Lrx/Subscriber<*>;Lrx/internal/operators/OperatorWindowWithObservableFactory$SourceSubscriber<TT;TU;>;)V", "onNext", "LNSObject;", "(TU;)V", "onError", "LNSException;", "Lrx/internal/operators/OperatorWindowWithObservableFactory$SourceSubscriber<TT;TU;>;", "LRxInternalOperatorsOperatorWindowWithObservableFactory;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lrx/Subscriber<TU;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber = { "BoundarySubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 5, 2, 8, -1, -1, 9, -1 };
  return &_RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber;
}

@end

void RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber_initWithRxSubscriber_withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_(RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber *self, RxSubscriber *child, RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *sub) {
  RxSubscriber_init(self);
  self->sub_ = sub;
}

RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber *new_RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber_initWithRxSubscriber_withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_(RxSubscriber *child, RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *sub) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber, initWithRxSubscriber_withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_, child, sub)
}

RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber *create_RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber_initWithRxSubscriber_withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_(RxSubscriber *child, RxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber *sub) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber, initWithRxSubscriber_withRxInternalOperatorsOperatorWindowWithObservableFactory_SourceSubscriber_, child, sub)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorWindowWithObservableFactory_BoundarySubscriber)
