//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/SingleOnSubscribeUsing.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "rx/Single.h"
#include "rx/SingleSubscriber.h"
#include "rx/Subscription.h"
#include "rx/exceptions/CompositeException.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Action1.h"
#include "rx/functions/Func0.h"
#include "rx/functions/Func1.h"
#include "rx/internal/operators/SingleOnSubscribeUsing.h"
#include "rx/plugins/RxJavaErrorHandler.h"
#include "rx/plugins/RxJavaPlugins.h"

@interface RxInternalOperatorsSingleOnSubscribeUsing_$1 : RxSingleSubscriber {
 @public
  RxInternalOperatorsSingleOnSubscribeUsing *this$0_;
  id val$resource_;
  RxSingleSubscriber *val$child_;
}

- (void)onSuccessWithId:(id)value;

- (void)onErrorWithNSException:(NSException *)error;

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsing:(RxInternalOperatorsSingleOnSubscribeUsing *)outer$
                                                           withId:(id)capture$0
                                           withRxSingleSubscriber:(RxSingleSubscriber *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsSingleOnSubscribeUsing_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsing_$1, this$0_, RxInternalOperatorsSingleOnSubscribeUsing *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsing_$1, val$resource_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsSingleOnSubscribeUsing_$1, val$child_, RxSingleSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(RxInternalOperatorsSingleOnSubscribeUsing_$1 *self, RxInternalOperatorsSingleOnSubscribeUsing *outer$, id capture$0, RxSingleSubscriber *capture$1);

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsing_$1 *new_RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(RxInternalOperatorsSingleOnSubscribeUsing *outer$, id capture$0, RxSingleSubscriber *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsSingleOnSubscribeUsing_$1 *create_RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(RxInternalOperatorsSingleOnSubscribeUsing *outer$, id capture$0, RxSingleSubscriber *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsSingleOnSubscribeUsing_$1)

@implementation RxInternalOperatorsSingleOnSubscribeUsing

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)observableFactory
                  withRxFunctionsAction1:(id<RxFunctionsAction1>)disposeAction
                             withBoolean:(jboolean)disposeEagerly {
  RxInternalOperatorsSingleOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(self, resourceFactory, observableFactory, disposeAction, disposeEagerly);
  return self;
}

- (void)callWithId:(RxSingleSubscriber *)child {
  id resource;
  @try {
    resource = [((id<RxFunctionsFunc0>) nil_chk(resourceFactory_)) call];
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    [((RxSingleSubscriber *) nil_chk(child)) onErrorWithNSException:ex];
    return;
  }
  RxSingle *single;
  @try {
    single = [((id<RxFunctionsFunc1>) nil_chk(singleFactory_)) callWithId:resource];
  }
  @catch (NSException *ex) {
    [self handleSubscriptionTimeErrorWithRxSingleSubscriber:child withId:resource withNSException:ex];
    return;
  }
  if (single == nil) {
    [self handleSubscriptionTimeErrorWithRxSingleSubscriber:child withId:resource withNSException:new_JavaLangNullPointerException_initWithNSString_(@"The single")];
    return;
  }
  RxSingleSubscriber *parent = new_RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(self, resource, child);
  [((RxSingleSubscriber *) nil_chk(child)) addWithRxSubscription:parent];
  (void) [single subscribeWithRxSingleSubscriber:parent];
}

- (void)handleSubscriptionTimeErrorWithRxSingleSubscriber:(RxSingleSubscriber *)t
                                                   withId:(id)resource
                                          withNSException:(NSException *)ex {
  RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
  if (disposeEagerly_) {
    @try {
      [((id<RxFunctionsAction1>) nil_chk(disposeAction_)) callWithId:resource];
    }
    @catch (NSException *ex2) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(ex2);
      ex = new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ ex, ex2 } count:2 type:NSException_class_()]));
    }
  }
  [((RxSingleSubscriber *) nil_chk(t)) onErrorWithNSException:ex];
  if (!disposeEagerly_) {
    @try {
      [((id<RxFunctionsAction1>) nil_chk(disposeAction_)) callWithId:resource];
    }
    @catch (NSException *ex2) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(ex2);
      [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:ex2];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:withBoolean:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "callWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "handleSubscriptionTimeErrorWithRxSingleSubscriber:withId:withNSException:", "V", 0x0, 5, 6, -1, 7, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "resourceFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "singleFactory_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "disposeAction_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "disposeEagerly_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;Z", "(Lrx/functions/Func0<TResource;>;Lrx/functions/Func1<-TResource;+Lrx/Single<+TT;>;>;Lrx/functions/Action1<-TResource;>;Z)V", "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "handleSubscriptionTimeError", "LRxSingleSubscriber;LNSObject;LNSException;", "(Lrx/SingleSubscriber<-TT;>;TResource;Ljava/lang/Throwable;)V", "Lrx/functions/Func0<TResource;>;", "Lrx/functions/Func1<-TResource;+Lrx/Single<+TT;>;>;", "Lrx/functions/Action1<-TResource;>;", "<T:Ljava/lang/Object;Resource:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsing = { "SingleOnSubscribeUsing", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 3, 4, -1, -1, -1, 11, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsing;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(RxInternalOperatorsSingleOnSubscribeUsing *self, id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> disposeAction, jboolean disposeEagerly) {
  NSObject_init(self);
  self->resourceFactory_ = resourceFactory;
  self->singleFactory_ = observableFactory;
  self->disposeAction_ = disposeAction;
  self->disposeEagerly_ = disposeEagerly;
}

RxInternalOperatorsSingleOnSubscribeUsing *new_RxInternalOperatorsSingleOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> disposeAction, jboolean disposeEagerly) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsing, initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_, resourceFactory, observableFactory, disposeAction, disposeEagerly)
}

RxInternalOperatorsSingleOnSubscribeUsing *create_RxInternalOperatorsSingleOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> disposeAction, jboolean disposeEagerly) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsing, initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_, resourceFactory, observableFactory, disposeAction, disposeEagerly)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnSubscribeUsing)

@implementation RxInternalOperatorsSingleOnSubscribeUsing_$1

- (void)onSuccessWithId:(id)value {
  if (this$0_->disposeEagerly_) {
    @try {
      [((id<RxFunctionsAction1>) nil_chk(this$0_->disposeAction_)) callWithId:val$resource_];
    }
    @catch (NSException *ex) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
      [((RxSingleSubscriber *) nil_chk(val$child_)) onErrorWithNSException:ex];
      return;
    }
  }
  [((RxSingleSubscriber *) nil_chk(val$child_)) onSuccessWithId:value];
  if (!this$0_->disposeEagerly_) {
    @try {
      [((id<RxFunctionsAction1>) nil_chk(this$0_->disposeAction_)) callWithId:val$resource_];
    }
    @catch (NSException *ex2) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(ex2);
      [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:ex2];
    }
  }
}

- (void)onErrorWithNSException:(NSException *)error {
  [this$0_ handleSubscriptionTimeErrorWithRxSingleSubscriber:val$child_ withId:val$resource_ withNSException:error];
}

- (instancetype)initWithRxInternalOperatorsSingleOnSubscribeUsing:(RxInternalOperatorsSingleOnSubscribeUsing *)outer$
                                                           withId:(id)capture$0
                                           withRxSingleSubscriber:(RxSingleSubscriber *)capture$1 {
  RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsSingleOnSubscribeUsing:withId:withRxSingleSubscriber:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsSingleOnSubscribeUsing;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$resource_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$child_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LRxInternalOperatorsSingleOnSubscribeUsing;LNSObject;LRxSingleSubscriber;", "(Lrx/internal/operators/SingleOnSubscribeUsing;TResource;Lrx/SingleSubscriber<-TT;>;)V", "TResource;", "Lrx/SingleSubscriber<-TT;>;", "LRxInternalOperatorsSingleOnSubscribeUsing;", "callWithId:", "Lrx/SingleSubscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsSingleOnSubscribeUsing_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 3, 3, 9, -1, 10, 11, -1 };
  return &_RxInternalOperatorsSingleOnSubscribeUsing_$1;
}

@end

void RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(RxInternalOperatorsSingleOnSubscribeUsing_$1 *self, RxInternalOperatorsSingleOnSubscribeUsing *outer$, id capture$0, RxSingleSubscriber *capture$1) {
  self->this$0_ = outer$;
  self->val$resource_ = capture$0;
  self->val$child_ = capture$1;
  RxSingleSubscriber_init(self);
}

RxInternalOperatorsSingleOnSubscribeUsing_$1 *new_RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(RxInternalOperatorsSingleOnSubscribeUsing *outer$, id capture$0, RxSingleSubscriber *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsSingleOnSubscribeUsing_$1, initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_, outer$, capture$0, capture$1)
}

RxInternalOperatorsSingleOnSubscribeUsing_$1 *create_RxInternalOperatorsSingleOnSubscribeUsing_$1_initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_(RxInternalOperatorsSingleOnSubscribeUsing *outer$, id capture$0, RxSingleSubscriber *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsSingleOnSubscribeUsing_$1, initWithRxInternalOperatorsSingleOnSubscribeUsing_withId_withRxSingleSubscriber_, outer$, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsSingleOnSubscribeUsing_$1)
