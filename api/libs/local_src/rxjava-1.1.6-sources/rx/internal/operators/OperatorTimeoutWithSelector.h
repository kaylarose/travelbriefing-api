//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorTimeoutWithSelector.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorTimeoutWithSelector")
#ifdef RESTRICT_RxInternalOperatorsOperatorTimeoutWithSelector
#define INCLUDE_ALL_RxInternalOperatorsOperatorTimeoutWithSelector 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorTimeoutWithSelector 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorTimeoutWithSelector

#if !defined (RxInternalOperatorsOperatorTimeoutWithSelector_) && (INCLUDE_ALL_RxInternalOperatorsOperatorTimeoutWithSelector || defined(INCLUDE_RxInternalOperatorsOperatorTimeoutWithSelector))
#define RxInternalOperatorsOperatorTimeoutWithSelector_

#define RESTRICT_RxInternalOperatorsOperatorTimeoutBase 1
#define INCLUDE_RxInternalOperatorsOperatorTimeoutBase 1
#include "rx/internal/operators/OperatorTimeoutBase.h"

@class RxObservable;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;

/*!
 @brief Returns an Observable that mirrors the source Observable.
 If either the first
 item emitted by the source Observable or any subsequent item don't arrive
 within time windows defined by provided Observables, switch to the
 <code>other</code> Observable if provided, or emit a TimeoutException .
 */
@interface RxInternalOperatorsOperatorTimeoutWithSelector : RxInternalOperatorsOperatorTimeoutBase

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)firstTimeoutSelector
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)timeoutSelector
                        withRxObservable:(RxObservable *)other;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeoutWithSelector)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(RxInternalOperatorsOperatorTimeoutWithSelector *self, id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other);

FOUNDATION_EXPORT RxInternalOperatorsOperatorTimeoutWithSelector *new_RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorTimeoutWithSelector *create_RxInternalOperatorsOperatorTimeoutWithSelector_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxObservable_(id<RxFunctionsFunc0> firstTimeoutSelector, id<RxFunctionsFunc1> timeoutSelector, RxObservable *other);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTimeoutWithSelector)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorTimeoutWithSelector")
