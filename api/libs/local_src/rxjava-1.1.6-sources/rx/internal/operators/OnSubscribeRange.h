//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OnSubscribeRange.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeRange")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeRange
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeRange 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeRange 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeRange

#if !defined (RxInternalOperatorsOnSubscribeRange_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeRange || defined(INCLUDE_RxInternalOperatorsOnSubscribeRange))
#define RxInternalOperatorsOnSubscribeRange_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "rx/Observable.h"

@class RxSubscriber;

/*!
 @brief Emit ints from start to end inclusive.
 */
@interface RxInternalOperatorsOnSubscribeRange : NSObject < RxObservable_OnSubscribe >

#pragma mark Public

- (instancetype)initWithInt:(jint)start
                    withInt:(jint)end;

- (void)callWithId:(RxSubscriber *)childSubscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeRange)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeRange_initWithInt_withInt_(RxInternalOperatorsOnSubscribeRange *self, jint start, jint end);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeRange *new_RxInternalOperatorsOnSubscribeRange_initWithInt_withInt_(jint start, jint end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeRange *create_RxInternalOperatorsOnSubscribeRange_initWithInt_withInt_(jint start, jint end);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeRange)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeRange")
