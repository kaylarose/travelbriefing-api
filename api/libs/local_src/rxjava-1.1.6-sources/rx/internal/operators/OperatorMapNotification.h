//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorMapNotification.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorMapNotification")
#ifdef RESTRICT_RxInternalOperatorsOperatorMapNotification
#define INCLUDE_ALL_RxInternalOperatorsOperatorMapNotification 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorMapNotification 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorMapNotification

#if !defined (RxInternalOperatorsOperatorMapNotification_) && (INCLUDE_ALL_RxInternalOperatorsOperatorMapNotification || defined(INCLUDE_RxInternalOperatorsOperatorMapNotification))
#define RxInternalOperatorsOperatorMapNotification_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;

/*!
 @brief Applies a function of your choosing to every item emitted by an <code>Observable</code>, and emits the results of
 this transformation as a new <code>Observable</code>.
 <p>
 <img width="640" height="305" src="https://raw.githubusercontent.com/wiki/ReactiveX/RxJava/images/rx-operators/map.png" alt="">
 */
@interface RxInternalOperatorsOperatorMapNotification : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc1> onNext_;
  id<RxFunctionsFunc1> onError_;
  id<RxFunctionsFunc0> onCompleted_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNext
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)onError
                    withRxFunctionsFunc0:(id<RxFunctionsFunc0>)onCompleted;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotification)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification, onNext_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification, onError_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification, onCompleted_, id<RxFunctionsFunc0>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorMapNotification_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(RxInternalOperatorsOperatorMapNotification *self, id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted);

FOUNDATION_EXPORT RxInternalOperatorsOperatorMapNotification *new_RxInternalOperatorsOperatorMapNotification_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorMapNotification *create_RxInternalOperatorsOperatorMapNotification_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMapNotification)

#endif

#if !defined (RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsOperatorMapNotification || defined(INCLUDE_RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber))
#define RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "rx/Subscriber.h"

@class JavaUtilConcurrentAtomicAtomicLong;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;
@protocol RxProducer;

@interface RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber : RxSubscriber {
 @public
  RxSubscriber *actual_;
  id<RxFunctionsFunc1> onNext_;
  id<RxFunctionsFunc1> onError_;
  id<RxFunctionsFunc0> onCompleted_;
  JavaUtilConcurrentAtomicAtomicLong *requested_MapNotificationSubscriber_;
  JavaUtilConcurrentAtomicAtomicLong *missedRequested_;
  JavaUtilConcurrentAtomicAtomicReference *producer_MapNotificationSubscriber_;
  jlong produced_;
  id value_;
}

+ (jlong)COMPLETED_FLAG;

+ (jlong)REQUESTED_MASK;

#pragma mark Public

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)onNext
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)onError
                withRxFunctionsFunc0:(id<RxFunctionsFunc0>)onCompleted;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

#pragma mark Package-Private

- (void)accountProduced;

- (void)requestInnerWithLong:(jlong)n;

- (void)tryEmit;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, actual_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, onNext_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, onError_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, onCompleted_, id<RxFunctionsFunc0>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, requested_MapNotificationSubscriber_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, missedRequested_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, producer_MapNotificationSubscriber_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, value_, id)

inline jlong RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_get_COMPLETED_FLAG();
#define RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_COMPLETED_FLAG ((jlong) 0x8000000000000000LL)
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, COMPLETED_FLAG, jlong)

inline jlong RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_get_REQUESTED_MASK();
#define RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_REQUESTED_MASK 9223372036854775807LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber, REQUESTED_MASK, jlong)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber *self, RxSubscriber *actual, id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted);

FOUNDATION_EXPORT RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber *new_RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(RxSubscriber *actual, id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber *create_RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber_initWithRxSubscriber_withRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(RxSubscriber *actual, id<RxFunctionsFunc1> onNext, id<RxFunctionsFunc1> onError, id<RxFunctionsFunc0> onCompleted);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMapNotification_MapNotificationSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorMapNotification")
