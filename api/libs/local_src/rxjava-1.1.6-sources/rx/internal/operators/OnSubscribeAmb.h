//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OnSubscribeAmb.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeAmb")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeAmb
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeAmb 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeAmb 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeAmb

#if !defined (RxInternalOperatorsOnSubscribeAmb_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeAmb || defined(INCLUDE_RxInternalOperatorsOnSubscribeAmb))
#define RxInternalOperatorsOnSubscribeAmb_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "rx/Observable.h"

@class RxObservable;
@class RxSubscriber;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;

/*!
 @brief Given multiple <code>Observable</code>s, propagates the one that first emits an item.
 */
@interface RxInternalOperatorsOnSubscribeAmb : NSObject < RxObservable_OnSubscribe > {
 @public
  id<JavaLangIterable> sources_;
}

#pragma mark Public

/*!
 @brief Given a set of <code>Observable</code>s, propagates the one that first emits an item.
 @param sources
 an <code>Iterable</code> of <code>Observable</code>s
 @return an <code>Observable</code> that mirrors the one of the <code>Observable</code>s in <code>sources</code> that was
 the first to emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithJavaLangIterable:(id<JavaLangIterable>)sources;

/*!
 @brief Given two <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2;

/*!
 @brief Given three <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @param o3
 the third <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3;

/*!
 @brief Given four <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @param o3
 the third <code>Observable</code>
 @param o4
 the fourth <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4;

/*!
 @brief Given five <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @param o3
 the third <code>Observable</code>
 @param o4
 the fourth <code>Observable</code>
 @param o5
 the fifth <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5;

/*!
 @brief Given six <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @param o3
 the third <code>Observable</code>
 @param o4
 the fourth <code>Observable</code>
 @param o5
 the fifth <code>Observable</code>
 @param o6
 the sixth <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6;

/*!
 @brief Given seven <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @param o3
 the third <code>Observable</code>
 @param o4
 the fourth <code>Observable</code>
 @param o5
 the fifth <code>Observable</code>
 @param o6
 the sixth <code>Observable</code>
 @param o7
 the seventh <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7;

/*!
 @brief Given eight <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @param o3
 the third <code>Observable</code>
 @param o4
 the fourth <code>Observable</code>
 @param o5
 the fifth <code>Observable</code>
 @param o6
 the sixth <code>Observable</code>
 @param o7
 the seventh <code>Observable</code>
 @param o8
 the eighth <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7
                                   withRxObservable:(RxObservable *)o8;

/*!
 @brief Given nine <code>Observable</code>s, propagates the one that first emits an item.
 @param o1
 the first <code>Observable</code>
 @param o2
 the second <code>Observable</code>
 @param o3
 the third <code>Observable</code>
 @param o4
 the fourth <code>Observable</code>
 @param o5
 the fifth <code>Observable</code>
 @param o6
 the sixth <code>Observable</code>
 @param o7
 the seventh <code>Observable</code>
 @param o8
 the eighth <code>Observable</code>
 @param o9
 the ninth <code>Observable</code>
 @return an <code>Observable</code> that mirrors the one of the source <code>Observable</code>s that was first to
 emit an item
 */
+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7
                                   withRxObservable:(RxObservable *)o8
                                   withRxObservable:(RxObservable *)o9;

- (void)callWithId:(RxSubscriber *)subscriber;

#pragma mark Package-Private

+ (void)unsubscribeAmbSubscribersWithJavaUtilCollection:(id<JavaUtilCollection>)ambSubscribers;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAmb)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb, sources_, id<JavaLangIterable>)

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, RxObservable *o9);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(id<JavaLangIterable> sources);

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(id<JavaUtilCollection> ambSubscribers);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeAmb)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeAmb")
