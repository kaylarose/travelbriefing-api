//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorElementAt.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorElementAt")
#ifdef RESTRICT_RxInternalOperatorsOperatorElementAt
#define INCLUDE_ALL_RxInternalOperatorsOperatorElementAt 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorElementAt 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorElementAt

#if !defined (RxInternalOperatorsOperatorElementAt_) && (INCLUDE_ALL_RxInternalOperatorsOperatorElementAt || defined(INCLUDE_RxInternalOperatorsOperatorElementAt))
#define RxInternalOperatorsOperatorElementAt_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;

/*!
 @brief Returns the element at a specified index in a sequence.
 */
@interface RxInternalOperatorsOperatorElementAt : NSObject < RxObservable_Operator > {
 @public
  jint index_;
  jboolean hasDefault_;
  id defaultValue_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)index;

- (instancetype)initWithInt:(jint)index
                     withId:(id)defaultValue;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorElementAt)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorElementAt, defaultValue_, id)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorElementAt_initWithInt_(RxInternalOperatorsOperatorElementAt *self, jint index);

FOUNDATION_EXPORT RxInternalOperatorsOperatorElementAt *new_RxInternalOperatorsOperatorElementAt_initWithInt_(jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorElementAt *create_RxInternalOperatorsOperatorElementAt_initWithInt_(jint index);

FOUNDATION_EXPORT void RxInternalOperatorsOperatorElementAt_initWithInt_withId_(RxInternalOperatorsOperatorElementAt *self, jint index, id defaultValue);

FOUNDATION_EXPORT RxInternalOperatorsOperatorElementAt *new_RxInternalOperatorsOperatorElementAt_initWithInt_withId_(jint index, id defaultValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorElementAt *create_RxInternalOperatorsOperatorElementAt_initWithInt_withId_(jint index, id defaultValue);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorElementAt)

#endif

#if !defined (RxInternalOperatorsOperatorElementAt_InnerProducer_) && (INCLUDE_ALL_RxInternalOperatorsOperatorElementAt || defined(INCLUDE_RxInternalOperatorsOperatorElementAt_InnerProducer))
#define RxInternalOperatorsOperatorElementAt_InnerProducer_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicBoolean 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicBoolean 1
#include "java/util/concurrent/atomic/AtomicBoolean.h"

#define RESTRICT_RxProducer 1
#define INCLUDE_RxProducer 1
#include "rx/Producer.h"

/*!
 @brief A producer that wraps another Producer and requests Long.MAX_VALUE
 when the first positive request() call comes in.
 */
@interface RxInternalOperatorsOperatorElementAt_InnerProducer : JavaUtilConcurrentAtomicAtomicBoolean < RxProducer > {
 @public
  id<RxProducer> actual_;
}

#pragma mark Public

- (instancetype)initWithRxProducer:(id<RxProducer>)actual;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorElementAt_InnerProducer)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorElementAt_InnerProducer, actual_, id<RxProducer>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorElementAt_InnerProducer_initWithRxProducer_(RxInternalOperatorsOperatorElementAt_InnerProducer *self, id<RxProducer> actual);

FOUNDATION_EXPORT RxInternalOperatorsOperatorElementAt_InnerProducer *new_RxInternalOperatorsOperatorElementAt_InnerProducer_initWithRxProducer_(id<RxProducer> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorElementAt_InnerProducer *create_RxInternalOperatorsOperatorElementAt_InnerProducer_initWithRxProducer_(id<RxProducer> actual);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorElementAt_InnerProducer)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorElementAt")
