//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorAny.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorAny")
#ifdef RESTRICT_RxInternalOperatorsOperatorAny
#define INCLUDE_ALL_RxInternalOperatorsOperatorAny 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorAny 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorAny

#if !defined (RxInternalOperatorsOperatorAny_) && (INCLUDE_ALL_RxInternalOperatorsOperatorAny || defined(INCLUDE_RxInternalOperatorsOperatorAny))
#define RxInternalOperatorsOperatorAny_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc1;

/*!
 @brief Returns an <code>Observable</code> that emits <code>true</code> if any element of
 an observable sequence satisfies a condition, otherwise <code>false</code>.
 */
@interface RxInternalOperatorsOperatorAny : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc1> predicate_;
  jboolean returnOnEmpty_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate
                             withBoolean:(jboolean)returnOnEmpty;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorAny)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorAny, predicate_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorAny_initWithRxFunctionsFunc1_withBoolean_(RxInternalOperatorsOperatorAny *self, id<RxFunctionsFunc1> predicate, jboolean returnOnEmpty);

FOUNDATION_EXPORT RxInternalOperatorsOperatorAny *new_RxInternalOperatorsOperatorAny_initWithRxFunctionsFunc1_withBoolean_(id<RxFunctionsFunc1> predicate, jboolean returnOnEmpty) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorAny *create_RxInternalOperatorsOperatorAny_initWithRxFunctionsFunc1_withBoolean_(id<RxFunctionsFunc1> predicate, jboolean returnOnEmpty);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorAny)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorAny")
