//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorToMultimap.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorToMultimap")
#ifdef RESTRICT_RxInternalOperatorsOperatorToMultimap
#define INCLUDE_ALL_RxInternalOperatorsOperatorToMultimap 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorToMultimap 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorToMultimap

#if !defined (RxInternalOperatorsOperatorToMultimap_) && (INCLUDE_ALL_RxInternalOperatorsOperatorToMultimap || defined(INCLUDE_RxInternalOperatorsOperatorToMultimap))
#define RxInternalOperatorsOperatorToMultimap_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;

/*!
 @brief Maps the elements of the source observable into a multimap
 (Map&lt;K, Collection&lt;V>>) where each
 key entry has a collection of the source's values.
 - seealso: <a href="https://github.com/ReactiveX/RxJava/issues/97">Issue #97</a>
 */
@interface RxInternalOperatorsOperatorToMultimap : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc1> keySelector_;
  id<RxFunctionsFunc1> valueSelector_;
  id<RxFunctionsFunc1> collectionFactory_;
}

#pragma mark Public

/*!
 @brief ToMultimap with key selector, custom value selector,
 default HashMap factory and default ArrayList collection factory.
 @param keySelector the function extracting the map-key from the main value
 @param valueSelector the function extracting the map-value from the main value
 */
- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector;

/*!
 @brief ToMultimap with key selector, custom value selector,
 custom Map factory and default ArrayList collection factory.
 @param keySelector the function extracting the map-key from the main value
 @param valueSelector the function extracting the map-value from the main value
 @param mapFactory function that returns a Map instance to store keys and values into
 */
- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector
                    withRxFunctionsFunc0:(id<RxFunctionsFunc0>)mapFactory;

/*!
 @brief ToMultimap with key selector, custom value selector,
 custom Map factory and custom collection factory.
 @param keySelector the function extracting the map-key from the main value
 @param valueSelector the function extracting the map-value from the main value
 @param mapFactory function that returns a Map instance to store keys and values into
 @param collectionFactory function that returns a Collection for a particular key to store values into
 */
- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector
                    withRxFunctionsFunc0:(id<RxFunctionsFunc0>)mapFactory
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)collectionFactory;

- (RxSubscriber *)callWithId:(RxSubscriber *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToMultimap)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorToMultimap, keySelector_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorToMultimap, valueSelector_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorToMultimap, collectionFactory_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(RxInternalOperatorsOperatorToMultimap *self, id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector);

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap *new_RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap *create_RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector);

FOUNDATION_EXPORT void RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(RxInternalOperatorsOperatorToMultimap *self, id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector, id<RxFunctionsFunc0> mapFactory);

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap *new_RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector, id<RxFunctionsFunc0> mapFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap *create_RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector, id<RxFunctionsFunc0> mapFactory);

FOUNDATION_EXPORT void RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_withRxFunctionsFunc1_(RxInternalOperatorsOperatorToMultimap *self, id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector, id<RxFunctionsFunc0> mapFactory, id<RxFunctionsFunc1> collectionFactory);

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap *new_RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_withRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector, id<RxFunctionsFunc0> mapFactory, id<RxFunctionsFunc1> collectionFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap *create_RxInternalOperatorsOperatorToMultimap_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxFunctionsFunc0_withRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector, id<RxFunctionsFunc0> mapFactory, id<RxFunctionsFunc1> collectionFactory);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorToMultimap)

#endif

#if !defined (RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory_) && (INCLUDE_ALL_RxInternalOperatorsOperatorToMultimap || defined(INCLUDE_RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory))
#define RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory_

#define RESTRICT_RxFunctionsFunc0 1
#define INCLUDE_RxFunctionsFunc0 1
#include "rx/functions/Func0.h"

@protocol JavaUtilMap;

/*!
 @brief The default multimap factory returning a HashMap.
 */
@interface RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory : NSObject < RxFunctionsFunc0 >

#pragma mark Public

- (instancetype)init;

- (id<JavaUtilMap>)call;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory_init(RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory *new_RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory *create_RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorToMultimap_DefaultToMultimapFactory)

#endif

#if !defined (RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory_) && (INCLUDE_ALL_RxInternalOperatorsOperatorToMultimap || defined(INCLUDE_RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory))
#define RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory_

#define RESTRICT_RxFunctionsFunc1 1
#define INCLUDE_RxFunctionsFunc1 1
#include "rx/functions/Func1.h"

@protocol JavaUtilCollection;

/*!
 @brief The default collection factory for a key in the multimap returning
 an ArrayList independent of the key.
 */
@interface RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory : NSObject < RxFunctionsFunc1 >

#pragma mark Public

- (instancetype)init;

- (id<JavaUtilCollection>)callWithId:(id)t1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory_init(RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory *new_RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory *create_RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorToMultimap_DefaultMultimapCollectionFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorToMultimap")
