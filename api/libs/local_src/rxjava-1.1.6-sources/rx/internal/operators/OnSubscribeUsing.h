//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OnSubscribeUsing.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeUsing
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeUsing

#if !defined (RxInternalOperatorsOnSubscribeUsing_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing || defined(INCLUDE_RxInternalOperatorsOnSubscribeUsing))
#define RxInternalOperatorsOnSubscribeUsing_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_OnSubscribe 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsAction1;
@protocol RxFunctionsFunc0;
@protocol RxFunctionsFunc1;

/*!
 @brief Constructs an observable sequence that depends on a resource object.
 */
@interface RxInternalOperatorsOnSubscribeUsing : NSObject < RxObservable_OnSubscribe >

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFactory
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)observableFactory
                  withRxFunctionsAction1:(id<RxFunctionsAction1>)dispose
                             withBoolean:(jboolean)disposeEagerly;

- (void)callWithId:(RxSubscriber *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeUsing)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(RxInternalOperatorsOnSubscribeUsing *self, id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> dispose, jboolean disposeEagerly);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeUsing *new_RxInternalOperatorsOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> dispose, jboolean disposeEagerly) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeUsing *create_RxInternalOperatorsOnSubscribeUsing_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFactory, id<RxFunctionsFunc1> observableFactory, id<RxFunctionsAction1> dispose, jboolean disposeEagerly);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeUsing)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeUsing")
