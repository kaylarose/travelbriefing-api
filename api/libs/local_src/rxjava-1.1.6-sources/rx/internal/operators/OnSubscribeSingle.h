//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OnSubscribeSingle.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeSingle")
#ifdef RESTRICT_RxInternalOperatorsOnSubscribeSingle
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeSingle 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOnSubscribeSingle 1
#endif
#undef RESTRICT_RxInternalOperatorsOnSubscribeSingle

#if !defined (RxInternalOperatorsOnSubscribeSingle_) && (INCLUDE_ALL_RxInternalOperatorsOnSubscribeSingle || defined(INCLUDE_RxInternalOperatorsOnSubscribeSingle))
#define RxInternalOperatorsOnSubscribeSingle_

#define RESTRICT_RxSingle 1
#define INCLUDE_RxSingle_OnSubscribe 1
#include "rx/Single.h"

@class RxObservable;
@class RxSingleSubscriber;

/*!
 @brief Allows conversion of an Observable to a Single ensuring that exactly one item is emitted - no more and no less.
 Also forwards errors as appropriate.
 */
@interface RxInternalOperatorsOnSubscribeSingle : NSObject < RxSingle_OnSubscribe >

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)observable;

- (void)callWithId:(RxSingleSubscriber *)child;

+ (RxInternalOperatorsOnSubscribeSingle *)createWithRxObservable:(RxObservable *)observable;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeSingle)

FOUNDATION_EXPORT void RxInternalOperatorsOnSubscribeSingle_initWithRxObservable_(RxInternalOperatorsOnSubscribeSingle *self, RxObservable *observable);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeSingle *new_RxInternalOperatorsOnSubscribeSingle_initWithRxObservable_(RxObservable *observable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeSingle *create_RxInternalOperatorsOnSubscribeSingle_initWithRxObservable_(RxObservable *observable);

FOUNDATION_EXPORT RxInternalOperatorsOnSubscribeSingle *RxInternalOperatorsOnSubscribeSingle_createWithRxObservable_(RxObservable *observable);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeSingle)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOnSubscribeSingle")
