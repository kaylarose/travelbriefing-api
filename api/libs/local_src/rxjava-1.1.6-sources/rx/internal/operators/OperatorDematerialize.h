//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorDematerialize.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDematerialize")
#ifdef RESTRICT_RxInternalOperatorsOperatorDematerialize
#define INCLUDE_ALL_RxInternalOperatorsOperatorDematerialize 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorDematerialize 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorDematerialize

#if !defined (RxInternalOperatorsOperatorDematerialize_) && (INCLUDE_ALL_RxInternalOperatorsOperatorDematerialize || defined(INCLUDE_RxInternalOperatorsOperatorDematerialize))
#define RxInternalOperatorsOperatorDematerialize_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;

/*!
 @brief Reverses the effect of <code>OperatorMaterialize</code> by transforming the Notification objects
 emitted by a source Observable into the items or notifications they represent.
 <p>
 <img width="640" src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/dematerialize.png" alt="">
 <p>
 See <a href="http://msdn.microsoft.com/en-us/library/hh229047.aspx">here</a> for the Microsoft Rx equivalent.
 */
@interface RxInternalOperatorsOperatorDematerialize : NSObject < RxObservable_Operator >

#pragma mark Public

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

/*!
 @return a singleton instance of this stateless operator.
 */
+ (RxInternalOperatorsOperatorDematerialize *)instance;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDematerialize)

FOUNDATION_EXPORT RxInternalOperatorsOperatorDematerialize *RxInternalOperatorsOperatorDematerialize_instance();

FOUNDATION_EXPORT void RxInternalOperatorsOperatorDematerialize_init(RxInternalOperatorsOperatorDematerialize *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorDematerialize *new_RxInternalOperatorsOperatorDematerialize_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorDematerialize *create_RxInternalOperatorsOperatorDematerialize_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorDematerialize)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorDematerialize")
