//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorScan.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "rx/Producer.h"
#include "rx/Subscriber.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Func0.h"
#include "rx/functions/Func2.h"
#include "rx/internal/operators/BackpressureUtils.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/internal/operators/OperatorScan.h"
#include "rx/internal/util/atomic/SpscLinkedAtomicQueue.h"
#include "rx/internal/util/unsafe/SpscLinkedQueue.h"
#include "rx/internal/util/unsafe/UnsafeAccess.h"

@interface RxInternalOperatorsOperatorScan () {
 @public
  id<RxFunctionsFunc0> initialValueFactory_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan, initialValueFactory_, id<RxFunctionsFunc0>)

inline id RxInternalOperatorsOperatorScan_get_NO_INITIAL_VALUE();
static id RxInternalOperatorsOperatorScan_NO_INITIAL_VALUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorScan, NO_INITIAL_VALUE, id)

@interface RxInternalOperatorsOperatorScan_$1 : NSObject < RxFunctionsFunc0 > {
 @public
  id val$initialValue_;
}

- (id)call;

- (instancetype)initWithId:(id)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScan_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$1, val$initialValue_, id)

__attribute__((unused)) static void RxInternalOperatorsOperatorScan_$1_initWithId_(RxInternalOperatorsOperatorScan_$1 *self, id capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorScan_$1 *new_RxInternalOperatorsOperatorScan_$1_initWithId_(id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScan_$1 *create_RxInternalOperatorsOperatorScan_$1_initWithId_(id capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorScan_$1)

@interface RxInternalOperatorsOperatorScan_$2 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorScan *this$0_;
  jboolean once_;
  id value_;
  RxSubscriber *val$child_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxInternalOperatorsOperatorScan:(RxInternalOperatorsOperatorScan *)outer$
                                       withRxSubscriber:(RxSubscriber *)capture$0
                                       withRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScan_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$2, this$0_, RxInternalOperatorsOperatorScan *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$2, value_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$2, val$child_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorScan_$2 *self, RxInternalOperatorsOperatorScan *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOperatorScan_$2 *new_RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorScan *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScan_$2 *create_RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorScan *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorScan_$2)

@interface RxInternalOperatorsOperatorScan_$3 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorScan *this$0_;
  id value_;
  id val$initialValue_;
  RxInternalOperatorsOperatorScan_InitialProducer *val$ip_;
}

- (void)onNextWithId:(id)currentValue;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (void)setProducerWithRxProducer:(id<RxProducer>)producer;

- (instancetype)initWithRxInternalOperatorsOperatorScan:(RxInternalOperatorsOperatorScan *)outer$
                                                 withId:(id)capture$0
    withRxInternalOperatorsOperatorScan_InitialProducer:(RxInternalOperatorsOperatorScan_InitialProducer *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorScan_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$3, this$0_, RxInternalOperatorsOperatorScan *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$3, value_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$3, val$initialValue_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorScan_$3, val$ip_, RxInternalOperatorsOperatorScan_InitialProducer *)

__attribute__((unused)) static void RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(RxInternalOperatorsOperatorScan_$3 *self, RxInternalOperatorsOperatorScan *outer$, id capture$0, RxInternalOperatorsOperatorScan_InitialProducer *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorScan_$3 *new_RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(RxInternalOperatorsOperatorScan *outer$, id capture$0, RxInternalOperatorsOperatorScan_InitialProducer *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorScan_$3 *create_RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(RxInternalOperatorsOperatorScan *outer$, id capture$0, RxInternalOperatorsOperatorScan_InitialProducer *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorScan_$3)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorScan)

@implementation RxInternalOperatorsOperatorScan

- (instancetype)initWithId:(id)initialValue
      withRxFunctionsFunc2:(id<RxFunctionsFunc2>)accumulator {
  RxInternalOperatorsOperatorScan_initWithId_withRxFunctionsFunc2_(self, initialValue, accumulator);
  return self;
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)initialValueFactory
                    withRxFunctionsFunc2:(id<RxFunctionsFunc2>)accumulator {
  RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc0_withRxFunctionsFunc2_(self, initialValueFactory, accumulator);
  return self;
}

- (instancetype)initWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)accumulator {
  RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc2_(self, accumulator);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  id initialValue = [((id<RxFunctionsFunc0>) nil_chk(initialValueFactory_)) call];
  if (initialValue == RxInternalOperatorsOperatorScan_NO_INITIAL_VALUE) {
    return new_RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(self, child, child);
  }
  RxInternalOperatorsOperatorScan_InitialProducer *ip = new_RxInternalOperatorsOperatorScan_InitialProducer_initWithId_withRxSubscriber_(initialValue, child);
  RxSubscriber *parent = new_RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(self, initialValue, ip);
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:parent];
  [child setProducerWithRxProducer:ip];
  return parent;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withRxFunctionsFunc2:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "initWithRxFunctionsFunc0:withRxFunctionsFunc2:", NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { "initWithRxFunctionsFunc2:", NULL, 0x1, -1, 4, -1, 5, -1, -1 },
    { "callWithId:", "LRxSubscriber;", 0x1, 6, 7, -1, 8, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "initialValueFactory_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "accumulator_", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "NO_INITIAL_VALUE", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LRxFunctionsFunc2;", "(TR;Lrx/functions/Func2<TR;-TT;TR;>;)V", "LRxFunctionsFunc0;LRxFunctionsFunc2;", "(Lrx/functions/Func0<TR;>;Lrx/functions/Func2<TR;-TT;TR;>;)V", "LRxFunctionsFunc2;", "(Lrx/functions/Func2<TR;-TT;TR;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TR;>;)Lrx/Subscriber<-TT;>;", "Lrx/functions/Func0<TR;>;", "Lrx/functions/Func2<TR;-TT;TR;>;", &RxInternalOperatorsOperatorScan_NO_INITIAL_VALUE, "LRxInternalOperatorsOperatorScan_InitialProducer;", "<R:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TR;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScan = { "OperatorScan", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 4, 3, -1, 12, -1, 13, -1 };
  return &_RxInternalOperatorsOperatorScan;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorScan class]) {
    RxInternalOperatorsOperatorScan_NO_INITIAL_VALUE = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorScan)
  }
}

@end

void RxInternalOperatorsOperatorScan_initWithId_withRxFunctionsFunc2_(RxInternalOperatorsOperatorScan *self, id initialValue, id<RxFunctionsFunc2> accumulator) {
  RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc0_withRxFunctionsFunc2_(self, new_RxInternalOperatorsOperatorScan_$1_initWithId_(initialValue), accumulator);
}

RxInternalOperatorsOperatorScan *new_RxInternalOperatorsOperatorScan_initWithId_withRxFunctionsFunc2_(id initialValue, id<RxFunctionsFunc2> accumulator) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScan, initWithId_withRxFunctionsFunc2_, initialValue, accumulator)
}

RxInternalOperatorsOperatorScan *create_RxInternalOperatorsOperatorScan_initWithId_withRxFunctionsFunc2_(id initialValue, id<RxFunctionsFunc2> accumulator) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScan, initWithId_withRxFunctionsFunc2_, initialValue, accumulator)
}

void RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc0_withRxFunctionsFunc2_(RxInternalOperatorsOperatorScan *self, id<RxFunctionsFunc0> initialValueFactory, id<RxFunctionsFunc2> accumulator) {
  NSObject_init(self);
  self->initialValueFactory_ = initialValueFactory;
  self->accumulator_ = accumulator;
}

RxInternalOperatorsOperatorScan *new_RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc0_withRxFunctionsFunc2_(id<RxFunctionsFunc0> initialValueFactory, id<RxFunctionsFunc2> accumulator) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScan, initWithRxFunctionsFunc0_withRxFunctionsFunc2_, initialValueFactory, accumulator)
}

RxInternalOperatorsOperatorScan *create_RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc0_withRxFunctionsFunc2_(id<RxFunctionsFunc0> initialValueFactory, id<RxFunctionsFunc2> accumulator) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScan, initWithRxFunctionsFunc0_withRxFunctionsFunc2_, initialValueFactory, accumulator)
}

void RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc2_(RxInternalOperatorsOperatorScan *self, id<RxFunctionsFunc2> accumulator) {
  RxInternalOperatorsOperatorScan_initWithId_withRxFunctionsFunc2_(self, RxInternalOperatorsOperatorScan_NO_INITIAL_VALUE, accumulator);
}

RxInternalOperatorsOperatorScan *new_RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> accumulator) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScan, initWithRxFunctionsFunc2_, accumulator)
}

RxInternalOperatorsOperatorScan *create_RxInternalOperatorsOperatorScan_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> accumulator) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScan, initWithRxFunctionsFunc2_, accumulator)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorScan)

@implementation RxInternalOperatorsOperatorScan_InitialProducer

- (instancetype)initWithId:(id)initialValue
          withRxSubscriber:(RxSubscriber *)child {
  RxInternalOperatorsOperatorScan_InitialProducer_initWithId_withRxSubscriber_(self, initialValue, child);
  return self;
}

- (void)onNextWithId:(id)t {
  [((id<JavaUtilQueue>) nil_chk(queue_)) offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(RxInternalOperatorsNotificationLite_instance())) nextWithId:t]];
  [self emit];
}

- (jboolean)checkTerminatedWithBoolean:(jboolean)d
                           withBoolean:(jboolean)empty
                      withRxSubscriber:(RxSubscriber *)child {
  if ([((RxSubscriber *) nil_chk(child)) isUnsubscribed]) {
    return true;
  }
  if (d) {
    NSException *err = error_;
    if (err != nil) {
      [child onErrorWithNSException:err];
      return true;
    }
    else if (empty) {
      [child onCompleted];
      return true;
    }
  }
  return false;
}

- (void)onErrorWithNSException:(NSException *)e {
  error_ = e;
  JreAssignVolatileBoolean(&done_, true);
  [self emit];
}

- (void)onCompleted {
  JreAssignVolatileBoolean(&done_, true);
  [self emit];
}

- (void)requestWithLong:(jlong)n {
  if (n < 0LL) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"n >= required but it was ", n));
  }
  else if (n != 0LL) {
    RxInternalOperatorsBackpressureUtils_getAndAddRequestWithJavaUtilConcurrentAtomicAtomicLong_withLong_(requested_, n);
    id<RxProducer> p = JreLoadVolatileId(&producer_);
    if (p == nil) {
      @synchronized(requested_) {
        p = JreLoadVolatileId(&producer_);
        if (p == nil) {
          jlong mr = missedRequested_;
          missedRequested_ = RxInternalOperatorsBackpressureUtils_addCapWithLong_withLong_(mr, n);
        }
      }
    }
    if (p != nil) {
      [p requestWithLong:n];
    }
    [self emit];
  }
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  if (p == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  jlong mr;
  @synchronized(requested_) {
    if (JreLoadVolatileId(&producer_) != nil) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"Can't set more than one Producer!");
    }
    mr = missedRequested_;
    if (mr != JavaLangLong_MAX_VALUE) {
      mr -= 1;
    }
    missedRequested_ = 0LL;
    (void) JreVolatileStrongAssign(&producer_, p);
  }
  if (mr > 0LL) {
    [p requestWithLong:mr];
  }
  [self emit];
}

- (void)emit {
  @synchronized(self) {
    if (emitting_) {
      missed_ = true;
      return;
    }
    emitting_ = true;
  }
  [self emitLoop];
}

- (void)emitLoop {
  RxSubscriber *child = self->child_;
  id<JavaUtilQueue> queue = self->queue_;
  RxInternalOperatorsNotificationLite *nl = RxInternalOperatorsNotificationLite_instance();
  JavaUtilConcurrentAtomicAtomicLong *requested = self->requested_;
  jlong r = [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(requested)) get];
  for (; ; ) {
    jboolean max = r == JavaLangLong_MAX_VALUE;
    jboolean d = JreLoadVolatileBoolean(&done_);
    jboolean empty = [((id<JavaUtilQueue>) nil_chk(queue)) isEmpty];
    if ([self checkTerminatedWithBoolean:d withBoolean:empty withRxSubscriber:child]) {
      return;
    }
    jlong e = 0LL;
    while (r != 0LL) {
      d = JreLoadVolatileBoolean(&done_);
      id o = [queue poll];
      empty = (o == nil);
      if ([self checkTerminatedWithBoolean:d withBoolean:empty withRxSubscriber:child]) {
        return;
      }
      if (empty) {
        break;
      }
      id v = [((RxInternalOperatorsNotificationLite *) nil_chk(nl)) getValueWithId:o];
      @try {
        [((RxSubscriber *) nil_chk(child)) onNextWithId:v];
      }
      @catch (NSException *ex) {
        RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_withId_(ex, child, v);
        return;
      }
      r--;
      e--;
    }
    if (e != 0 && !max) {
      r = [requested addAndGetWithLong:e];
    }
    @synchronized(self) {
      if (!missed_) {
        emitting_ = false;
        return;
      }
      missed_ = false;
    }
  }
}

- (void)__javaClone:(RxInternalOperatorsOperatorScan_InitialProducer *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&producer_, &original->producer_);
}

- (void)dealloc {
  JreReleaseVolatile(&producer_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withRxSubscriber:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "checkTerminatedWithBoolean:withBoolean:withRxSubscriber:", "Z", 0x0, 5, 6, -1, 7, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "requestWithLong:", "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { "setProducerWithRxProducer:", "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { "emit", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "emitLoop", "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 14, -1 },
    { "queue_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x10, -1, -1, 15, -1 },
    { "emitting_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "missed_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "missedRequested_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "producer_", "LRxProducer;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "error_", "LNSException;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LRxSubscriber;", "(TR;Lrx/Subscriber<-TR;>;)V", "onNext", "LNSObject;", "(TR;)V", "checkTerminated", "ZZLRxSubscriber;", "(ZZLrx/Subscriber<-TR;>;)Z", "onError", "LNSException;", "request", "J", "setProducer", "LRxProducer;", "Lrx/Subscriber<-TR;>;", "Ljava/util/Queue<Ljava/lang/Object;>;", "LRxInternalOperatorsOperatorScan;", "<R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Producer;Lrx/Observer<TR;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScan_InitialProducer = { "InitialProducer", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 9, 9, 16, -1, -1, 17, -1 };
  return &_RxInternalOperatorsOperatorScan_InitialProducer;
}

@end

void RxInternalOperatorsOperatorScan_InitialProducer_initWithId_withRxSubscriber_(RxInternalOperatorsOperatorScan_InitialProducer *self, id initialValue, RxSubscriber *child) {
  NSObject_init(self);
  self->child_ = child;
  id<JavaUtilQueue> q;
  if (RxInternalUtilUnsafeUnsafeAccess_isUnsafeAvailable()) {
    q = new_RxInternalUtilUnsafeSpscLinkedQueue_init();
  }
  else {
    q = new_RxInternalUtilAtomicSpscLinkedAtomicQueue_init();
  }
  self->queue_ = q;
  [q offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(RxInternalOperatorsNotificationLite_instance())) nextWithId:initialValue]];
  self->requested_ = new_JavaUtilConcurrentAtomicAtomicLong_init();
}

RxInternalOperatorsOperatorScan_InitialProducer *new_RxInternalOperatorsOperatorScan_InitialProducer_initWithId_withRxSubscriber_(id initialValue, RxSubscriber *child) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScan_InitialProducer, initWithId_withRxSubscriber_, initialValue, child)
}

RxInternalOperatorsOperatorScan_InitialProducer *create_RxInternalOperatorsOperatorScan_InitialProducer_initWithId_withRxSubscriber_(id initialValue, RxSubscriber *child) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScan_InitialProducer, initWithId_withRxSubscriber_, initialValue, child)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorScan_InitialProducer)

@implementation RxInternalOperatorsOperatorScan_$1

- (id)call {
  return val$initialValue_;
}

- (instancetype)initWithId:(id)capture$0 {
  RxInternalOperatorsOperatorScan_$1_initWithId_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
    { "initWithId:", NULL, 0x0, -1, 1, -1, 2, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$initialValue_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "()TR;", "LNSObject;", "(TR;)V", "TR;", "LRxInternalOperatorsOperatorScan;", "initWithId:withRxFunctionsFunc2:", "Ljava/lang/Object;Lrx/functions/Func0<TR;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScan_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxInternalOperatorsOperatorScan_$1;
}

@end

void RxInternalOperatorsOperatorScan_$1_initWithId_(RxInternalOperatorsOperatorScan_$1 *self, id capture$0) {
  self->val$initialValue_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorScan_$1 *new_RxInternalOperatorsOperatorScan_$1_initWithId_(id capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScan_$1, initWithId_, capture$0)
}

RxInternalOperatorsOperatorScan_$1 *create_RxInternalOperatorsOperatorScan_$1_initWithId_(id capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScan_$1, initWithId_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorScan_$1)

@implementation RxInternalOperatorsOperatorScan_$2

- (void)onNextWithId:(id)t {
  id v;
  if (!once_) {
    once_ = true;
    v = t;
  }
  else {
    v = value_;
    @try {
      v = [((id<RxFunctionsFunc2>) nil_chk(this$0_->accumulator_)) callWithId:v withId:t];
    }
    @catch (NSException *e) {
      RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_withId_(e, val$child_, t);
      return;
    }
  }
  value_ = v;
  [((RxSubscriber *) nil_chk(val$child_)) onNextWithId:v];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$child_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$child_)) onCompleted];
}

- (instancetype)initWithRxInternalOperatorsOperatorScan:(RxInternalOperatorsOperatorScan *)outer$
                                       withRxSubscriber:(RxSubscriber *)capture$0
                                       withRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(self, outer$, capture$0, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorScan:withRxSubscriber:withRxSubscriber:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorScan;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "once_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 7, -1 },
    { "val$child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LRxInternalOperatorsOperatorScan;LRxSubscriber;LRxSubscriber;", "(Lrx/internal/operators/OperatorScan;Lrx/Subscriber<-TR;>;Lrx/Subscriber<*>;)V", "TR;", "Lrx/Subscriber<-TR;>;", "LRxInternalOperatorsOperatorScan;", "callWithId:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScan_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 4, 9, -1, 10, 11, -1 };
  return &_RxInternalOperatorsOperatorScan_$2;
}

@end

void RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorScan_$2 *self, RxInternalOperatorsOperatorScan *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  self->this$0_ = outer$;
  self->val$child_ = capture$0;
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
}

RxInternalOperatorsOperatorScan_$2 *new_RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorScan *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScan_$2, initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_, outer$, capture$0, arg$0)
}

RxInternalOperatorsOperatorScan_$2 *create_RxInternalOperatorsOperatorScan_$2_initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorScan *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScan_$2, initWithRxInternalOperatorsOperatorScan_withRxSubscriber_withRxSubscriber_, outer$, capture$0, arg$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorScan_$2)

@implementation RxInternalOperatorsOperatorScan_$3

- (void)onNextWithId:(id)currentValue {
  id v = value_;
  @try {
    v = [((id<RxFunctionsFunc2>) nil_chk(this$0_->accumulator_)) callWithId:v withId:currentValue];
  }
  @catch (NSException *e) {
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_withId_(e, self, currentValue);
    return;
  }
  value_ = v;
  [((RxInternalOperatorsOperatorScan_InitialProducer *) nil_chk(val$ip_)) onNextWithId:v];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsOperatorScan_InitialProducer *) nil_chk(val$ip_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxInternalOperatorsOperatorScan_InitialProducer *) nil_chk(val$ip_)) onCompleted];
}

- (void)setProducerWithRxProducer:(id<RxProducer>)producer {
  [((RxInternalOperatorsOperatorScan_InitialProducer *) nil_chk(val$ip_)) setProducerWithRxProducer:producer];
}

- (instancetype)initWithRxInternalOperatorsOperatorScan:(RxInternalOperatorsOperatorScan *)outer$
                                                 withId:(id)capture$0
    withRxInternalOperatorsOperatorScan_InitialProducer:(RxInternalOperatorsOperatorScan_InitialProducer *)capture$1 {
  RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "setProducerWithRxProducer:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorScan:withId:withRxInternalOperatorsOperatorScan_InitialProducer:", NULL, 0x0, -1, 7, -1, 8, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorScan;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "val$initialValue_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
    { "val$ip_", "LRxInternalOperatorsOperatorScan_InitialProducer;", .constantValue.asLong = 0, 0x1012, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "setProducer", "LRxProducer;", "LRxInternalOperatorsOperatorScan;LNSObject;LRxInternalOperatorsOperatorScan_InitialProducer;", "(Lrx/internal/operators/OperatorScan;TR;Lrx/internal/operators/OperatorScan$InitialProducer<TR;>;)V", "TR;", "Lrx/internal/operators/OperatorScan$InitialProducer<TR;>;", "LRxInternalOperatorsOperatorScan;", "callWithId:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorScan_$3 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 5, 4, 11, -1, 12, 13, -1 };
  return &_RxInternalOperatorsOperatorScan_$3;
}

@end

void RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(RxInternalOperatorsOperatorScan_$3 *self, RxInternalOperatorsOperatorScan *outer$, id capture$0, RxInternalOperatorsOperatorScan_InitialProducer *capture$1) {
  self->this$0_ = outer$;
  self->val$initialValue_ = capture$0;
  self->val$ip_ = capture$1;
  RxSubscriber_init(self);
  self->value_ = self->val$initialValue_;
}

RxInternalOperatorsOperatorScan_$3 *new_RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(RxInternalOperatorsOperatorScan *outer$, id capture$0, RxInternalOperatorsOperatorScan_InitialProducer *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorScan_$3, initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_, outer$, capture$0, capture$1)
}

RxInternalOperatorsOperatorScan_$3 *create_RxInternalOperatorsOperatorScan_$3_initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_(RxInternalOperatorsOperatorScan *outer$, id capture$0, RxInternalOperatorsOperatorScan_InitialProducer *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorScan_$3, initWithRxInternalOperatorsOperatorScan_withId_withRxInternalOperatorsOperatorScan_InitialProducer_, outer$, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorScan_$3)
