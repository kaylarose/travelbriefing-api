//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorSingle.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSingle")
#ifdef RESTRICT_RxInternalOperatorsOperatorSingle
#define INCLUDE_ALL_RxInternalOperatorsOperatorSingle 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorSingle 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorSingle

#if !defined (RxInternalOperatorsOperatorSingle_) && (INCLUDE_ALL_RxInternalOperatorsOperatorSingle || defined(INCLUDE_RxInternalOperatorsOperatorSingle))
#define RxInternalOperatorsOperatorSingle_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;

/*!
 @brief If the Observable completes after emitting a single item that matches a
 predicate, return an Observable containing that item.
 If it emits more than
 one such item or no item, throw an IllegalArgumentException.
 */
@interface RxInternalOperatorsOperatorSingle : NSObject < RxObservable_Operator >

#pragma mark Public

- (instancetype)initWithId:(id)defaultValue;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

/*!
 @brief Returns a singleton instance of OperatorSingle (if the stream is empty or has 
 more than one element an error will be emitted) that is cast to the generic type.
 @return a singleton instance of an Operator that will emit a single value only unless the stream has zero or more than one element in which case it will emit an error.
 */
+ (RxInternalOperatorsOperatorSingle *)instance;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSingle)

FOUNDATION_EXPORT RxInternalOperatorsOperatorSingle *RxInternalOperatorsOperatorSingle_instance();

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSingle_init(RxInternalOperatorsOperatorSingle *self);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSingle *new_RxInternalOperatorsOperatorSingle_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSingle *create_RxInternalOperatorsOperatorSingle_init();

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSingle_initWithId_(RxInternalOperatorsOperatorSingle *self, id defaultValue);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSingle *new_RxInternalOperatorsOperatorSingle_initWithId_(id defaultValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSingle *create_RxInternalOperatorsOperatorSingle_initWithId_(id defaultValue);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSingle)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSingle")
