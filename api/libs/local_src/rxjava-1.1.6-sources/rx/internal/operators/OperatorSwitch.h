//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorSwitch.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License"); you may not
 use this file except in compliance with the License. You may obtain a copy of
 the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 License for the specific language governing permissions and limitations under
 the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSwitch")
#ifdef RESTRICT_RxInternalOperatorsOperatorSwitch
#define INCLUDE_ALL_RxInternalOperatorsOperatorSwitch 0
#else
#define INCLUDE_ALL_RxInternalOperatorsOperatorSwitch 1
#endif
#undef RESTRICT_RxInternalOperatorsOperatorSwitch

#if !defined (RxInternalOperatorsOperatorSwitch_) && (INCLUDE_ALL_RxInternalOperatorsOperatorSwitch || defined(INCLUDE_RxInternalOperatorsOperatorSwitch))
#define RxInternalOperatorsOperatorSwitch_

#define RESTRICT_RxObservable 1
#define INCLUDE_RxObservable_Operator 1
#include "rx/Observable.h"

@class RxSubscriber;

/*!
 @brief Transforms an Observable that emits Observables into a single Observable that
 emits the items emitted by the most recently published of those Observables.
 <p>
 <img width="640" src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/switchDo.png" alt="">
 */
@interface RxInternalOperatorsOperatorSwitch : NSObject < RxObservable_Operator > {
 @public
  jboolean delayError_;
}

#pragma mark Public

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

/*!
 @brief Returns a singleton instance of the operator based on the delayError parameter.
 @param delayError should the errors of the inner sources delayed until the main sequence completes?
 @return a singleton instance of this stateless operator.
 */
+ (RxInternalOperatorsOperatorSwitch *)instanceWithBoolean:(jboolean)delayError;

#pragma mark Package-Private

- (instancetype)initWithBoolean:(jboolean)delayError;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitch)

FOUNDATION_EXPORT RxInternalOperatorsOperatorSwitch *RxInternalOperatorsOperatorSwitch_instanceWithBoolean_(jboolean delayError);

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSwitch_initWithBoolean_(RxInternalOperatorsOperatorSwitch *self, jboolean delayError);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSwitch *new_RxInternalOperatorsOperatorSwitch_initWithBoolean_(jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSwitch *create_RxInternalOperatorsOperatorSwitch_initWithBoolean_(jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSwitch)

#endif

#if !defined (RxInternalOperatorsOperatorSwitch_InnerSubscriber_) && (INCLUDE_ALL_RxInternalOperatorsOperatorSwitch || defined(INCLUDE_RxInternalOperatorsOperatorSwitch_InnerSubscriber))
#define RxInternalOperatorsOperatorSwitch_InnerSubscriber_

#define RESTRICT_RxSubscriber 1
#define INCLUDE_RxSubscriber 1
#include "rx/Subscriber.h"

@class RxInternalOperatorsOperatorSwitch_SwitchSubscriber;
@protocol RxProducer;

@interface RxInternalOperatorsOperatorSwitch_InnerSubscriber : RxSubscriber

#pragma mark Public

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)t;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

#pragma mark Package-Private

- (instancetype)initWithLong:(jlong)id_
withRxInternalOperatorsOperatorSwitch_SwitchSubscriber:(RxInternalOperatorsOperatorSwitch_SwitchSubscriber *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSwitch_InnerSubscriber)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(RxInternalOperatorsOperatorSwitch_InnerSubscriber *self, jlong id_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *parent);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSwitch_InnerSubscriber *new_RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(jlong id_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSwitch_InnerSubscriber *create_RxInternalOperatorsOperatorSwitch_InnerSubscriber_initWithLong_withRxInternalOperatorsOperatorSwitch_SwitchSubscriber_(jlong id_, RxInternalOperatorsOperatorSwitch_SwitchSubscriber *parent);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSwitch_InnerSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalOperatorsOperatorSwitch")
