//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/CompletableOnSubscribeTimeout.java
//

#include "J2ObjC_source.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/TimeoutException.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "rx/Completable.h"
#include "rx/Scheduler.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/internal/operators/CompletableOnSubscribeTimeout.h"
#include "rx/plugins/RxJavaErrorHandler.h"
#include "rx/plugins/RxJavaPlugins.h"
#include "rx/subscriptions/CompositeSubscription.h"

@interface RxInternalOperatorsCompletableOnSubscribeTimeout_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsCompletableOnSubscribeTimeout *this$0_;
  JavaUtilConcurrentAtomicAtomicBoolean *val$once_;
  RxSubscriptionsCompositeSubscription *val$set_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsCompletableOnSubscribeTimeout:(RxInternalOperatorsCompletableOnSubscribeTimeout *)outer$
                               withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                                withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$1
                                 withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeTimeout_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$1, this$0_, RxInternalOperatorsCompletableOnSubscribeTimeout *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$1, val$once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$1, val$set_, RxSubscriptionsCompositeSubscription *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *self, RxInternalOperatorsCompletableOnSubscribeTimeout *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *new_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *create_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeTimeout_$1)

@interface RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *this$0_;
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1:(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1, this$0_, RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *)

__attribute__((unused)) static void RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 *self, RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *outer$);

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 *new_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 *create_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1)

@interface RxInternalOperatorsCompletableOnSubscribeTimeout_$2 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxSubscriptionsCompositeSubscription *val$set_;
  JavaUtilConcurrentAtomicAtomicBoolean *val$once_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$0
                   withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$1
                     withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeTimeout_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$2, val$set_, RxSubscriptionsCompositeSubscription *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$2, val$once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeTimeout_$2, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout_$2 *self, RxSubscriptionsCompositeSubscription *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeTimeout_$2 *new_RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(RxSubscriptionsCompositeSubscription *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeTimeout_$2 *create_RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(RxSubscriptionsCompositeSubscription *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeTimeout_$2)

@implementation RxInternalOperatorsCompletableOnSubscribeTimeout

- (instancetype)initWithRxCompletable:(RxCompletable *)source
                             withLong:(jlong)timeout
       withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                      withRxScheduler:(RxScheduler *)scheduler
                    withRxCompletable:(RxCompletable *)other {
  RxInternalOperatorsCompletableOnSubscribeTimeout_initWithRxCompletable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(self, source, timeout, unit, scheduler, other);
  return self;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsCompositeSubscription *set = new_RxSubscriptionsCompositeSubscription_init();
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:set];
  JavaUtilConcurrentAtomicAtomicBoolean *once = new_JavaUtilConcurrentAtomicAtomicBoolean_init();
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(scheduler_)) createWorker];
  [set addWithRxSubscription:w];
  (void) [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:new_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(self, once, set, s) withLong:timeout_ withJavaUtilConcurrentTimeUnit:unit_];
  [((RxCompletable *) nil_chk(source_)) unsafeSubscribeWithRxCompletable_CompletableSubscriber:new_RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(set, once, s)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxCompletable:withLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:withRxCompletable:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "callWithId:", "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxCompletable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "timeout_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "other_", "LRxCompletable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable;JLJavaUtilConcurrentTimeUnit;LRxScheduler;LRxCompletable;", "call", "LRxCompletable_CompletableSubscriber;" };
  static const J2ObjcClassInfo _RxInternalOperatorsCompletableOnSubscribeTimeout = { "CompletableOnSubscribeTimeout", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 2, 5, -1, -1, -1, -1, -1 };
  return &_RxInternalOperatorsCompletableOnSubscribeTimeout;
}

@end

void RxInternalOperatorsCompletableOnSubscribeTimeout_initWithRxCompletable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(RxInternalOperatorsCompletableOnSubscribeTimeout *self, RxCompletable *source, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, RxCompletable *other) {
  NSObject_init(self);
  self->source_ = source;
  self->timeout_ = timeout;
  self->unit_ = unit;
  self->scheduler_ = scheduler;
  self->other_ = other;
}

RxInternalOperatorsCompletableOnSubscribeTimeout *new_RxInternalOperatorsCompletableOnSubscribeTimeout_initWithRxCompletable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(RxCompletable *source, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, RxCompletable *other) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout, initWithRxCompletable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_, source, timeout, unit, scheduler, other)
}

RxInternalOperatorsCompletableOnSubscribeTimeout *create_RxInternalOperatorsCompletableOnSubscribeTimeout_initWithRxCompletable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(RxCompletable *source, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, RxCompletable *other) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout, initWithRxCompletable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_, source, timeout, unit, scheduler, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsCompletableOnSubscribeTimeout)

@implementation RxInternalOperatorsCompletableOnSubscribeTimeout_$1

- (void)call {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) clear];
    if (this$0_->other_ == nil) {
      [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:new_JavaUtilConcurrentTimeoutException_init()];
    }
    else {
      [this$0_->other_ unsafeSubscribeWithRxCompletable_CompletableSubscriber:new_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(self)];
    }
  }
}

- (instancetype)initWithRxInternalOperatorsCompletableOnSubscribeTimeout:(RxInternalOperatorsCompletableOnSubscribeTimeout *)outer$
                               withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                                withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$1
                                 withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2 {
  RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsCompletableOnSubscribeTimeout:withJavaUtilConcurrentAtomicAtomicBoolean:withRxSubscriptionsCompositeSubscription:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsCompletableOnSubscribeTimeout;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$set_", "LRxSubscriptionsCompositeSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalOperatorsCompletableOnSubscribeTimeout;LJavaUtilConcurrentAtomicAtomicBoolean;LRxSubscriptionsCompositeSubscription;LRxCompletable_CompletableSubscriber;", "LRxInternalOperatorsCompletableOnSubscribeTimeout;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsCompletableOnSubscribeTimeout_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 4, 1, -1, 2, -1, -1 };
  return &_RxInternalOperatorsCompletableOnSubscribeTimeout_$1;
}

@end

void RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *self, RxInternalOperatorsCompletableOnSubscribeTimeout *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  self->this$0_ = outer$;
  self->val$once_ = capture$0;
  self->val$set_ = capture$1;
  self->val$s_ = capture$2;
  NSObject_init(self);
}

RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *new_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout_$1, initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_, outer$, capture$0, capture$1, capture$2)
}

RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *create_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout_$1, initWithRxInternalOperatorsCompletableOnSubscribeTimeout_withJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_, outer$, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsCompletableOnSubscribeTimeout_$1)

@implementation RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->val$set_)) addWithRxSubscription:d];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->val$set_)) unsubscribe];
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->val$set_)) unsubscribe];
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onCompleted];
}

- (instancetype)initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1:(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *)outer$ {
  RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSubscribeWithRxSubscription:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsCompletableOnSubscribeTimeout_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LRxSubscription;", "onError", "LNSException;", "LRxInternalOperatorsCompletableOnSubscribeTimeout_$1;", "call" };
  static const J2ObjcClassInfo _RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 1, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1;
}

@end

void RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 *self, RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 *new_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1, initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_, outer$)
}

RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1 *create_RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1_initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_(RxInternalOperatorsCompletableOnSubscribeTimeout_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1, initWithRxInternalOperatorsCompletableOnSubscribeTimeout_$1_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsCompletableOnSubscribeTimeout_$1_$1)

@implementation RxInternalOperatorsCompletableOnSubscribeTimeout_$2

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) addWithRxSubscription:d];
}

- (void)onErrorWithNSException:(NSException *)e {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) unsubscribe];
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
  }
  else {
    [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:e];
  }
}

- (void)onCompleted {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) unsubscribe];
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
  }
}

- (instancetype)initWithRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$0
                   withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$1
                     withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2 {
  RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSubscribeWithRxSubscription:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxSubscriptionsCompositeSubscription:withJavaUtilConcurrentAtomicAtomicBoolean:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$set_", "LRxSubscriptionsCompositeSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LRxSubscription;", "onError", "LNSException;", "LRxSubscriptionsCompositeSubscription;LJavaUtilConcurrentAtomicAtomicBoolean;LRxCompletable_CompletableSubscriber;", "LRxInternalOperatorsCompletableOnSubscribeTimeout;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsCompletableOnSubscribeTimeout_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 3, 5, -1, 6, -1, -1 };
  return &_RxInternalOperatorsCompletableOnSubscribeTimeout_$2;
}

@end

void RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(RxInternalOperatorsCompletableOnSubscribeTimeout_$2 *self, RxSubscriptionsCompositeSubscription *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  self->val$set_ = capture$0;
  self->val$once_ = capture$1;
  self->val$s_ = capture$2;
  NSObject_init(self);
}

RxInternalOperatorsCompletableOnSubscribeTimeout_$2 *new_RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(RxSubscriptionsCompositeSubscription *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout_$2, initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_, capture$0, capture$1, capture$2)
}

RxInternalOperatorsCompletableOnSubscribeTimeout_$2 *create_RxInternalOperatorsCompletableOnSubscribeTimeout_$2_initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_(RxSubscriptionsCompositeSubscription *capture$0, JavaUtilConcurrentAtomicAtomicBoolean *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsCompletableOnSubscribeTimeout_$2, initWithRxSubscriptionsCompositeSubscription_withJavaUtilConcurrentAtomicAtomicBoolean_withRxCompletable_CompletableSubscriber_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsCompletableOnSubscribeTimeout_$2)
