//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OperatorTakeWhile.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "rx/Subscriber.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Func1.h"
#include "rx/functions/Func2.h"
#include "rx/internal/operators/OperatorTakeWhile.h"

@interface RxInternalOperatorsOperatorTakeWhile_$1 : NSObject < RxFunctionsFunc2 > {
 @public
  id<RxFunctionsFunc1> val$underlying_;
}

- (JavaLangBoolean *)callWithId:(id)input
                         withId:(JavaLangInteger *)index;

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeWhile_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeWhile_$1, val$underlying_, id<RxFunctionsFunc1>)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTakeWhile_$1 *self, id<RxFunctionsFunc1> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$1 *new_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$1 *create_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeWhile_$1)

@interface RxInternalOperatorsOperatorTakeWhile_$2 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorTakeWhile *this$0_;
  jint counter_;
  jboolean done_;
  RxSubscriber *val$subscriber_;
}

- (void)onNextWithId:(id)t;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (instancetype)initWithRxInternalOperatorsOperatorTakeWhile:(RxInternalOperatorsOperatorTakeWhile *)outer$
                                            withRxSubscriber:(RxSubscriber *)capture$0
                                            withRxSubscriber:(RxSubscriber *)arg$0
                                                 withBoolean:(jboolean)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeWhile_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeWhile_$2, this$0_, RxInternalOperatorsOperatorTakeWhile *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeWhile_$2, val$subscriber_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeWhile_$2 *self, RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0, jboolean arg$1);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$2 *new_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0, jboolean arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$2 *create_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0, jboolean arg$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeWhile_$2)

@implementation RxInternalOperatorsOperatorTakeWhile

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)underlying {
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(self, underlying);
  return self;
}

- (instancetype)initWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate {
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(self, predicate);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)subscriber {
  RxSubscriber *s = new_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(self, subscriber, subscriber, false);
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:s];
  return s;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxFunctionsFunc1:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "initWithRxFunctionsFunc2:", NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { "callWithId:", "LRxSubscriber;", 0x1, 4, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "predicate_", "LRxFunctionsFunc2;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LRxFunctionsFunc1;", "(Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)V", "LRxFunctionsFunc2;", "(Lrx/functions/Func2<-TT;-Ljava/lang/Integer;Ljava/lang/Boolean;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;", "Lrx/functions/Func2<-TT;-Ljava/lang/Integer;Ljava/lang/Boolean;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeWhile = { "OperatorTakeWhile", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, 8, -1 };
  return &_RxInternalOperatorsOperatorTakeWhile;
}

@end

void RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTakeWhile *self, id<RxFunctionsFunc1> underlying) {
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(self, new_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(underlying));
}

RxInternalOperatorsOperatorTakeWhile *new_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> underlying) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeWhile, initWithRxFunctionsFunc1_, underlying)
}

RxInternalOperatorsOperatorTakeWhile *create_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> underlying) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeWhile, initWithRxFunctionsFunc1_, underlying)
}

void RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(RxInternalOperatorsOperatorTakeWhile *self, id<RxFunctionsFunc2> predicate) {
  NSObject_init(self);
  self->predicate_ = predicate;
}

RxInternalOperatorsOperatorTakeWhile *new_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeWhile, initWithRxFunctionsFunc2_, predicate)
}

RxInternalOperatorsOperatorTakeWhile *create_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeWhile, initWithRxFunctionsFunc2_, predicate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeWhile)

@implementation RxInternalOperatorsOperatorTakeWhile_$1

- (JavaLangBoolean *)callWithId:(id)input
                         withId:(JavaLangInteger *)index {
  return [((id<RxFunctionsFunc1>) nil_chk(val$underlying_)) callWithId:input];
}

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0 {
  RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:withId:", "LJavaLangBoolean;", 0x1, 0, 1, -1, 2, -1, -1 },
    { "initWithRxFunctionsFunc1:", NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$underlying_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;LJavaLangInteger;", "(TT;Ljava/lang/Integer;)Ljava/lang/Boolean;", "LRxFunctionsFunc1;", "(Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)V", "Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;", "LRxInternalOperatorsOperatorTakeWhile;", "initWithRxFunctionsFunc1:", "Ljava/lang/Object;Lrx/functions/Func2<TT;Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeWhile_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 1, 6, -1, 7, 8, -1 };
  return &_RxInternalOperatorsOperatorTakeWhile_$1;
}

@end

void RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTakeWhile_$1 *self, id<RxFunctionsFunc1> capture$0) {
  self->val$underlying_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeWhile_$1 *new_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeWhile_$1, initWithRxFunctionsFunc1_, capture$0)
}

RxInternalOperatorsOperatorTakeWhile_$1 *create_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeWhile_$1, initWithRxFunctionsFunc1_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeWhile_$1)

@implementation RxInternalOperatorsOperatorTakeWhile_$2

- (void)onNextWithId:(id)t {
  jboolean isSelected;
  @try {
    isSelected = [((JavaLangBoolean *) nil_chk([((id<RxFunctionsFunc2>) nil_chk(this$0_->predicate_)) callWithId:t withId:JavaLangInteger_valueOfWithInt_(counter_++)])) booleanValue];
  }
  @catch (NSException *e) {
    done_ = true;
    RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_withId_(e, val$subscriber_, t);
    [self unsubscribe];
    return;
  }
  if (isSelected) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onNextWithId:t];
  }
  else {
    done_ = true;
    [((RxSubscriber *) nil_chk(val$subscriber_)) onCompleted];
    [self unsubscribe];
  }
}

- (void)onCompleted {
  if (!done_) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onCompleted];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (!done_) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onErrorWithNSException:e];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorTakeWhile:(RxInternalOperatorsOperatorTakeWhile *)outer$
                                            withRxSubscriber:(RxSubscriber *)capture$0
                                            withRxSubscriber:(RxSubscriber *)arg$0
                                                 withBoolean:(jboolean)arg$1 {
  RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(self, outer$, capture$0, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsOperatorTakeWhile:withRxSubscriber:withRxSubscriber:withBoolean:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsOperatorTakeWhile;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "counter_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "val$subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LRxInternalOperatorsOperatorTakeWhile;LRxSubscriber;LRxSubscriber;Z", "(Lrx/internal/operators/OperatorTakeWhile;Lrx/Subscriber<-TT;>;Lrx/Subscriber<*>;Z)V", "Lrx/Subscriber<-TT;>;", "LRxInternalOperatorsOperatorTakeWhile;", "callWithId:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeWhile_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 4, 8, -1, 9, 10, -1 };
  return &_RxInternalOperatorsOperatorTakeWhile_$2;
}

@end

void RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeWhile_$2 *self, RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0, jboolean arg$1) {
  self->this$0_ = outer$;
  self->val$subscriber_ = capture$0;
  RxSubscriber_initWithRxSubscriber_withBoolean_(self, arg$0, arg$1);
  self->counter_ = 0;
  self->done_ = false;
}

RxInternalOperatorsOperatorTakeWhile_$2 *new_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0, jboolean arg$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOperatorTakeWhile_$2, initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_, outer$, capture$0, arg$0, arg$1)
}

RxInternalOperatorsOperatorTakeWhile_$2 *create_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0, jboolean arg$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOperatorTakeWhile_$2, initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_withBoolean_, outer$, capture$0, arg$0, arg$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeWhile_$2)
