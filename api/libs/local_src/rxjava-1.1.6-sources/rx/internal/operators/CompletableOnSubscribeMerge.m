//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/CompletableOnSubscribeMerge.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "rx/Completable.h"
#include "rx/Observable.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/exceptions/CompositeException.h"
#include "rx/internal/operators/CompletableOnSubscribeMerge.h"
#include "rx/plugins/RxJavaErrorHandler.h"
#include "rx/plugins/RxJavaPlugins.h"
#include "rx/subscriptions/CompositeSubscription.h"

@interface RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *this$0_;
  id<RxSubscription> d_;
  jboolean innerDone_;
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber:(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1, this$0_, RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1, d_, id<RxSubscription>)

__attribute__((unused)) static void RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 *self, RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 *new_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 *create_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1)

@implementation RxInternalOperatorsCompletableOnSubscribeMerge

- (instancetype)initWithRxObservable:(RxObservable *)source
                             withInt:(jint)maxConcurrency
                         withBoolean:(jboolean)delayErrors {
  RxInternalOperatorsCompletableOnSubscribeMerge_initWithRxObservable_withInt_withBoolean_(self, source, maxConcurrency, delayErrors);
  return self;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *parent = new_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_initWithRxCompletable_CompletableSubscriber_withInt_withBoolean_(s, maxConcurrency_, delayErrors_);
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:parent];
  (void) [((RxObservable *) nil_chk(source_)) subscribeWithRxSubscriber:parent];
}

+ (NSException *)collectErrorsWithJavaUtilQueue:(id<JavaUtilQueue>)q {
  return RxInternalOperatorsCompletableOnSubscribeMerge_collectErrorsWithJavaUtilQueue_(q);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObservable:withInt:withBoolean:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "callWithId:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "collectErrorsWithJavaUtilQueue:", "LNSException;", 0x9, 4, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LRxObservable;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "maxConcurrency_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayErrors_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;IZ", "(Lrx/Observable<+Lrx/Completable;>;IZ)V", "call", "LRxCompletable_CompletableSubscriber;", "collectErrors", "LJavaUtilQueue;", "(Ljava/util/Queue<Ljava/lang/Throwable;>;)Ljava/lang/Throwable;", "Lrx/Observable<Lrx/Completable;>;", "LRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber;" };
  static const J2ObjcClassInfo _RxInternalOperatorsCompletableOnSubscribeMerge = { "CompletableOnSubscribeMerge", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 3, 3, -1, 8, -1, -1, -1 };
  return &_RxInternalOperatorsCompletableOnSubscribeMerge;
}

@end

void RxInternalOperatorsCompletableOnSubscribeMerge_initWithRxObservable_withInt_withBoolean_(RxInternalOperatorsCompletableOnSubscribeMerge *self, RxObservable *source, jint maxConcurrency, jboolean delayErrors) {
  NSObject_init(self);
  self->source_ = source;
  self->maxConcurrency_ = maxConcurrency;
  self->delayErrors_ = delayErrors;
}

RxInternalOperatorsCompletableOnSubscribeMerge *new_RxInternalOperatorsCompletableOnSubscribeMerge_initWithRxObservable_withInt_withBoolean_(RxObservable *source, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsCompletableOnSubscribeMerge, initWithRxObservable_withInt_withBoolean_, source, maxConcurrency, delayErrors)
}

RxInternalOperatorsCompletableOnSubscribeMerge *create_RxInternalOperatorsCompletableOnSubscribeMerge_initWithRxObservable_withInt_withBoolean_(RxObservable *source, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsCompletableOnSubscribeMerge, initWithRxObservable_withInt_withBoolean_, source, maxConcurrency, delayErrors)
}

NSException *RxInternalOperatorsCompletableOnSubscribeMerge_collectErrorsWithJavaUtilQueue_(id<JavaUtilQueue> q) {
  RxInternalOperatorsCompletableOnSubscribeMerge_initialize();
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  NSException *t;
  while ((t = [((id<JavaUtilQueue>) nil_chk(q)) poll]) != nil) {
    [list addWithId:t];
  }
  if ([list isEmpty]) {
    return nil;
  }
  if ([list size] == 1) {
    return [list getWithInt:0];
  }
  return new_RxExceptionsCompositeException_initWithJavaUtilCollection_(list);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsCompletableOnSubscribeMerge)

@implementation RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)actual
                                                    withInt:(jint)maxConcurrency
                                                withBoolean:(jboolean)delayErrors {
  RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_initWithRxCompletable_CompletableSubscriber_withInt_withBoolean_(self, actual, maxConcurrency, delayErrors);
  return self;
}

- (id<JavaUtilQueue>)getOrCreateErrors {
  id<JavaUtilQueue> q = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(errors_)) get];
  if (q != nil) {
    return q;
  }
  q = new_JavaUtilConcurrentConcurrentLinkedQueue_init();
  if ([errors_ compareAndSetWithId:nil withId:q]) {
    return q;
  }
  return [errors_ get];
}

- (void)onNextWithId:(RxCompletable *)t {
  if (JreLoadVolatileBoolean(&done_)) {
    return;
  }
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(wip_)) getAndIncrement];
  [((RxCompletable *) nil_chk(t)) unsafeSubscribeWithRxCompletable_CompletableSubscriber:new_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(self)];
}

- (void)onErrorWithNSException:(NSException *)t {
  if (JreLoadVolatileBoolean(&done_)) {
    [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:t];
    return;
  }
  [((id<JavaUtilQueue>) nil_chk([self getOrCreateErrors])) offerWithId:t];
  JreAssignVolatileBoolean(&done_, true);
  [self terminate];
}

- (void)onCompleted {
  if (JreLoadVolatileBoolean(&done_)) {
    return;
  }
  JreAssignVolatileBoolean(&done_, true);
  [self terminate];
}

- (void)terminate {
  if ([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(wip_)) decrementAndGet] == 0) {
    id<JavaUtilQueue> q = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(errors_)) get];
    if (q == nil || [q isEmpty]) {
      [((id<RxCompletable_CompletableSubscriber>) nil_chk(actual_)) onCompleted];
    }
    else {
      NSException *e = RxInternalOperatorsCompletableOnSubscribeMerge_collectErrorsWithJavaUtilQueue_(q);
      if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(once_)) compareAndSetWithBoolean:false withBoolean:true]) {
        [((id<RxCompletable_CompletableSubscriber>) nil_chk(actual_)) onErrorWithNSException:e];
      }
      else {
        [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:e];
      }
    }
  }
  else if (!delayErrors_) {
    id<JavaUtilQueue> q = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(errors_)) get];
    if (q != nil && ![q isEmpty]) {
      NSException *e = RxInternalOperatorsCompletableOnSubscribeMerge_collectErrorsWithJavaUtilQueue_(q);
      if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(once_)) compareAndSetWithBoolean:false withBoolean:true]) {
        [((id<RxCompletable_CompletableSubscriber>) nil_chk(actual_)) onErrorWithNSException:e];
      }
      else {
        [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:e];
      }
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxCompletable_CompletableSubscriber:withInt:withBoolean:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "getOrCreateErrors", "LJavaUtilQueue;", 0x0, -1, -1, -1, 1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "terminate", "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "set_", "LRxSubscriptionsCompositeSubscription;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxConcurrency_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayErrors_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "errors_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
    { "once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "wip_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_CompletableSubscriber;IZ", "()Ljava/util/Queue<Ljava/lang/Throwable;>;", "onNext", "LRxCompletable;", "onError", "LNSException;", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/util/Queue<Ljava/lang/Throwable;>;>;", "LRxInternalOperatorsCompletableOnSubscribeMerge;", "Lrx/Subscriber<Lrx/Completable;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber = { "CompletableMergeSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x18, 6, 8, 7, -1, -1, 8, -1 };
  return &_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber;
}

@end

void RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_initWithRxCompletable_CompletableSubscriber_withInt_withBoolean_(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *self, id<RxCompletable_CompletableSubscriber> actual, jint maxConcurrency, jboolean delayErrors) {
  RxSubscriber_init(self);
  self->actual_ = actual;
  self->maxConcurrency_ = maxConcurrency;
  self->delayErrors_ = delayErrors;
  self->set_ = new_RxSubscriptionsCompositeSubscription_init();
  self->wip_ = new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(1);
  self->once_ = new_JavaUtilConcurrentAtomicAtomicBoolean_init();
  self->errors_ = new_JavaUtilConcurrentAtomicAtomicReference_init();
  if (maxConcurrency == JavaLangInteger_MAX_VALUE) {
    [self requestWithLong:JavaLangLong_MAX_VALUE];
  }
  else {
    [self requestWithLong:maxConcurrency];
  }
}

RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *new_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_initWithRxCompletable_CompletableSubscriber_withInt_withBoolean_(id<RxCompletable_CompletableSubscriber> actual, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber, initWithRxCompletable_CompletableSubscriber_withInt_withBoolean_, actual, maxConcurrency, delayErrors)
}

RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *create_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_initWithRxCompletable_CompletableSubscriber_withInt_withBoolean_(id<RxCompletable_CompletableSubscriber> actual, jint maxConcurrency, jboolean delayErrors) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber, initWithRxCompletable_CompletableSubscriber_withInt_withBoolean_, actual, maxConcurrency, delayErrors)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber)

@implementation RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  self->d_ = d;
  [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->set_)) addWithRxSubscription:d];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (innerDone_) {
    [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:e];
    return;
  }
  innerDone_ = true;
  [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->set_)) removeWithRxSubscription:d_];
  [((id<JavaUtilQueue>) nil_chk([this$0_ getOrCreateErrors])) offerWithId:e];
  [this$0_ terminate];
  if (this$0_->delayErrors_ && !JreLoadVolatileBoolean(&this$0_->done_)) {
    [this$0_ requestWithLong:1];
  }
}

- (void)onCompleted {
  if (innerDone_) {
    return;
  }
  innerDone_ = true;
  [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->set_)) removeWithRxSubscription:d_];
  [this$0_ terminate];
  if (!JreLoadVolatileBoolean(&this$0_->done_)) {
    [this$0_ requestWithLong:1];
  }
}

- (instancetype)initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber:(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *)outer$ {
  RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSubscribeWithRxSubscription:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "d_", "LRxSubscription;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "innerDone_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LRxSubscription;", "onError", "LNSException;", "LRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber;", "onNextWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 4, 3, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1;
}

@end

void RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 *self, RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 *new_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *outer$) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1, initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_, outer$)
}

RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1 *create_RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1_initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1, initWithRxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsCompletableOnSubscribeMerge_CompletableMergeSubscriber_$1)
