//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/operators/OnSubscribeAmb.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "rx/Observable.h"
#include "rx/Producer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/internal/operators/OnSubscribeAmb.h"
#include "rx/subscriptions/Subscriptions.h"

@class RxInternalOperatorsOnSubscribeAmb_Selection;

@interface RxInternalOperatorsOnSubscribeAmb ()

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources;

@end

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeAmb *self, id<JavaLangIterable> sources);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb *new_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb *create_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources);

@interface RxInternalOperatorsOnSubscribeAmb_AmbSubscriber : RxSubscriber {
 @public
  RxSubscriber *subscriber_AmbSubscriber_;
  RxInternalOperatorsOnSubscribeAmb_Selection *selection_;
  jboolean chosen_;
}

- (instancetype)initWithLong:(jlong)requested
            withRxSubscriber:(RxSubscriber *)subscriber
withRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)selection;

- (void)requestMoreWithLong:(jlong)n;

- (void)onNextWithId:(id)t;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (jboolean)isSelected;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, subscriber_AmbSubscriber_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, selection_, RxInternalOperatorsOnSubscribeAmb_Selection *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self, jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *new_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *create_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection);

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self, jlong n);

__attribute__((unused)) static jboolean RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber)

@interface RxInternalOperatorsOnSubscribeAmb_Selection : NSObject {
 @public
  JavaUtilConcurrentAtomicAtomicReference *choice_;
  id<JavaUtilCollection> ambSubscribers_;
}

- (void)unsubscribeLosers;

- (void)unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *)notThis;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAmb_Selection)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_Selection, choice_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_Selection, ambSubscribers_, id<JavaUtilCollection>)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_Selection_init(RxInternalOperatorsOnSubscribeAmb_Selection *self);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_Selection *new_RxInternalOperatorsOnSubscribeAmb_Selection_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_Selection *create_RxInternalOperatorsOnSubscribeAmb_Selection_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeAmb_Selection)

@interface RxInternalOperatorsOnSubscribeAmb_$1 : NSObject < RxFunctionsAction0 > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$choice_;
  RxInternalOperatorsOnSubscribeAmb_Selection *val$selection_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                withRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAmb_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_$1, val$choice_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_$1, val$selection_, RxInternalOperatorsOnSubscribeAmb_Selection *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_$1 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_$1 *new_RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_$1 *create_RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeAmb_$1)

@interface RxInternalOperatorsOnSubscribeAmb_$2 : NSObject < RxProducer > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$choice_;
  RxInternalOperatorsOnSubscribeAmb_Selection *val$selection_;
}

- (void)requestWithLong:(jlong)n;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                withRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOnSubscribeAmb_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_$2, val$choice_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeAmb_$2, val$selection_, RxInternalOperatorsOnSubscribeAmb_Selection *)

__attribute__((unused)) static void RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_$2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1);

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_$2 *new_RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOnSubscribeAmb_$2 *create_RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOnSubscribeAmb_$2)

@implementation RxInternalOperatorsOnSubscribeAmb

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_(o1, o2);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_(o1, o2, o3);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7
                                   withRxObservable:(RxObservable *)o8 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8);
}

+ (id<RxObservable_OnSubscribe>)ambWithRxObservable:(RxObservable *)o1
                                   withRxObservable:(RxObservable *)o2
                                   withRxObservable:(RxObservable *)o3
                                   withRxObservable:(RxObservable *)o4
                                   withRxObservable:(RxObservable *)o5
                                   withRxObservable:(RxObservable *)o6
                                   withRxObservable:(RxObservable *)o7
                                   withRxObservable:(RxObservable *)o8
                                   withRxObservable:(RxObservable *)o9 {
  return RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(o1, o2, o3, o4, o5, o6, o7, o8, o9);
}

+ (id<RxObservable_OnSubscribe>)ambWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)sources {
  RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(self, sources);
  return self;
}

- (void)callWithId:(RxSubscriber *)subscriber {
  RxInternalOperatorsOnSubscribeAmb_Selection *selection = new_RxInternalOperatorsOnSubscribeAmb_Selection_init();
  JavaUtilConcurrentAtomicAtomicReference *choice = selection->choice_;
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(choice, selection))];
  for (RxObservable * __strong source in nil_chk(sources_)) {
    if ([subscriber isUnsubscribed]) {
      break;
    }
    RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *ambSubscriber = new_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(0, subscriber, selection);
    [((id<JavaUtilCollection>) nil_chk(selection->ambSubscribers_)) addWithId:ambSubscriber];
    RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *c;
    if ((c = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(choice)) get]) != nil) {
      [selection unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:c];
      return;
    }
    (void) [((RxObservable *) nil_chk(source)) unsafeSubscribeWithRxSubscriber:ambSubscriber];
  }
  if ([subscriber isUnsubscribed]) {
    RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(selection->ambSubscribers_);
  }
  [subscriber setProducerWithRxProducer:new_RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(choice, selection)];
}

+ (void)unsubscribeAmbSubscribersWithJavaUtilCollection:(id<JavaUtilCollection>)ambSubscribers {
  RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(ambSubscribers);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "ambWithRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 1, -1, 2, -1, -1 },
    { "ambWithRxObservable:withRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 3, -1, 4, -1, -1 },
    { "ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 5, -1, 6, -1, -1 },
    { "ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 7, -1, 8, -1, -1 },
    { "ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 9, -1, 10, -1, -1 },
    { "ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 11, -1, 12, -1, -1 },
    { "ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 13, -1, 14, -1, -1 },
    { "ambWithRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:withRxObservable:", "LRxObservable_OnSubscribe;", 0x9, 0, 15, -1, 16, -1, -1 },
    { "ambWithJavaLangIterable:", "LRxObservable_OnSubscribe;", 0x9, 0, 17, -1, 18, -1, -1 },
    { "initWithJavaLangIterable:", NULL, 0x2, -1, 17, -1, 19, -1, -1 },
    { "callWithId:", "V", 0x1, 20, 21, -1, 22, -1, -1 },
    { "unsubscribeAmbSubscribersWithJavaUtilCollection:", "V", 0x8, 23, 24, -1, 25, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x10, -1, -1, 26, -1 },
  };
  static const void *ptrTable[] = { "amb", "LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;LRxObservable;", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;Lrx/Observable<+TT;>;)Lrx/Observable$OnSubscribe<TT;>;", "LJavaLangIterable;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;)Lrx/Observable$OnSubscribe<TT;>;", "(Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "unsubscribeAmbSubscribers", "LJavaUtilCollection;", "<T:Ljava/lang/Object;>(Ljava/util/Collection<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;)V", "Ljava/lang/Iterable<+Lrx/Observable<+TT;>;>;", "LRxInternalOperatorsOnSubscribeAmb_AmbSubscriber;LRxInternalOperatorsOnSubscribeAmb_Selection;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb = { "OnSubscribeAmb", "rx.internal.operators", ptrTable, methods, fields, 7, 0x11, 12, 1, -1, 27, -1, 28, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb;
}

@end

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  [sources addWithId:o7];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  [sources addWithId:o7];
  [sources addWithId:o8];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_withRxObservable_(RxObservable *o1, RxObservable *o2, RxObservable *o3, RxObservable *o4, RxObservable *o5, RxObservable *o6, RxObservable *o7, RxObservable *o8, RxObservable *o9) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  id<JavaUtilList> sources = new_JavaUtilArrayList_init();
  [sources addWithId:o1];
  [sources addWithId:o2];
  [sources addWithId:o3];
  [sources addWithId:o4];
  [sources addWithId:o5];
  [sources addWithId:o6];
  [sources addWithId:o7];
  [sources addWithId:o8];
  [sources addWithId:o9];
  return RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(sources);
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOnSubscribeAmb_ambWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  return new_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(sources);
}

void RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(RxInternalOperatorsOnSubscribeAmb *self, id<JavaLangIterable> sources) {
  NSObject_init(self);
  self->sources_ = sources;
}

RxInternalOperatorsOnSubscribeAmb *new_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb, initWithJavaLangIterable_, sources)
}

RxInternalOperatorsOnSubscribeAmb *create_RxInternalOperatorsOnSubscribeAmb_initWithJavaLangIterable_(id<JavaLangIterable> sources) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb, initWithJavaLangIterable_, sources)
}

void RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(id<JavaUtilCollection> ambSubscribers) {
  RxInternalOperatorsOnSubscribeAmb_initialize();
  if (![((id<JavaUtilCollection>) nil_chk(ambSubscribers)) isEmpty]) {
    for (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber * __strong other in ambSubscribers) {
      [((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(other)) unsubscribe];
    }
    [ambSubscribers clear];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb)

@implementation RxInternalOperatorsOnSubscribeAmb_AmbSubscriber

- (instancetype)initWithLong:(jlong)requested
            withRxSubscriber:(RxSubscriber *)subscriber
withRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)selection {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(self, requested, subscriber, selection);
  return self;
}

- (void)requestMoreWithLong:(jlong)n {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(self, n);
}

- (void)onNextWithId:(id)t {
  if (!RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self)) {
    return;
  }
  [((RxSubscriber *) nil_chk(subscriber_AmbSubscriber_)) onNextWithId:t];
}

- (void)onCompleted {
  if (!RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self)) {
    return;
  }
  [((RxSubscriber *) nil_chk(subscriber_AmbSubscriber_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (!RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self)) {
    return;
  }
  [((RxSubscriber *) nil_chk(subscriber_AmbSubscriber_)) onErrorWithNSException:e];
}

- (jboolean)isSelected {
  return RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withRxSubscriber:withRxInternalOperatorsOnSubscribeAmb_Selection:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { "requestMoreWithLong:", "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { "isSelected", "Z", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_AmbSubscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, 9, -1, 10, -1 },
    { "selection_", "LRxInternalOperatorsOnSubscribeAmb_Selection;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "chosen_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JLRxSubscriber;LRxInternalOperatorsOnSubscribeAmb_Selection;", "(JLrx/Subscriber<-TT;>;Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;)V", "requestMore", "J", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "subscriber", "Lrx/Subscriber<-TT;>;", "Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;", "LRxInternalOperatorsOnSubscribeAmb;", "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_AmbSubscriber = { "AmbSubscriber", "rx.internal.operators", ptrTable, methods, fields, 7, 0x1a, 6, 3, 12, -1, -1, 13, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber;
}

@end

void RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self, jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection) {
  RxSubscriber_init(self);
  self->subscriber_AmbSubscriber_ = subscriber;
  self->selection_ = selection;
  [self requestWithLong:requested];
}

RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *new_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_, requested, subscriber, selection)
}

RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *create_RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_(jlong requested, RxSubscriber *subscriber, RxInternalOperatorsOnSubscribeAmb_Selection *selection) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber, initWithLong_withRxSubscriber_withRxInternalOperatorsOnSubscribeAmb_Selection_, requested, subscriber, selection)
}

void RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self, jlong n) {
  [self requestWithLong:n];
}

jboolean RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_isSelected(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *self) {
  if (self->chosen_) {
    return true;
  }
  if ([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(((RxInternalOperatorsOnSubscribeAmb_Selection *) nil_chk(self->selection_))->choice_)) get] == self) {
    self->chosen_ = true;
    return true;
  }
  else {
    if ([self->selection_->choice_ compareAndSetWithId:nil withId:self]) {
      [self->selection_ unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:self];
      self->chosen_ = true;
      return true;
    }
    else {
      [self->selection_ unsubscribeLosers];
      return false;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber)

@implementation RxInternalOperatorsOnSubscribeAmb_Selection

- (void)unsubscribeLosers {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *winner = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(choice_)) get];
  if (winner != nil) {
    [self unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:winner];
  }
}

- (void)unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:(RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *)notThis {
  for (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber * __strong other in nil_chk(ambSubscribers_)) {
    if (other != notThis) {
      [((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(other)) unsubscribe];
    }
  }
  [ambSubscribers_ clear];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOnSubscribeAmb_Selection_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "unsubscribeLosers", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "unsubscribeOthersWithRxInternalOperatorsOnSubscribeAmb_AmbSubscriber:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "init", NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "choice_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
    { "ambSubscribers_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "unsubscribeOthers", "LRxInternalOperatorsOnSubscribeAmb_AmbSubscriber;", "(Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;", "Ljava/util/Collection<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;", "LRxInternalOperatorsOnSubscribeAmb;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_Selection = { "Selection", "rx.internal.operators", ptrTable, methods, fields, 7, 0xa, 3, 2, 5, -1, -1, 6, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_Selection;
}

@end

void RxInternalOperatorsOnSubscribeAmb_Selection_init(RxInternalOperatorsOnSubscribeAmb_Selection *self) {
  NSObject_init(self);
  self->choice_ = new_JavaUtilConcurrentAtomicAtomicReference_init();
  self->ambSubscribers_ = new_JavaUtilConcurrentConcurrentLinkedQueue_init();
}

RxInternalOperatorsOnSubscribeAmb_Selection *new_RxInternalOperatorsOnSubscribeAmb_Selection_init() {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_Selection, init)
}

RxInternalOperatorsOnSubscribeAmb_Selection *create_RxInternalOperatorsOnSubscribeAmb_Selection_init() {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_Selection, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb_Selection)

@implementation RxInternalOperatorsOnSubscribeAmb_$1

- (void)call {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *c;
  if ((c = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$choice_)) get]) != nil) {
    [((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(c)) unsubscribe];
  }
  RxInternalOperatorsOnSubscribeAmb_unsubscribeAmbSubscribersWithJavaUtilCollection_(((RxInternalOperatorsOnSubscribeAmb_Selection *) nil_chk(val$selection_))->ambSubscribers_);
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                withRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$1 {
  RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentAtomicAtomicReference:withRxInternalOperatorsOnSubscribeAmb_Selection:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$choice_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$selection_", "LRxInternalOperatorsOnSubscribeAmb_Selection;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentAtomicAtomicReference;LRxInternalOperatorsOnSubscribeAmb_Selection;", "(Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;", "Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;", "LRxInternalOperatorsOnSubscribeAmb;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_$1 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_$1;
}

@end

void RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_$1 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) {
  self->val$choice_ = capture$0;
  self->val$selection_ = capture$1;
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeAmb_$1 *new_RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_$1, initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0, capture$1)
}

RxInternalOperatorsOnSubscribeAmb_$1 *create_RxInternalOperatorsOnSubscribeAmb_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_$1, initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb_$1)

@implementation RxInternalOperatorsOnSubscribeAmb_$2

- (void)requestWithLong:(jlong)n {
  RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *c;
  if ((c = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$choice_)) get]) != nil) {
    RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(nil_chk(c), n);
  }
  else {
    for (RxInternalOperatorsOnSubscribeAmb_AmbSubscriber * __strong ambSubscriber in nil_chk(((RxInternalOperatorsOnSubscribeAmb_Selection *) nil_chk(val$selection_))->ambSubscribers_)) {
      if (![((RxInternalOperatorsOnSubscribeAmb_AmbSubscriber *) nil_chk(ambSubscriber)) isUnsubscribed]) {
        if ([val$choice_ get] == ambSubscriber) {
          RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(ambSubscriber, n);
          return;
        }
        else {
          RxInternalOperatorsOnSubscribeAmb_AmbSubscriber_requestMoreWithLong_(ambSubscriber, n);
        }
      }
    }
  }
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                withRxInternalOperatorsOnSubscribeAmb_Selection:(RxInternalOperatorsOnSubscribeAmb_Selection *)capture$1 {
  RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "requestWithLong:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentAtomicAtomicReference:withRxInternalOperatorsOnSubscribeAmb_Selection:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$choice_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$selection_", "LRxInternalOperatorsOnSubscribeAmb_Selection;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LJavaUtilConcurrentAtomicAtomicReference;LRxInternalOperatorsOnSubscribeAmb_Selection;", "(Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/operators/OnSubscribeAmb$AmbSubscriber<TT;>;>;", "Lrx/internal/operators/OnSubscribeAmb$Selection<TT;>;", "LRxInternalOperatorsOnSubscribeAmb;", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeAmb_$2 = { "", "rx.internal.operators", ptrTable, methods, fields, 7, 0x8008, 2, 2, 6, -1, 7, -1, -1 };
  return &_RxInternalOperatorsOnSubscribeAmb_$2;
}

@end

void RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(RxInternalOperatorsOnSubscribeAmb_$2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) {
  self->val$choice_ = capture$0;
  self->val$selection_ = capture$1;
  NSObject_init(self);
}

RxInternalOperatorsOnSubscribeAmb_$2 *new_RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) {
  J2OBJC_NEW_IMPL(RxInternalOperatorsOnSubscribeAmb_$2, initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0, capture$1)
}

RxInternalOperatorsOnSubscribeAmb_$2 *create_RxInternalOperatorsOnSubscribeAmb_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxInternalOperatorsOnSubscribeAmb_Selection *capture$1) {
  J2OBJC_CREATE_IMPL(RxInternalOperatorsOnSubscribeAmb_$2, initWithJavaUtilConcurrentAtomicAtomicReference_withRxInternalOperatorsOnSubscribeAmb_Selection_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeAmb_$2)
