//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/schedulers/SchedulerLifecycle.java
//

/*!
 @brief Copyright 2016 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License"); you may not
 use this file except in compliance with the License. You may obtain a copy of
 the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 License for the specific language governing permissions and limitations under
 the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalSchedulersSchedulerLifecycle")
#ifdef RESTRICT_RxInternalSchedulersSchedulerLifecycle
#define INCLUDE_ALL_RxInternalSchedulersSchedulerLifecycle 0
#else
#define INCLUDE_ALL_RxInternalSchedulersSchedulerLifecycle 1
#endif
#undef RESTRICT_RxInternalSchedulersSchedulerLifecycle

#if !defined (RxInternalSchedulersSchedulerLifecycle_) && (INCLUDE_ALL_RxInternalSchedulersSchedulerLifecycle || defined(INCLUDE_RxInternalSchedulersSchedulerLifecycle))
#define RxInternalSchedulersSchedulerLifecycle_

/*!
 @brief Represents the capability of a Scheduler to be start or shut down its maintained
 threads.
 */
@protocol RxInternalSchedulersSchedulerLifecycle < JavaObject >

/*!
 @brief Allows the Scheduler instance to start threads 
 and accept tasks on them.
 <p>Implementations should make sure the call is idempotent and threadsafe. 
 */
- (void)start;

/*!
 @brief Instructs the Scheduler instance to stop threads 
 and stop accepting tasks on any outstanding Workers.
 <p>Implementations should make sure the call is idempotent and threadsafe. 
 */
- (void)shutdown;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalSchedulersSchedulerLifecycle)

J2OBJC_TYPE_LITERAL_HEADER(RxInternalSchedulersSchedulerLifecycle)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalSchedulersSchedulerLifecycle")
