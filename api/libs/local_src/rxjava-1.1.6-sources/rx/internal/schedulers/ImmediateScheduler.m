//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/schedulers/ImmediateScheduler.java
//

#include "J2ObjC_source.h"
#include "java/util/concurrent/TimeUnit.h"
#include "rx/Scheduler.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/internal/schedulers/ImmediateScheduler.h"
#include "rx/internal/schedulers/SleepingAction.h"
#include "rx/subscriptions/BooleanSubscription.h"
#include "rx/subscriptions/Subscriptions.h"

@interface RxInternalSchedulersImmediateScheduler ()

- (instancetype)init;

@end

__attribute__((unused)) static void RxInternalSchedulersImmediateScheduler_init(RxInternalSchedulersImmediateScheduler *self);

__attribute__((unused)) static RxInternalSchedulersImmediateScheduler *new_RxInternalSchedulersImmediateScheduler_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalSchedulersImmediateScheduler *create_RxInternalSchedulersImmediateScheduler_init();

@interface RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler : RxScheduler_Worker < RxSubscription > {
 @public
  RxInternalSchedulersImmediateScheduler *this$0_;
  RxSubscriptionsBooleanSubscription *innerSubscription_;
}

- (instancetype)initWithRxInternalSchedulersImmediateScheduler:(RxInternalSchedulersImmediateScheduler *)outer$;

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action
                                            withLong:(jlong)delayTime
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action;

- (void)unsubscribe;

- (jboolean)isUnsubscribed;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler)

J2OBJC_FIELD_SETTER(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler, this$0_, RxInternalSchedulersImmediateScheduler *)
J2OBJC_FIELD_SETTER(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler, innerSubscription_, RxSubscriptionsBooleanSubscription *)

__attribute__((unused)) static void RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler *self, RxInternalSchedulersImmediateScheduler *outer$);

__attribute__((unused)) static RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler *new_RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(RxInternalSchedulersImmediateScheduler *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler *create_RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(RxInternalSchedulersImmediateScheduler *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler)

J2OBJC_INITIALIZED_DEFN(RxInternalSchedulersImmediateScheduler)

RxInternalSchedulersImmediateScheduler *RxInternalSchedulersImmediateScheduler_INSTANCE;

@implementation RxInternalSchedulersImmediateScheduler

+ (RxInternalSchedulersImmediateScheduler *)INSTANCE {
  return RxInternalSchedulersImmediateScheduler_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalSchedulersImmediateScheduler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RxScheduler_Worker *)createWorker {
  return new_RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { "createWorker", "LRxScheduler_Worker;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LRxInternalSchedulersImmediateScheduler;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &RxInternalSchedulersImmediateScheduler_INSTANCE, "LRxInternalSchedulersImmediateScheduler_InnerImmediateScheduler;" };
  static const J2ObjcClassInfo _RxInternalSchedulersImmediateScheduler = { "ImmediateScheduler", "rx.internal.schedulers", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 1, -1, -1, -1 };
  return &_RxInternalSchedulersImmediateScheduler;
}

+ (void)initialize {
  if (self == [RxInternalSchedulersImmediateScheduler class]) {
    RxInternalSchedulersImmediateScheduler_INSTANCE = new_RxInternalSchedulersImmediateScheduler_init();
    J2OBJC_SET_INITIALIZED(RxInternalSchedulersImmediateScheduler)
  }
}

@end

void RxInternalSchedulersImmediateScheduler_init(RxInternalSchedulersImmediateScheduler *self) {
  RxScheduler_init(self);
}

RxInternalSchedulersImmediateScheduler *new_RxInternalSchedulersImmediateScheduler_init() {
  J2OBJC_NEW_IMPL(RxInternalSchedulersImmediateScheduler, init)
}

RxInternalSchedulersImmediateScheduler *create_RxInternalSchedulersImmediateScheduler_init() {
  J2OBJC_CREATE_IMPL(RxInternalSchedulersImmediateScheduler, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalSchedulersImmediateScheduler)

@implementation RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler

- (instancetype)initWithRxInternalSchedulersImmediateScheduler:(RxInternalSchedulersImmediateScheduler *)outer$ {
  RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(self, outer$);
  return self;
}

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action
                                            withLong:(jlong)delayTime
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  jlong execTime = [this$0_ now] + [((JavaUtilConcurrentTimeUnit *) nil_chk(unit)) toMillisWithLong:delayTime];
  return [self scheduleWithRxFunctionsAction0:new_RxInternalSchedulersSleepingAction_initWithRxFunctionsAction0_withRxScheduler_Worker_withLong_(action, self, execTime)];
}

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  [((id<RxFunctionsAction0>) nil_chk(action)) call];
  return RxSubscriptionsSubscriptions_unsubscribed();
}

- (void)unsubscribe {
  [((RxSubscriptionsBooleanSubscription *) nil_chk(innerSubscription_)) unsubscribe];
}

- (jboolean)isUnsubscribed {
  return [((RxSubscriptionsBooleanSubscription *) nil_chk(innerSubscription_)) isUnsubscribed];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalSchedulersImmediateScheduler:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { "scheduleWithRxFunctionsAction0:withLong:withJavaUtilConcurrentTimeUnit:", "LRxSubscription;", 0x1, 1, 2, -1, -1, -1, -1 },
    { "scheduleWithRxFunctionsAction0:", "LRxSubscription;", 0x1, 1, 3, -1, -1, -1, -1 },
    { "unsubscribe", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "isUnsubscribed", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxInternalSchedulersImmediateScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "innerSubscription_", "LRxSubscriptionsBooleanSubscription;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxInternalSchedulersImmediateScheduler;", "schedule", "LRxFunctionsAction0;JLJavaUtilConcurrentTimeUnit;", "LRxFunctionsAction0;" };
  static const J2ObjcClassInfo _RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler = { "InnerImmediateScheduler", "rx.internal.schedulers", ptrTable, methods, fields, 7, 0x2, 5, 2, 0, -1, -1, -1, -1 };
  return &_RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler;
}

@end

void RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler *self, RxInternalSchedulersImmediateScheduler *outer$) {
  self->this$0_ = outer$;
  RxScheduler_Worker_init(self);
  self->innerSubscription_ = new_RxSubscriptionsBooleanSubscription_init();
}

RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler *new_RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(RxInternalSchedulersImmediateScheduler *outer$) {
  J2OBJC_NEW_IMPL(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler, initWithRxInternalSchedulersImmediateScheduler_, outer$)
}

RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler *create_RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxInternalSchedulersImmediateScheduler_(RxInternalSchedulersImmediateScheduler *outer$) {
  J2OBJC_CREATE_IMPL(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler, initWithRxInternalSchedulersImmediateScheduler_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalSchedulersImmediateScheduler_InnerImmediateScheduler)
