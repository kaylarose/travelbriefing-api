//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/util/SubscriptionList.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxInternalUtilSubscriptionList")
#ifdef RESTRICT_RxInternalUtilSubscriptionList
#define INCLUDE_ALL_RxInternalUtilSubscriptionList 0
#else
#define INCLUDE_ALL_RxInternalUtilSubscriptionList 1
#endif
#undef RESTRICT_RxInternalUtilSubscriptionList

#if !defined (RxInternalUtilSubscriptionList_) && (INCLUDE_ALL_RxInternalUtilSubscriptionList || defined(INCLUDE_RxInternalUtilSubscriptionList))
#define RxInternalUtilSubscriptionList_

#define RESTRICT_RxSubscription 1
#define INCLUDE_RxSubscription 1
#include "rx/Subscription.h"

@class IOSObjectArray;

/*!
 @brief Subscription that represents a group of Subscriptions that are unsubscribed together.
 - seealso: <a href="http://msdn.microsoft.com/en-us/library/system.reactive.disposables.compositedisposable(v=vs.103).aspx">Rx.Net equivalent CompositeDisposable</a>
 */
@interface RxInternalUtilSubscriptionList : NSObject < RxSubscription >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithRxSubscriptionArray:(IOSObjectArray *)subscriptions;

- (instancetype)initWithRxSubscription:(id<RxSubscription>)s;

/*!
 @brief Adds a new <code>Subscription</code> to this <code>SubscriptionList</code> if the <code>SubscriptionList</code> is
 not yet unsubscribed.
 If the <code>SubscriptionList</code> <em>is</em> unsubscribed, <code>add</code> will
 indicate this by explicitly unsubscribing the new <code>Subscription</code> as well.
 @param s
 the <code>Subscription</code> to add
 */
- (void)addWithRxSubscription:(id<RxSubscription>)s;

- (void)clear;

/*!
 @brief Returns true if this composite is not unsubscribed and contains subscriptions.
 @return <code>true</code> if this composite is not unsubscribed and contains subscriptions.
 */
- (jboolean)hasSubscriptions;

- (jboolean)isUnsubscribed;

- (void)removeWithRxSubscription:(id<RxSubscription>)s;

/*!
 @brief Unsubscribe from all of the subscriptions in the list, which stops the receipt of notifications on
 the associated <code>Subscriber</code>.
 */
- (void)unsubscribe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilSubscriptionList)

FOUNDATION_EXPORT void RxInternalUtilSubscriptionList_init(RxInternalUtilSubscriptionList *self);

FOUNDATION_EXPORT RxInternalUtilSubscriptionList *new_RxInternalUtilSubscriptionList_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilSubscriptionList *create_RxInternalUtilSubscriptionList_init();

FOUNDATION_EXPORT void RxInternalUtilSubscriptionList_initWithRxSubscriptionArray_(RxInternalUtilSubscriptionList *self, IOSObjectArray *subscriptions);

FOUNDATION_EXPORT RxInternalUtilSubscriptionList *new_RxInternalUtilSubscriptionList_initWithRxSubscriptionArray_(IOSObjectArray *subscriptions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilSubscriptionList *create_RxInternalUtilSubscriptionList_initWithRxSubscriptionArray_(IOSObjectArray *subscriptions);

FOUNDATION_EXPORT void RxInternalUtilSubscriptionList_initWithRxSubscription_(RxInternalUtilSubscriptionList *self, id<RxSubscription> s);

FOUNDATION_EXPORT RxInternalUtilSubscriptionList *new_RxInternalUtilSubscriptionList_initWithRxSubscription_(id<RxSubscription> s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilSubscriptionList *create_RxInternalUtilSubscriptionList_initWithRxSubscription_(id<RxSubscription> s);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilSubscriptionList)

#endif

#pragma pop_macro("INCLUDE_ALL_RxInternalUtilSubscriptionList")
