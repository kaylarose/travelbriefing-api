//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/util/unsafe/SpscUnboundedArrayQueue.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Field.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "rx/internal/util/unsafe/Pow2.h"
#include "rx/internal/util/unsafe/SpscUnboundedArrayQueue.h"
#include "rx/internal/util/unsafe/UnsafeAccess.h"
#include "sun/misc/Unsafe.h"

@interface RxInternalUtilUnsafeSpscUnboundedArrayQueue ()

- (jboolean)writeToQueueWithNSObjectArray:(IOSObjectArray *)buffer
                                   withId:(id)e
                                 withLong:(jlong)index
                                 withLong:(jlong)offset;

- (void)resizeWithNSObjectArray:(IOSObjectArray *)oldBuffer
                       withLong:(jlong)currIndex
                       withLong:(jlong)offset
                         withId:(id)e
                       withLong:(jlong)mask;

- (void)soNextWithNSObjectArray:(IOSObjectArray *)curr
              withNSObjectArray:(IOSObjectArray *)next;

- (IOSObjectArray *)lvNextWithNSObjectArray:(IOSObjectArray *)curr;

- (id)newBufferPollWithNSObjectArray:(IOSObjectArray *)nextBuffer
                            withLong:(jlong)index
                            withLong:(jlong)mask OBJC_METHOD_FAMILY_NONE;

- (id)newBufferPeekWithNSObjectArray:(IOSObjectArray *)nextBuffer
                            withLong:(jlong)index
                            withLong:(jlong)mask OBJC_METHOD_FAMILY_NONE;

- (void)adjustLookAheadStepWithInt:(jint)capacity;

- (jlong)lvProducerIndex;

- (jlong)lvConsumerIndex;

- (void)soProducerIndexWithLong:(jlong)v;

- (void)soConsumerIndexWithLong:(jlong)v;

+ (jlong)calcWrappedOffsetWithLong:(jlong)index
                          withLong:(jlong)mask;

+ (jlong)calcDirectOffsetWithLong:(jlong)index;

+ (void)soElementWithNSObjectArray:(IOSObjectArray *)buffer
                          withLong:(jlong)offset
                            withId:(id)e;

+ (id)lvElementWithNSObjectArray:(IOSObjectArray *)buffer
                        withLong:(jlong)offset;

@end

inline jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_get_P_INDEX_OFFSET();
static jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_P_INDEX_OFFSET;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilUnsafeSpscUnboundedArrayQueue, P_INDEX_OFFSET, jlong)

inline jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_get_C_INDEX_OFFSET();
static jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_C_INDEX_OFFSET;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilUnsafeSpscUnboundedArrayQueue, C_INDEX_OFFSET, jlong)

inline jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_get_REF_ARRAY_BASE();
static jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ARRAY_BASE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilUnsafeSpscUnboundedArrayQueue, REF_ARRAY_BASE, jlong)

inline jint RxInternalUtilUnsafeSpscUnboundedArrayQueue_get_REF_ELEMENT_SHIFT();
static jint RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ELEMENT_SHIFT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilUnsafeSpscUnboundedArrayQueue, REF_ELEMENT_SHIFT, jint)

inline id RxInternalUtilUnsafeSpscUnboundedArrayQueue_get_HAS_NEXT();
static id RxInternalUtilUnsafeSpscUnboundedArrayQueue_HAS_NEXT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalUtilUnsafeSpscUnboundedArrayQueue, HAS_NEXT, id)

__attribute__((unused)) static jboolean RxInternalUtilUnsafeSpscUnboundedArrayQueue_writeToQueueWithNSObjectArray_withId_withLong_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *buffer, id e, jlong index, jlong offset);

__attribute__((unused)) static void RxInternalUtilUnsafeSpscUnboundedArrayQueue_resizeWithNSObjectArray_withLong_withLong_withId_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *oldBuffer, jlong currIndex, jlong offset, id e, jlong mask);

__attribute__((unused)) static void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soNextWithNSObjectArray_withNSObjectArray_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *curr, IOSObjectArray *next);

__attribute__((unused)) static IOSObjectArray *RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvNextWithNSObjectArray_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *curr);

__attribute__((unused)) static id RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPollWithNSObjectArray_withLong_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *nextBuffer, jlong index, jlong mask);

__attribute__((unused)) static id RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPeekWithNSObjectArray_withLong_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *nextBuffer, jlong index, jlong mask);

__attribute__((unused)) static void RxInternalUtilUnsafeSpscUnboundedArrayQueue_adjustLookAheadStepWithInt_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, jint capacity);

__attribute__((unused)) static jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvProducerIndex(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self);

__attribute__((unused)) static jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvConsumerIndex(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self);

__attribute__((unused)) static void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soProducerIndexWithLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, jlong v);

__attribute__((unused)) static void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soConsumerIndexWithLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, jlong v);

__attribute__((unused)) static jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(jlong index, jlong mask);

__attribute__((unused)) static jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcDirectOffsetWithLong_(jlong index);

__attribute__((unused)) static void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(IOSObjectArray *buffer, jlong offset, id e);

__attribute__((unused)) static id RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(IOSObjectArray *buffer, jlong offset);

@implementation RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "producerIndex_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "<E:Ljava/lang/Object;>Ljava/util/AbstractQueue<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields = { "SpscUnboundedArrayQueueProducerFields", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x400, 1, 1, -1, -1, -1, 0, -1 };
  return &_RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields;
}

@end

void RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields_init(RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields *self) {
  JavaUtilAbstractQueue_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields)

@implementation RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "producerLookAheadStep_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "producerLookAhead_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "producerMask_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "producerBuffer_", "[LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "[TE;", "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/SpscUnboundedArrayQueueProducerFields<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields = { "SpscUnboundedArrayQueueProducerColdFields", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x400, 1, 4, -1, -1, -1, 1, -1 };
  return &_RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields;
}

@end

void RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields_init(RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields *self) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields)

@implementation RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p0_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p1_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p2_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p3_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p4_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p5_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p6_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p7_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p8_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p9_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p10_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p11_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "p12_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/SpscUnboundedArrayQueueProducerColdFields<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad = { "SpscUnboundedArrayQueueL2Pad", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x400, 1, 13, -1, -1, -1, 0, -1 };
  return &_RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad;
}

@end

void RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad_init(RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad *self) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerColdFields_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad)

@implementation RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "consumerMask_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "consumerBuffer_", "[LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "[TE;", "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/SpscUnboundedArrayQueueL2Pad<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField = { "SpscUnboundedArrayQueueConsumerColdField", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x400, 1, 2, -1, -1, -1, 1, -1 };
  return &_RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField;
}

@end

void RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField_init(RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField *self) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueL2Pad_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField)

@implementation RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "consumerIndex_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/SpscUnboundedArrayQueueConsumerColdField<TE;>;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField = { "SpscUnboundedArrayQueueConsumerField", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x400, 1, 1, -1, -1, -1, 0, -1 };
  return &_RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField;
}

@end

void RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField_init(RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField *self) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerColdField_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField)

J2OBJC_INITIALIZED_DEFN(RxInternalUtilUnsafeSpscUnboundedArrayQueue)

jint RxInternalUtilUnsafeSpscUnboundedArrayQueue_MAX_LOOK_AHEAD_STEP;

@implementation RxInternalUtilUnsafeSpscUnboundedArrayQueue

+ (jint)MAX_LOOK_AHEAD_STEP {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_MAX_LOOK_AHEAD_STEP;
}

- (instancetype)initWithInt:(jint)bufferSize {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_initWithInt_(self, bufferSize);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)offerWithId:(id)e {
  if (nil == e) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"Null is not a valid element");
  }
  IOSObjectArray *buffer = producerBuffer_;
  jlong index = producerIndex_;
  jlong mask = producerMask_;
  jlong offset = RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index, mask);
  if (index < producerLookAhead_) {
    return RxInternalUtilUnsafeSpscUnboundedArrayQueue_writeToQueueWithNSObjectArray_withId_withLong_withLong_(self, buffer, e, index, offset);
  }
  else {
    jint lookAheadStep = producerLookAheadStep_;
    jlong lookAheadElementOffset = RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index + lookAheadStep, mask);
    if (nil == RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(buffer, lookAheadElementOffset)) {
      producerLookAhead_ = index + lookAheadStep - 1;
      return RxInternalUtilUnsafeSpscUnboundedArrayQueue_writeToQueueWithNSObjectArray_withId_withLong_withLong_(self, buffer, e, index, offset);
    }
    else if (nil != RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(buffer, RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index + 1, mask))) {
      return RxInternalUtilUnsafeSpscUnboundedArrayQueue_writeToQueueWithNSObjectArray_withId_withLong_withLong_(self, buffer, e, index, offset);
    }
    else {
      RxInternalUtilUnsafeSpscUnboundedArrayQueue_resizeWithNSObjectArray_withLong_withLong_withId_withLong_(self, buffer, index, offset, e, mask);
      return true;
    }
  }
}

- (jboolean)writeToQueueWithNSObjectArray:(IOSObjectArray *)buffer
                                   withId:(id)e
                                 withLong:(jlong)index
                                 withLong:(jlong)offset {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_writeToQueueWithNSObjectArray_withId_withLong_withLong_(self, buffer, e, index, offset);
}

- (void)resizeWithNSObjectArray:(IOSObjectArray *)oldBuffer
                       withLong:(jlong)currIndex
                       withLong:(jlong)offset
                         withId:(id)e
                       withLong:(jlong)mask {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_resizeWithNSObjectArray_withLong_withLong_withId_withLong_(self, oldBuffer, currIndex, offset, e, mask);
}

- (void)soNextWithNSObjectArray:(IOSObjectArray *)curr
              withNSObjectArray:(IOSObjectArray *)next {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soNextWithNSObjectArray_withNSObjectArray_(self, curr, next);
}

- (IOSObjectArray *)lvNextWithNSObjectArray:(IOSObjectArray *)curr {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvNextWithNSObjectArray_(self, curr);
}

- (id)poll {
  IOSObjectArray *buffer = consumerBuffer_;
  jlong index = consumerIndex_;
  jlong mask = consumerMask_;
  jlong offset = RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index, mask);
  id e = RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(buffer, offset);
  jboolean isNextBuffer = e == RxInternalUtilUnsafeSpscUnboundedArrayQueue_HAS_NEXT;
  if (nil != e && !isNextBuffer) {
    RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(buffer, offset, nil);
    RxInternalUtilUnsafeSpscUnboundedArrayQueue_soConsumerIndexWithLong_(self, index + 1);
    return e;
  }
  else if (isNextBuffer) {
    return RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPollWithNSObjectArray_withLong_withLong_(self, RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvNextWithNSObjectArray_(self, buffer), index, mask);
  }
  return nil;
}

- (id)newBufferPollWithNSObjectArray:(IOSObjectArray *)nextBuffer
                            withLong:(jlong)index
                            withLong:(jlong)mask {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPollWithNSObjectArray_withLong_withLong_(self, nextBuffer, index, mask);
}

- (id)peek {
  IOSObjectArray *buffer = consumerBuffer_;
  jlong index = consumerIndex_;
  jlong mask = consumerMask_;
  jlong offset = RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index, mask);
  id e = RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(buffer, offset);
  if (e == RxInternalUtilUnsafeSpscUnboundedArrayQueue_HAS_NEXT) {
    return RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPeekWithNSObjectArray_withLong_withLong_(self, RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvNextWithNSObjectArray_(self, buffer), index, mask);
  }
  return e;
}

- (id)newBufferPeekWithNSObjectArray:(IOSObjectArray *)nextBuffer
                            withLong:(jlong)index
                            withLong:(jlong)mask {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPeekWithNSObjectArray_withLong_withLong_(self, nextBuffer, index, mask);
}

- (jint)size {
  jlong after = RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvConsumerIndex(self);
  while (true) {
    jlong before = after;
    jlong currentProducerIndex = RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvProducerIndex(self);
    after = RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvConsumerIndex(self);
    if (before == after) {
      return (jint) (currentProducerIndex - after);
    }
  }
}

- (void)adjustLookAheadStepWithInt:(jint)capacity {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_adjustLookAheadStepWithInt_(self, capacity);
}

- (jlong)lvProducerIndex {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvProducerIndex(self);
}

- (jlong)lvConsumerIndex {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvConsumerIndex(self);
}

- (void)soProducerIndexWithLong:(jlong)v {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soProducerIndexWithLong_(self, v);
}

- (void)soConsumerIndexWithLong:(jlong)v {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soConsumerIndexWithLong_(self, v);
}

+ (jlong)calcWrappedOffsetWithLong:(jlong)index
                          withLong:(jlong)mask {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index, mask);
}

+ (jlong)calcDirectOffsetWithLong:(jlong)index {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcDirectOffsetWithLong_(index);
}

+ (void)soElementWithNSObjectArray:(IOSObjectArray *)buffer
                          withLong:(jlong)offset
                            withId:(id)e {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(buffer, offset, e);
}

+ (id)lvElementWithNSObjectArray:(IOSObjectArray *)buffer
                        withLong:(jlong)offset {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(buffer, offset);
}

- (jlong)currentProducerIndex {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvProducerIndex(self);
}

- (jlong)currentConsumerIndex {
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvConsumerIndex(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { "iterator", "LJavaUtilIterator;", 0x11, -1, -1, -1, 1, -1, -1 },
    { "offerWithId:", "Z", 0x11, 2, 3, -1, 4, -1, -1 },
    { "writeToQueueWithNSObjectArray:withId:withLong:withLong:", "Z", 0x2, 5, 6, -1, 7, -1, -1 },
    { "resizeWithNSObjectArray:withLong:withLong:withId:withLong:", "V", 0x2, 8, 9, -1, 10, -1, -1 },
    { "soNextWithNSObjectArray:withNSObjectArray:", "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { "lvNextWithNSObjectArray:", "[LNSObject;", 0x2, 13, 14, -1, -1, -1, -1 },
    { "poll", "LNSObject;", 0x11, -1, -1, -1, 15, -1, -1 },
    { "newBufferPollWithNSObjectArray:withLong:withLong:", "LNSObject;", 0x2, 16, 17, -1, 18, -1, -1 },
    { "peek", "LNSObject;", 0x11, -1, -1, -1, 15, -1, -1 },
    { "newBufferPeekWithNSObjectArray:withLong:withLong:", "LNSObject;", 0x2, 19, 17, -1, 18, -1, -1 },
    { "size", "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { "adjustLookAheadStepWithInt:", "V", 0x2, 20, 0, -1, -1, -1, -1 },
    { "lvProducerIndex", "J", 0x2, -1, -1, -1, -1, -1, -1 },
    { "lvConsumerIndex", "J", 0x2, -1, -1, -1, -1, -1, -1 },
    { "soProducerIndexWithLong:", "V", 0x2, 21, 22, -1, -1, -1, -1 },
    { "soConsumerIndexWithLong:", "V", 0x2, 23, 22, -1, -1, -1, -1 },
    { "calcWrappedOffsetWithLong:withLong:", "J", 0xa, 24, 25, -1, -1, -1, -1 },
    { "calcDirectOffsetWithLong:", "J", 0xa, 26, 22, -1, -1, -1, -1 },
    { "soElementWithNSObjectArray:withLong:withId:", "V", 0xa, 27, 28, -1, -1, -1, -1 },
    { "lvElementWithNSObjectArray:withLong:", "LNSObject;", 0xa, 29, 30, -1, 31, -1, -1 },
    { "currentProducerIndex", "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { "currentConsumerIndex", "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_LOOK_AHEAD_STEP", "I", .constantValue.asLong = 0, 0x18, -1, 32, -1, -1 },
    { "P_INDEX_OFFSET", "J", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "C_INDEX_OFFSET", "J", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "REF_ARRAY_BASE", "J", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "REF_ELEMENT_SHIFT", "I", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "HAS_NEXT", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "()Ljava/util/Iterator<TE;>;", "offer", "LNSObject;", "(TE;)Z", "writeToQueue", "[LNSObject;LNSObject;JJ", "([TE;TE;JJ)Z", "resize", "[LNSObject;JJLNSObject;J", "([TE;JJTE;J)V", "soNext", "[LNSObject;[LNSObject;", "lvNext", "[LNSObject;", "()TE;", "newBufferPoll", "[LNSObject;JJ", "([TE;JJ)TE;", "newBufferPeek", "adjustLookAheadStep", "soProducerIndex", "J", "soConsumerIndex", "calcWrappedOffset", "JJ", "calcDirectOffset", "soElement", "[LNSObject;JLNSObject;", "lvElement", "[LNSObject;J", "<E:Ljava/lang/Object;>([TE;J)Ljava/lang/Object;", &RxInternalUtilUnsafeSpscUnboundedArrayQueue_MAX_LOOK_AHEAD_STEP, &RxInternalUtilUnsafeSpscUnboundedArrayQueue_P_INDEX_OFFSET, &RxInternalUtilUnsafeSpscUnboundedArrayQueue_C_INDEX_OFFSET, &RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ARRAY_BASE, &RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ELEMENT_SHIFT, &RxInternalUtilUnsafeSpscUnboundedArrayQueue_HAS_NEXT, "<E:Ljava/lang/Object;>Lrx/internal/util/unsafe/SpscUnboundedArrayQueueConsumerField<TE;>;Lrx/internal/util/unsafe/QueueProgressIndicators;" };
  static const J2ObjcClassInfo _RxInternalUtilUnsafeSpscUnboundedArrayQueue = { "SpscUnboundedArrayQueue", "rx.internal.util.unsafe", ptrTable, methods, fields, 7, 0x1, 23, 6, -1, -1, -1, 38, -1 };
  return &_RxInternalUtilUnsafeSpscUnboundedArrayQueue;
}

+ (void)initialize {
  if (self == [RxInternalUtilUnsafeSpscUnboundedArrayQueue class]) {
    RxInternalUtilUnsafeSpscUnboundedArrayQueue_MAX_LOOK_AHEAD_STEP = [((JavaLangInteger *) nil_chk(JavaLangInteger_getIntegerWithNSString_withInt_(@"jctools.spsc.max.lookahead.step", 4096))) intValue];
    RxInternalUtilUnsafeSpscUnboundedArrayQueue_HAS_NEXT = new_NSObject_init();
    {
      jint scale_ = [((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) arrayIndexScaleWithIOSClass:IOSClass_arrayType(NSObject_class_(), 1)];
      if (4 == scale_) {
        RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ELEMENT_SHIFT = 2;
      }
      else if (8 == scale_) {
        RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ELEMENT_SHIFT = 3;
      }
      else {
        @throw new_JavaLangIllegalStateException_initWithNSString_(@"Unknown pointer size");
      }
      RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ARRAY_BASE = [JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE) arrayBaseOffsetWithIOSClass:IOSClass_arrayType(NSObject_class_(), 1)];
      @try {
        JavaLangReflectField *iField = [RxInternalUtilUnsafeSpscUnboundedArrayQueueProducerFields_class_() getDeclaredField:@"producerIndex"];
        RxInternalUtilUnsafeSpscUnboundedArrayQueue_P_INDEX_OFFSET = [JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE) objectFieldOffsetWithJavaLangReflectField:iField];
      }
      @catch (JavaLangNoSuchFieldException *e) {
        @throw new_JavaLangRuntimeException_initWithNSException_(e);
      }
      @try {
        JavaLangReflectField *iField = [RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField_class_() getDeclaredField:@"consumerIndex"];
        RxInternalUtilUnsafeSpscUnboundedArrayQueue_C_INDEX_OFFSET = [JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE) objectFieldOffsetWithJavaLangReflectField:iField];
      }
      @catch (JavaLangNoSuchFieldException *e) {
        @throw new_JavaLangRuntimeException_initWithNSException_(e);
      }
    }
    J2OBJC_SET_INITIALIZED(RxInternalUtilUnsafeSpscUnboundedArrayQueue)
  }
}

@end

void RxInternalUtilUnsafeSpscUnboundedArrayQueue_initWithInt_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, jint bufferSize) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueueConsumerField_init(self);
  jint p2capacity = RxInternalUtilUnsafePow2_roundToPowerOfTwoWithInt_(bufferSize);
  jlong mask = p2capacity - 1;
  IOSObjectArray *buffer = [IOSObjectArray newArrayWithLength:p2capacity + 1 type:NSObject_class_()];
  self->producerBuffer_ = buffer;
  self->producerMask_ = mask;
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_adjustLookAheadStepWithInt_(self, p2capacity);
  self->consumerBuffer_ = buffer;
  self->consumerMask_ = mask;
  self->producerLookAhead_ = mask - 1;
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soProducerIndexWithLong_(self, 0l);
}

RxInternalUtilUnsafeSpscUnboundedArrayQueue *new_RxInternalUtilUnsafeSpscUnboundedArrayQueue_initWithInt_(jint bufferSize) {
  J2OBJC_NEW_IMPL(RxInternalUtilUnsafeSpscUnboundedArrayQueue, initWithInt_, bufferSize)
}

RxInternalUtilUnsafeSpscUnboundedArrayQueue *create_RxInternalUtilUnsafeSpscUnboundedArrayQueue_initWithInt_(jint bufferSize) {
  J2OBJC_CREATE_IMPL(RxInternalUtilUnsafeSpscUnboundedArrayQueue, initWithInt_, bufferSize)
}

jboolean RxInternalUtilUnsafeSpscUnboundedArrayQueue_writeToQueueWithNSObjectArray_withId_withLong_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *buffer, id e, jlong index, jlong offset) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(buffer, offset, e);
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soProducerIndexWithLong_(self, index + 1);
  return true;
}

void RxInternalUtilUnsafeSpscUnboundedArrayQueue_resizeWithNSObjectArray_withLong_withLong_withId_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *oldBuffer, jlong currIndex, jlong offset, id e, jlong mask) {
  jint capacity = ((IOSObjectArray *) nil_chk(oldBuffer))->size_;
  IOSObjectArray *newBuffer = [IOSObjectArray newArrayWithLength:capacity type:NSObject_class_()];
  self->producerBuffer_ = newBuffer;
  self->producerLookAhead_ = currIndex + mask - 1;
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(newBuffer, offset, e);
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soNextWithNSObjectArray_withNSObjectArray_(self, oldBuffer, newBuffer);
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(oldBuffer, offset, RxInternalUtilUnsafeSpscUnboundedArrayQueue_HAS_NEXT);
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soProducerIndexWithLong_(self, currIndex + 1);
}

void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soNextWithNSObjectArray_withNSObjectArray_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *curr, IOSObjectArray *next) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(curr, RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcDirectOffsetWithLong_(((IOSObjectArray *) nil_chk(curr))->size_ - 1), next);
}

IOSObjectArray *RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvNextWithNSObjectArray_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *curr) {
  return (IOSObjectArray *) cast_check(RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(curr, RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcDirectOffsetWithLong_(((IOSObjectArray *) nil_chk(curr))->size_ - 1)), IOSClass_arrayType(NSObject_class_(), 1));
}

id RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPollWithNSObjectArray_withLong_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *nextBuffer, jlong index, jlong mask) {
  self->consumerBuffer_ = nextBuffer;
  jlong offsetInNew = RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index, mask);
  id n = RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(nextBuffer, offsetInNew);
  if (nil == n) {
    return nil;
  }
  else {
    RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(nextBuffer, offsetInNew, nil);
    RxInternalUtilUnsafeSpscUnboundedArrayQueue_soConsumerIndexWithLong_(self, index + 1);
    return n;
  }
}

id RxInternalUtilUnsafeSpscUnboundedArrayQueue_newBufferPeekWithNSObjectArray_withLong_withLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, IOSObjectArray *nextBuffer, jlong index, jlong mask) {
  self->consumerBuffer_ = nextBuffer;
  jlong offsetInNew = RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(index, mask);
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(nextBuffer, offsetInNew);
}

void RxInternalUtilUnsafeSpscUnboundedArrayQueue_adjustLookAheadStepWithInt_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, jint capacity) {
  self->producerLookAheadStep_ = JavaLangMath_minWithInt_withInt_(capacity / 4, RxInternalUtilUnsafeSpscUnboundedArrayQueue_MAX_LOOK_AHEAD_STEP);
}

jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvProducerIndex(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self) {
  return [((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) getLongVolatileWithId:self withLong:RxInternalUtilUnsafeSpscUnboundedArrayQueue_P_INDEX_OFFSET];
}

jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvConsumerIndex(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self) {
  return [((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) getLongVolatileWithId:self withLong:RxInternalUtilUnsafeSpscUnboundedArrayQueue_C_INDEX_OFFSET];
}

void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soProducerIndexWithLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, jlong v) {
  [((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) putOrderedLongWithId:self withLong:RxInternalUtilUnsafeSpscUnboundedArrayQueue_P_INDEX_OFFSET withLong:v];
}

void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soConsumerIndexWithLong_(RxInternalUtilUnsafeSpscUnboundedArrayQueue *self, jlong v) {
  [((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) putOrderedLongWithId:self withLong:RxInternalUtilUnsafeSpscUnboundedArrayQueue_C_INDEX_OFFSET withLong:v];
}

jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcWrappedOffsetWithLong_withLong_(jlong index, jlong mask) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_initialize();
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcDirectOffsetWithLong_(index & mask);
}

jlong RxInternalUtilUnsafeSpscUnboundedArrayQueue_calcDirectOffsetWithLong_(jlong index) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_initialize();
  return RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ARRAY_BASE + (JreLShift64(index, RxInternalUtilUnsafeSpscUnboundedArrayQueue_REF_ELEMENT_SHIFT));
}

void RxInternalUtilUnsafeSpscUnboundedArrayQueue_soElementWithNSObjectArray_withLong_withId_(IOSObjectArray *buffer, jlong offset, id e) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_initialize();
  [((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) putOrderedObjectWithId:buffer withLong:offset withId:e];
}

id RxInternalUtilUnsafeSpscUnboundedArrayQueue_lvElementWithNSObjectArray_withLong_(IOSObjectArray *buffer, jlong offset) {
  RxInternalUtilUnsafeSpscUnboundedArrayQueue_initialize();
  return [((SunMiscUnsafe *) nil_chk(JreLoadStatic(RxInternalUtilUnsafeUnsafeAccess, UNSAFE))) getObjectVolatileWithId:buffer withLong:offset];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilUnsafeSpscUnboundedArrayQueue)
