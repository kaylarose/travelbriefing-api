//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/util/RxJavaPluginUtils.java
//

#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "rx/internal/util/RxJavaPluginUtils.h"
#include "rx/plugins/RxJavaErrorHandler.h"
#include "rx/plugins/RxJavaPlugins.h"

@interface RxInternalUtilRxJavaPluginUtils ()

+ (void)handlePluginExceptionWithNSException:(NSException *)pluginException;

@end

__attribute__((unused)) static void RxInternalUtilRxJavaPluginUtils_handlePluginExceptionWithNSException_(NSException *pluginException);

@implementation RxInternalUtilRxJavaPluginUtils

+ (void)handleExceptionWithNSException:(NSException *)e {
  RxInternalUtilRxJavaPluginUtils_handleExceptionWithNSException_(e);
}

+ (void)handlePluginExceptionWithNSException:(NSException *)pluginException {
  RxInternalUtilRxJavaPluginUtils_handlePluginExceptionWithNSException_(pluginException);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilRxJavaPluginUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleExceptionWithNSException:", "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { "handlePluginExceptionWithNSException:", "V", 0xa, 2, 1, -1, -1, -1, -1 },
    { "init", NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "handleException", "LNSException;", "handlePluginException" };
  static const J2ObjcClassInfo _RxInternalUtilRxJavaPluginUtils = { "RxJavaPluginUtils", "rx.internal.util", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
  return &_RxInternalUtilRxJavaPluginUtils;
}

@end

void RxInternalUtilRxJavaPluginUtils_handleExceptionWithNSException_(NSException *e) {
  RxInternalUtilRxJavaPluginUtils_initialize();
  @try {
    [((RxPluginsRxJavaErrorHandler *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler])) handleErrorWithNSException:e];
  }
  @catch (NSException *pluginException) {
    RxInternalUtilRxJavaPluginUtils_handlePluginExceptionWithNSException_(pluginException);
  }
}

void RxInternalUtilRxJavaPluginUtils_handlePluginExceptionWithNSException_(NSException *pluginException) {
  RxInternalUtilRxJavaPluginUtils_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"RxJavaErrorHandler threw an Exception. It shouldn't. => ", [((NSException *) nil_chk(pluginException)) getMessage])];
  [pluginException printStackTrace];
}

void RxInternalUtilRxJavaPluginUtils_init(RxInternalUtilRxJavaPluginUtils *self) {
  NSObject_init(self);
}

RxInternalUtilRxJavaPluginUtils *new_RxInternalUtilRxJavaPluginUtils_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilRxJavaPluginUtils, init)
}

RxInternalUtilRxJavaPluginUtils *create_RxInternalUtilRxJavaPluginUtils_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilRxJavaPluginUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilRxJavaPluginUtils)
