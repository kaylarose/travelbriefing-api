//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/util/atomic/LinkedQueueNode.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "rx/internal/util/atomic/LinkedQueueNode.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface RxInternalUtilAtomicLinkedQueueNode () {
 @public
  id value_LinkedQueueNode_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalUtilAtomicLinkedQueueNode, value_LinkedQueueNode_, id)

/*!
 */
inline jlong RxInternalUtilAtomicLinkedQueueNode_get_serialVersionUID();
#define RxInternalUtilAtomicLinkedQueueNode_serialVersionUID 2404266111789071508LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalUtilAtomicLinkedQueueNode, serialVersionUID, jlong)

@implementation RxInternalUtilAtomicLinkedQueueNode

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilAtomicLinkedQueueNode_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithId:(id)val {
  RxInternalUtilAtomicLinkedQueueNode_initWithId_(self, val);
  return self;
}

- (id)getAndNullValue {
  id temp = [self lpValue];
  [self spValueWithId:nil];
  return temp;
}

- (id)lpValue {
  return value_LinkedQueueNode_;
}

- (void)spValueWithId:(id)newValue {
  value_LinkedQueueNode_ = newValue;
}

- (void)soNextWithRxInternalUtilAtomicLinkedQueueNode:(RxInternalUtilAtomicLinkedQueueNode *)n {
  [self lazySetWithId:n];
}

- (RxInternalUtilAtomicLinkedQueueNode *)lvNext {
  return [self get];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithId:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "getAndNullValue", "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { "lpValue", "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { "spValueWithId:", "V", 0x1, 3, 0, -1, 1, -1, -1 },
    { "soNextWithRxInternalUtilAtomicLinkedQueueNode:", "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { "lvNext", "LRxInternalUtilAtomicLinkedQueueNode;", 0x1, -1, -1, -1, 7, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalUtilAtomicLinkedQueueNode_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "value_LinkedQueueNode_", "LNSObject;", .constantValue.asLong = 0, 0x2, 8, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TE;)V", "()TE;", "spValue", "soNext", "LRxInternalUtilAtomicLinkedQueueNode;", "(Lrx/internal/util/atomic/LinkedQueueNode<TE;>;)V", "()Lrx/internal/util/atomic/LinkedQueueNode<TE;>;", "value", "TE;", "<E:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/util/atomic/LinkedQueueNode<TE;>;>;" };
  static const J2ObjcClassInfo _RxInternalUtilAtomicLinkedQueueNode = { "LinkedQueueNode", "rx.internal.util.atomic", ptrTable, methods, fields, 7, 0x11, 7, 2, -1, -1, -1, 10, -1 };
  return &_RxInternalUtilAtomicLinkedQueueNode;
}

@end

void RxInternalUtilAtomicLinkedQueueNode_init(RxInternalUtilAtomicLinkedQueueNode *self) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
}

RxInternalUtilAtomicLinkedQueueNode *new_RxInternalUtilAtomicLinkedQueueNode_init() {
  J2OBJC_NEW_IMPL(RxInternalUtilAtomicLinkedQueueNode, init)
}

RxInternalUtilAtomicLinkedQueueNode *create_RxInternalUtilAtomicLinkedQueueNode_init() {
  J2OBJC_CREATE_IMPL(RxInternalUtilAtomicLinkedQueueNode, init)
}

void RxInternalUtilAtomicLinkedQueueNode_initWithId_(RxInternalUtilAtomicLinkedQueueNode *self, id val) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  [self spValueWithId:val];
}

RxInternalUtilAtomicLinkedQueueNode *new_RxInternalUtilAtomicLinkedQueueNode_initWithId_(id val) {
  J2OBJC_NEW_IMPL(RxInternalUtilAtomicLinkedQueueNode, initWithId_, val)
}

RxInternalUtilAtomicLinkedQueueNode *create_RxInternalUtilAtomicLinkedQueueNode_initWithId_(id val) {
  J2OBJC_CREATE_IMPL(RxInternalUtilAtomicLinkedQueueNode, initWithId_, val)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilAtomicLinkedQueueNode)
