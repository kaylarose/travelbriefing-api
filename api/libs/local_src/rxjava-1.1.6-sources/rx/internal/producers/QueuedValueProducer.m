//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/internal/producers/QueuedValueProducer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "rx/Subscriber.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/internal/operators/BackpressureUtils.h"
#include "rx/internal/producers/QueuedValueProducer.h"
#include "rx/internal/util/atomic/SpscLinkedAtomicQueue.h"
#include "rx/internal/util/unsafe/SpscLinkedQueue.h"
#include "rx/internal/util/unsafe/UnsafeAccess.h"

@interface RxInternalProducersQueuedValueProducer ()

- (void)drain;

@end

/*!
 */
inline jlong RxInternalProducersQueuedValueProducer_get_serialVersionUID();
#define RxInternalProducersQueuedValueProducer_serialVersionUID 7277121710709137047LL
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalProducersQueuedValueProducer, serialVersionUID, jlong)

__attribute__((unused)) static void RxInternalProducersQueuedValueProducer_drain(RxInternalProducersQueuedValueProducer *self);

J2OBJC_INITIALIZED_DEFN(RxInternalProducersQueuedValueProducer)

id RxInternalProducersQueuedValueProducer_NULL_SENTINEL;

@implementation RxInternalProducersQueuedValueProducer

+ (id)NULL_SENTINEL {
  return RxInternalProducersQueuedValueProducer_NULL_SENTINEL;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child {
  RxInternalProducersQueuedValueProducer_initWithRxSubscriber_(self, child);
  return self;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
                   withJavaUtilQueue:(id<JavaUtilQueue>)queue {
  RxInternalProducersQueuedValueProducer_initWithRxSubscriber_withJavaUtilQueue_(self, child, queue);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (n < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"n >= 0 required");
  }
  if (n > 0) {
    RxInternalOperatorsBackpressureUtils_getAndAddRequestWithJavaUtilConcurrentAtomicAtomicLong_withLong_(self, n);
    RxInternalProducersQueuedValueProducer_drain(self);
  }
}

- (jboolean)offerWithId:(id)value {
  if (value == nil) {
    if (![((id<JavaUtilQueue>) nil_chk(queue_)) offerWithId:RxInternalProducersQueuedValueProducer_NULL_SENTINEL]) {
      return false;
    }
  }
  else {
    if (![((id<JavaUtilQueue>) nil_chk(queue_)) offerWithId:value]) {
      return false;
    }
  }
  RxInternalProducersQueuedValueProducer_drain(self);
  return true;
}

- (void)drain {
  RxInternalProducersQueuedValueProducer_drain(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:", NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { "initWithRxSubscriber:withJavaUtilQueue:", NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { "requestWithLong:", "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { "offerWithId:", "Z", 0x1, 6, 7, -1, 8, -1, -1 },
    { "drain", "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = RxInternalProducersQueuedValueProducer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "child_", "LRxSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "queue_", "LJavaUtilQueue;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "wip_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "NULL_SENTINEL", "LNSObject;", .constantValue.asLong = 0, 0x18, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "LRxSubscriber;LJavaUtilQueue;", "(Lrx/Subscriber<-TT;>;Ljava/util/Queue<Ljava/lang/Object;>;)V", "request", "J", "offer", "LNSObject;", "(TT;)Z", "Lrx/Subscriber<-TT;>;", "Ljava/util/Queue<Ljava/lang/Object;>;", &RxInternalProducersQueuedValueProducer_NULL_SENTINEL, "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicLong;Lrx/Producer;" };
  static const J2ObjcClassInfo _RxInternalProducersQueuedValueProducer = { "QueuedValueProducer", "rx.internal.producers", ptrTable, methods, fields, 7, 0x11, 5, 5, -1, -1, -1, 12, -1 };
  return &_RxInternalProducersQueuedValueProducer;
}

+ (void)initialize {
  if (self == [RxInternalProducersQueuedValueProducer class]) {
    RxInternalProducersQueuedValueProducer_NULL_SENTINEL = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(RxInternalProducersQueuedValueProducer)
  }
}

@end

void RxInternalProducersQueuedValueProducer_initWithRxSubscriber_(RxInternalProducersQueuedValueProducer *self, RxSubscriber *child) {
  RxInternalProducersQueuedValueProducer_initWithRxSubscriber_withJavaUtilQueue_(self, child, RxInternalUtilUnsafeUnsafeAccess_isUnsafeAvailable() ? new_RxInternalUtilUnsafeSpscLinkedQueue_init() : new_RxInternalUtilAtomicSpscLinkedAtomicQueue_init());
}

RxInternalProducersQueuedValueProducer *new_RxInternalProducersQueuedValueProducer_initWithRxSubscriber_(RxSubscriber *child) {
  J2OBJC_NEW_IMPL(RxInternalProducersQueuedValueProducer, initWithRxSubscriber_, child)
}

RxInternalProducersQueuedValueProducer *create_RxInternalProducersQueuedValueProducer_initWithRxSubscriber_(RxSubscriber *child) {
  J2OBJC_CREATE_IMPL(RxInternalProducersQueuedValueProducer, initWithRxSubscriber_, child)
}

void RxInternalProducersQueuedValueProducer_initWithRxSubscriber_withJavaUtilQueue_(RxInternalProducersQueuedValueProducer *self, RxSubscriber *child, id<JavaUtilQueue> queue) {
  JavaUtilConcurrentAtomicAtomicLong_init(self);
  self->child_ = child;
  self->queue_ = queue;
  self->wip_ = new_JavaUtilConcurrentAtomicAtomicInteger_init();
}

RxInternalProducersQueuedValueProducer *new_RxInternalProducersQueuedValueProducer_initWithRxSubscriber_withJavaUtilQueue_(RxSubscriber *child, id<JavaUtilQueue> queue) {
  J2OBJC_NEW_IMPL(RxInternalProducersQueuedValueProducer, initWithRxSubscriber_withJavaUtilQueue_, child, queue)
}

RxInternalProducersQueuedValueProducer *create_RxInternalProducersQueuedValueProducer_initWithRxSubscriber_withJavaUtilQueue_(RxSubscriber *child, id<JavaUtilQueue> queue) {
  J2OBJC_CREATE_IMPL(RxInternalProducersQueuedValueProducer, initWithRxSubscriber_withJavaUtilQueue_, child, queue)
}

void RxInternalProducersQueuedValueProducer_drain(RxInternalProducersQueuedValueProducer *self) {
  if ([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->wip_)) getAndIncrement] == 0) {
    RxSubscriber *c = self->child_;
    id<JavaUtilQueue> q = self->queue_;
    do {
      if ([((RxSubscriber *) nil_chk(c)) isUnsubscribed]) {
        return;
      }
      [self->wip_ lazySetWithInt:1];
      jlong r = [self get];
      jlong e = 0;
      id v;
      while (r != 0 && (v = [((id<JavaUtilQueue>) nil_chk(q)) poll]) != nil) {
        @try {
          if (v == RxInternalProducersQueuedValueProducer_NULL_SENTINEL) {
            [c onNextWithId:nil];
          }
          else {
            id t = v;
            [c onNextWithId:t];
          }
        }
        @catch (NSException *ex) {
          RxExceptionsExceptions_throwOrReportWithNSException_withRxObserver_withId_(ex, c, v != RxInternalProducersQueuedValueProducer_NULL_SENTINEL ? v : nil);
          return;
        }
        if ([c isUnsubscribed]) {
          return;
        }
        r--;
        e++;
      }
      if (e != 0 && [self get] != JavaLangLong_MAX_VALUE) {
        [self addAndGetWithLong:-e];
      }
    }
    while ([self->wip_ decrementAndGet] != 0);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalProducersQueuedValueProducer)
