//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/Subscription.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxSubscription")
#ifdef RESTRICT_RxSubscription
#define INCLUDE_ALL_RxSubscription 0
#else
#define INCLUDE_ALL_RxSubscription 1
#endif
#undef RESTRICT_RxSubscription

#if !defined (RxSubscription_) && (INCLUDE_ALL_RxSubscription || defined(INCLUDE_RxSubscription))
#define RxSubscription_

/*!
 @brief Subscription returns from <code>Observable.subscribe(Subscriber)</code> to allow unsubscribing.
 <p>
 See the utilities in <code>Subscriptions</code> and the implementations in the <code>rx.subscriptions</code> package.
 <p>
 This interface is the RxJava equivalent of <code>IDisposable</code> in Microsoft's Rx implementation.
 */
@protocol RxSubscription < JavaObject >

/*!
 @brief Stops the receipt of notifications on the <code>Subscriber</code> that was registered when this Subscription
 was received.
 <p>
 This allows unregistering an <code>Subscriber</code> before it has finished receiving all events (i.e. before
 onCompleted is called).
 */
- (void)unsubscribe;

/*!
 @brief Indicates whether this <code>Subscription</code> is currently unsubscribed.
 @return <code>true</code> if this <code>Subscription</code> is currently unsubscribed, <code>false</code> otherwise
 */
- (jboolean)isUnsubscribed;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubscription)

J2OBJC_TYPE_LITERAL_HEADER(RxSubscription)

#endif

#pragma pop_macro("INCLUDE_ALL_RxSubscription")
