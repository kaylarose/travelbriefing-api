//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/Producer.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxProducer")
#ifdef RESTRICT_RxProducer
#define INCLUDE_ALL_RxProducer 0
#else
#define INCLUDE_ALL_RxProducer 1
#endif
#undef RESTRICT_RxProducer

#if !defined (RxProducer_) && (INCLUDE_ALL_RxProducer || defined(INCLUDE_RxProducer))
#define RxProducer_

/*!
 @brief Interface that establishes a request-channel between an Observable and a Subscriber and allows
 the Subscriber to request a certain amount of items from the Observable (otherwise known as
 backpressure).
 <p>The request amount only affects calls to <code>Subscriber.onNext(Object)</code>; onError and onCompleted may appear without
 requests.
 <p>However, backpressure is somewhat optional in RxJava 1.x and Subscribers may not
 receive a Producer via their <code>Subscriber.setProducer(Producer)</code> method and will run
 in unbounded mode. Depending on the chain of operators, this can lead to <code>rx.exceptions.MissingBackpressureException</code>.
 */
@protocol RxProducer < JavaObject >

/*!
 @brief Request a certain maximum number of items from this Producer.
 This is a way of requesting backpressure.
 To disable backpressure, pass <code>Long.MAX_VALUE</code> to this method.
 <p>
 Requests are additive but if a sequence of requests totals more than <code>Long.MAX_VALUE</code> then 
 <code>Long.MAX_VALUE</code> requests will be actioned and the extras <i>may</i> be ignored. Arriving at 
 <code>Long.MAX_VALUE</code> by addition of requests cannot be assumed to disable backpressure. For example, 
 the code below may result in <code>Long.MAX_VALUE</code> requests being actioned only.
 @code

  request(100);
  request(Long.MAX_VALUE-1);
  
@endcode 
 @param n the maximum number of items you want this Producer to produce, or <code>Long.MAX_VALUE</code> if you
 want the Producer to produce items at its own pace
 @throws IllegalArgumentException if the request amount is negative
 */
- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxProducer)

J2OBJC_TYPE_LITERAL_HEADER(RxProducer)

#endif

#pragma pop_macro("INCLUDE_ALL_RxProducer")
