//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/Completable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Iterable.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/TimeoutException.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "rx/Completable.h"
#include "rx/Observable.h"
#include "rx/Scheduler.h"
#include "rx/Single.h"
#include "rx/SingleSubscriber.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/exceptions/CompositeException.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Action0.h"
#include "rx/functions/Action1.h"
#include "rx/functions/Actions.h"
#include "rx/functions/Func0.h"
#include "rx/functions/Func1.h"
#include "rx/functions/Func2.h"
#include "rx/internal/operators/CompletableOnSubscribeConcat.h"
#include "rx/internal/operators/CompletableOnSubscribeConcatArray.h"
#include "rx/internal/operators/CompletableOnSubscribeConcatIterable.h"
#include "rx/internal/operators/CompletableOnSubscribeMerge.h"
#include "rx/internal/operators/CompletableOnSubscribeMergeArray.h"
#include "rx/internal/operators/CompletableOnSubscribeMergeDelayErrorArray.h"
#include "rx/internal/operators/CompletableOnSubscribeMergeDelayErrorIterable.h"
#include "rx/internal/operators/CompletableOnSubscribeMergeIterable.h"
#include "rx/internal/operators/CompletableOnSubscribeTimeout.h"
#include "rx/internal/util/SubscriptionList.h"
#include "rx/internal/util/UtilityFunctions.h"
#include "rx/observers/SafeCompletableSubscriber.h"
#include "rx/observers/SafeSubscriber.h"
#include "rx/plugins/RxJavaCompletableExecutionHook.h"
#include "rx/plugins/RxJavaErrorHandler.h"
#include "rx/plugins/RxJavaObservableExecutionHook.h"
#include "rx/plugins/RxJavaPlugins.h"
#include "rx/schedulers/Schedulers.h"
#include "rx/subscriptions/BooleanSubscription.h"
#include "rx/subscriptions/CompositeSubscription.h"
#include "rx/subscriptions/MultipleAssignmentSubscription.h"
#include "rx/subscriptions/SerialSubscription.h"
#include "rx/subscriptions/Subscriptions.h"

@interface RxCompletable () {
 @public
  /*!
   @brief The actual subscription action.
   */
  id<RxCompletable_CompletableOnSubscribe> onSubscribe_;
}

+ (void)deliverUncaughtExceptionWithNSException:(NSException *)e;

/*!
 @brief Performs the actual unsafe subscription and calls the onStart if required.
 @param s the subscriber instance, not null
 @param callOnStart if true, the Subscriber.onStart will be called
 @throws NullPointerException if s is null
 */
- (void)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)s
                            withBoolean:(jboolean)callOnStart;

@end

J2OBJC_FIELD_SETTER(RxCompletable, onSubscribe_, id<RxCompletable_CompletableOnSubscribe>)

__attribute__((unused)) static RxObservable *RxCompletable_andThenWithRxObservable_(RxCompletable *self, RxObservable *next);

__attribute__((unused)) static RxCompletable *RxCompletable_andThenWithRxCompletable_(RxCompletable *self, RxCompletable *next);

__attribute__((unused)) static RxCompletable *RxCompletable_concatWithWithRxCompletable_(RxCompletable *self, RxCompletable *other);

__attribute__((unused)) static RxCompletable *RxCompletable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withBoolean_(RxCompletable *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, jboolean delayError);

__attribute__((unused)) static RxCompletable *RxCompletable_doOnCompletedWithRxFunctionsAction0_(RxCompletable *self, id<RxFunctionsAction0> onCompleted);

__attribute__((unused)) static RxCompletable *RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(RxCompletable *self, id<RxFunctionsAction1> onSubscribe, id<RxFunctionsAction1> onError, id<RxFunctionsAction0> onComplete, id<RxFunctionsAction0> onAfterComplete, id<RxFunctionsAction0> onUnsubscribe);

__attribute__((unused)) static RxCompletable *RxCompletable_onErrorCompleteWithRxFunctionsFunc1_(RxCompletable *self, id<RxFunctionsFunc1> predicate);

__attribute__((unused)) static void RxCompletable_deliverUncaughtExceptionWithNSException_(NSException *e);

__attribute__((unused)) static void RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(RxCompletable *self, id<RxCompletable_CompletableSubscriber> s);

__attribute__((unused)) static void RxCompletable_unsafeSubscribeWithRxSubscriber_(RxCompletable *self, RxSubscriber *s);

__attribute__((unused)) static void RxCompletable_unsafeSubscribeWithRxSubscriber_withBoolean_(RxCompletable *self, RxSubscriber *s, jboolean callOnStart);

__attribute__((unused)) static RxCompletable *RxCompletable_timeout0WithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(RxCompletable *self, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, RxCompletable *other);

__attribute__((unused)) static id RxCompletable_toWithRxFunctionsFunc1_(RxCompletable *self, id<RxFunctionsFunc1> converter);

__attribute__((unused)) static RxObservable *RxCompletable_toObservable(RxCompletable *self);

__attribute__((unused)) static RxSingle *RxCompletable_toSingleWithRxFunctionsFunc0_(RxCompletable *self, id<RxFunctionsFunc0> completionValueFunc0);

__attribute__((unused)) static IOSObjectArray *RxCompletable__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxCompletable__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RxCompletable__Annotations$2();

@interface RxCompletable_CompletableOnSubscribe : NSObject

@end

@interface RxCompletable_CompletableOperator : NSObject

@end

@interface RxCompletable_CompletableSubscriber : NSObject

@end

@interface RxCompletable_CompletableTransformer : NSObject

@end

@interface RxCompletable_$1 : NSObject < RxCompletable_CompletableOnSubscribe >

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$1)

__attribute__((unused)) static void RxCompletable_$1_init(RxCompletable_$1 *self);

__attribute__((unused)) static RxCompletable_$1 *new_RxCompletable_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$1 *create_RxCompletable_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$1)

@interface RxCompletable_$2 : NSObject < RxCompletable_CompletableOnSubscribe >

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$2)

__attribute__((unused)) static void RxCompletable_$2_init(RxCompletable_$2 *self);

__attribute__((unused)) static RxCompletable_$2 *new_RxCompletable_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$2 *create_RxCompletable_$2_init();

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$2)

@interface RxCompletable_$3 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  IOSObjectArray *val$sources_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletableArray:(IOSObjectArray *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$3)

J2OBJC_FIELD_SETTER(RxCompletable_$3, val$sources_, IOSObjectArray *)

__attribute__((unused)) static void RxCompletable_$3_initWithRxCompletableArray_(RxCompletable_$3 *self, IOSObjectArray *capture$0);

__attribute__((unused)) static RxCompletable_$3 *new_RxCompletable_$3_initWithRxCompletableArray_(IOSObjectArray *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$3 *create_RxCompletable_$3_initWithRxCompletableArray_(IOSObjectArray *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$3)

@interface RxCompletable_$3_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$once_;
  RxSubscriptionsCompositeSubscription *val$set_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                     withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$1
                      withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$3_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$3_$1, val$once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxCompletable_$3_$1, val$set_, RxSubscriptionsCompositeSubscription *)
J2OBJC_FIELD_SETTER(RxCompletable_$3_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxCompletable_$3_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

__attribute__((unused)) static RxCompletable_$3_$1 *new_RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$3_$1 *create_RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$3_$1)

@interface RxCompletable_$4 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  id<JavaLangIterable> val$sources_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$4)

J2OBJC_FIELD_SETTER(RxCompletable_$4, val$sources_, id<JavaLangIterable>)

__attribute__((unused)) static void RxCompletable_$4_initWithJavaLangIterable_(RxCompletable_$4 *self, id<JavaLangIterable> capture$0);

__attribute__((unused)) static RxCompletable_$4 *new_RxCompletable_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$4 *create_RxCompletable_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$4)

@interface RxCompletable_$4_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *val$once_;
  RxSubscriptionsCompositeSubscription *val$set_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                     withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$1
                      withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$4_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$4_$1, val$once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxCompletable_$4_$1, val$set_, RxSubscriptionsCompositeSubscription *)
J2OBJC_FIELD_SETTER(RxCompletable_$4_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxCompletable_$4_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

__attribute__((unused)) static RxCompletable_$4_$1 *new_RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$4_$1 *create_RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$4_$1)

@interface RxCompletable_$5 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  id<RxFunctionsFunc0> val$completableFunc0_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$5)

J2OBJC_FIELD_SETTER(RxCompletable_$5, val$completableFunc0_, id<RxFunctionsFunc0>)

__attribute__((unused)) static void RxCompletable_$5_initWithRxFunctionsFunc0_(RxCompletable_$5 *self, id<RxFunctionsFunc0> capture$0);

__attribute__((unused)) static RxCompletable_$5 *new_RxCompletable_$5_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$5 *create_RxCompletable_$5_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$5)

@interface RxCompletable_$6 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  id<RxFunctionsFunc0> val$errorFunc0_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$6)

J2OBJC_FIELD_SETTER(RxCompletable_$6, val$errorFunc0_, id<RxFunctionsFunc0>)

__attribute__((unused)) static void RxCompletable_$6_initWithRxFunctionsFunc0_(RxCompletable_$6 *self, id<RxFunctionsFunc0> capture$0);

__attribute__((unused)) static RxCompletable_$6 *new_RxCompletable_$6_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$6 *create_RxCompletable_$6_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$6)

@interface RxCompletable_$7 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  NSException *val$error_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithNSException:(NSException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$7)

J2OBJC_FIELD_SETTER(RxCompletable_$7, val$error_, NSException *)

__attribute__((unused)) static void RxCompletable_$7_initWithNSException_(RxCompletable_$7 *self, NSException *capture$0);

__attribute__((unused)) static RxCompletable_$7 *new_RxCompletable_$7_initWithNSException_(NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$7 *create_RxCompletable_$7_initWithNSException_(NSException *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$7)

@interface RxCompletable_$8 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  id<RxFunctionsAction0> val$action_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$8)

J2OBJC_FIELD_SETTER(RxCompletable_$8, val$action_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxCompletable_$8_initWithRxFunctionsAction0_(RxCompletable_$8 *self, id<RxFunctionsAction0> capture$0);

__attribute__((unused)) static RxCompletable_$8 *new_RxCompletable_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$8 *create_RxCompletable_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$8)

@interface RxCompletable_$9 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  id<JavaUtilConcurrentCallable> val$callable_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$9)

J2OBJC_FIELD_SETTER(RxCompletable_$9, val$callable_, id<JavaUtilConcurrentCallable>)

__attribute__((unused)) static void RxCompletable_$9_initWithJavaUtilConcurrentCallable_(RxCompletable_$9 *self, id<JavaUtilConcurrentCallable> capture$0);

__attribute__((unused)) static RxCompletable_$9 *new_RxCompletable_$9_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$9 *create_RxCompletable_$9_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$9)

@interface RxCompletable_$10 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxObservable *val$flowable_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)cs;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$10)

J2OBJC_FIELD_SETTER(RxCompletable_$10, val$flowable_, RxObservable *)

__attribute__((unused)) static void RxCompletable_$10_initWithRxObservable_(RxCompletable_$10 *self, RxObservable *capture$0);

__attribute__((unused)) static RxCompletable_$10 *new_RxCompletable_$10_initWithRxObservable_(RxObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$10 *create_RxCompletable_$10_initWithRxObservable_(RxObservable *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$10)

@interface RxCompletable_$10_$1 : RxSubscriber {
 @public
  id<RxCompletable_CompletableSubscriber> val$cs_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$10_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$10_$1, val$cs_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(RxCompletable_$10_$1 *self, id<RxCompletable_CompletableSubscriber> capture$0);

__attribute__((unused)) static RxCompletable_$10_$1 *new_RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$10_$1 *create_RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$10_$1)

@interface RxCompletable_$11 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxSingle *val$single_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxSingle:(RxSingle *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$11)

J2OBJC_FIELD_SETTER(RxCompletable_$11, val$single_, RxSingle *)

__attribute__((unused)) static void RxCompletable_$11_initWithRxSingle_(RxCompletable_$11 *self, RxSingle *capture$0);

__attribute__((unused)) static RxCompletable_$11 *new_RxCompletable_$11_initWithRxSingle_(RxSingle *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$11 *create_RxCompletable_$11_initWithRxSingle_(RxSingle *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$11)

@interface RxCompletable_$11_$1 : RxSingleSubscriber {
 @public
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSuccessWithId:(id)value;

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$11_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$11_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(RxCompletable_$11_$1 *self, id<RxCompletable_CompletableSubscriber> capture$0);

__attribute__((unused)) static RxCompletable_$11_$1 *new_RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$11_$1 *create_RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$11_$1)

@interface RxCompletable_$12 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxScheduler *val$scheduler_;
  jlong val$delay_;
  JavaUtilConcurrentTimeUnit *val$unit_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxScheduler:(RxScheduler *)capture$0
                           withLong:(jlong)capture$1
     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$12)

J2OBJC_FIELD_SETTER(RxCompletable_$12, val$scheduler_, RxScheduler *)
J2OBJC_FIELD_SETTER(RxCompletable_$12, val$unit_, JavaUtilConcurrentTimeUnit *)

__attribute__((unused)) static void RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(RxCompletable_$12 *self, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2);

__attribute__((unused)) static RxCompletable_$12 *new_RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$12 *create_RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$12)

@interface RxCompletable_$12_$1 : NSObject < RxFunctionsAction0 > {
 @public
  id<RxCompletable_CompletableSubscriber> val$s_;
  RxScheduler_Worker *val$w_;
}

- (void)call;

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0
                                     withRxScheduler_Worker:(RxScheduler_Worker *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$12_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$12_$1, val$s_, id<RxCompletable_CompletableSubscriber>)
J2OBJC_FIELD_SETTER(RxCompletable_$12_$1, val$w_, RxScheduler_Worker *)

__attribute__((unused)) static void RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$12_$1 *self, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1);

__attribute__((unused)) static RxCompletable_$12_$1 *new_RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$12_$1 *create_RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$12_$1)

@interface RxCompletable_$13 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  id<RxFunctionsFunc0> val$resourceFunc0_;
  id<RxFunctionsFunc1> val$completableFunc1_;
  id<RxFunctionsAction1> val$disposer_;
  jboolean val$eager_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$1
                  withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2
                             withBoolean:(jboolean)capture$3;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$13)

J2OBJC_FIELD_SETTER(RxCompletable_$13, val$resourceFunc0_, id<RxFunctionsFunc0>)
J2OBJC_FIELD_SETTER(RxCompletable_$13, val$completableFunc1_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxCompletable_$13, val$disposer_, id<RxFunctionsAction1>)

__attribute__((unused)) static void RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(RxCompletable_$13 *self, id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1, id<RxFunctionsAction1> capture$2, jboolean capture$3);

__attribute__((unused)) static RxCompletable_$13 *new_RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1, id<RxFunctionsAction1> capture$2, jboolean capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$13 *create_RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1, id<RxFunctionsAction1> capture$2, jboolean capture$3);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$13)

@interface RxCompletable_$13_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$13 *this$0_;
  id<RxSubscription> d_;
  JavaUtilConcurrentAtomicAtomicBoolean *val$once_;
  id val$resource_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)dispose;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$13:(RxCompletable_$13 *)outer$
withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                                   withId:(id)capture$1
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$13_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$13_$1, this$0_, RxCompletable_$13 *)
J2OBJC_FIELD_SETTER(RxCompletable_$13_$1, d_, id<RxSubscription>)
J2OBJC_FIELD_SETTER(RxCompletable_$13_$1, val$once_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxCompletable_$13_$1, val$resource_, id)
J2OBJC_FIELD_SETTER(RxCompletable_$13_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(RxCompletable_$13_$1 *self, RxCompletable_$13 *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, id capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

__attribute__((unused)) static RxCompletable_$13_$1 *new_RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(RxCompletable_$13 *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, id capture$1, id<RxCompletable_CompletableSubscriber> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$13_$1 *create_RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(RxCompletable_$13 *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, id capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$13_$1)

@interface RxCompletable_$13_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$13_$1 *this$0_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$13_$1:(RxCompletable_$13_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$13_$1_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$13_$1_$1, this$0_, RxCompletable_$13_$1 *)

__attribute__((unused)) static void RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(RxCompletable_$13_$1_$1 *self, RxCompletable_$13_$1 *outer$);

__attribute__((unused)) static RxCompletable_$13_$1_$1 *new_RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(RxCompletable_$13_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$13_$1_$1 *create_RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(RxCompletable_$13_$1 *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$13_$1_$1)

@interface RxCompletable_$14 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  JavaUtilConcurrentCountDownLatch *val$cdl_;
  IOSObjectArray *val$err_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$14)

J2OBJC_FIELD_SETTER(RxCompletable_$14, val$cdl_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxCompletable_$14, val$err_, IOSObjectArray *)

__attribute__((unused)) static void RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$14 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

__attribute__((unused)) static RxCompletable_$14 *new_RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$14 *create_RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$14)

@interface RxCompletable_$15 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  JavaUtilConcurrentCountDownLatch *val$cdl_;
  IOSObjectArray *val$err_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$15)

J2OBJC_FIELD_SETTER(RxCompletable_$15, val$cdl_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxCompletable_$15, val$err_, IOSObjectArray *)

__attribute__((unused)) static void RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$15 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

__attribute__((unused)) static RxCompletable_$15 *new_RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$15 *create_RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$15)

@interface RxCompletable_$16 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  RxScheduler *val$scheduler_;
  jlong val$delay_;
  JavaUtilConcurrentTimeUnit *val$unit_;
  jboolean val$delayError_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0
                             withLong:(jlong)capture$1
       withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$2
                          withBoolean:(jboolean)capture$3;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$16)

J2OBJC_FIELD_SETTER(RxCompletable_$16, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$16, val$scheduler_, RxScheduler *)
J2OBJC_FIELD_SETTER(RxCompletable_$16, val$unit_, JavaUtilConcurrentTimeUnit *)

__attribute__((unused)) static void RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(RxCompletable_$16 *self, RxCompletable *outer$, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, jboolean capture$3);

__attribute__((unused)) static RxCompletable_$16 *new_RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(RxCompletable *outer$, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, jboolean capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$16 *create_RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(RxCompletable *outer$, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, jboolean capture$3);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$16)

@interface RxCompletable_$16_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$16 *this$0_;
  RxSubscriptionsCompositeSubscription *val$set_;
  RxScheduler_Worker *val$w_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$16:(RxCompletable_$16 *)outer$
 withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$0
                   withRxScheduler_Worker:(RxScheduler_Worker *)capture$1
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$16_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$16_$1, this$0_, RxCompletable_$16 *)
J2OBJC_FIELD_SETTER(RxCompletable_$16_$1, val$set_, RxSubscriptionsCompositeSubscription *)
J2OBJC_FIELD_SETTER(RxCompletable_$16_$1, val$w_, RxScheduler_Worker *)
J2OBJC_FIELD_SETTER(RxCompletable_$16_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(RxCompletable_$16_$1 *self, RxCompletable_$16 *outer$, RxSubscriptionsCompositeSubscription *capture$0, RxScheduler_Worker *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

__attribute__((unused)) static RxCompletable_$16_$1 *new_RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(RxCompletable_$16 *outer$, RxSubscriptionsCompositeSubscription *capture$0, RxScheduler_Worker *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$16_$1 *create_RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(RxCompletable_$16 *outer$, RxSubscriptionsCompositeSubscription *capture$0, RxScheduler_Worker *capture$1, id<RxCompletable_CompletableSubscriber> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$16_$1)

@interface RxCompletable_$16_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$16_$1 *this$0_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$16_$1:(RxCompletable_$16_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$16_$1_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$16_$1_$1, this$0_, RxCompletable_$16_$1 *)

__attribute__((unused)) static void RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(RxCompletable_$16_$1_$1 *self, RxCompletable_$16_$1 *outer$);

__attribute__((unused)) static RxCompletable_$16_$1_$1 *new_RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(RxCompletable_$16_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$16_$1_$1 *create_RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(RxCompletable_$16_$1 *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$16_$1_$1)

@interface RxCompletable_$16_$1_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$16_$1 *this$0_;
  NSException *val$e_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$16_$1:(RxCompletable_$16_$1 *)outer$
                             withNSException:(NSException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$16_$1_$2)

J2OBJC_FIELD_SETTER(RxCompletable_$16_$1_$2, this$0_, RxCompletable_$16_$1 *)
J2OBJC_FIELD_SETTER(RxCompletable_$16_$1_$2, val$e_, NSException *)

__attribute__((unused)) static void RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(RxCompletable_$16_$1_$2 *self, RxCompletable_$16_$1 *outer$, NSException *capture$0);

__attribute__((unused)) static RxCompletable_$16_$1_$2 *new_RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(RxCompletable_$16_$1 *outer$, NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$16_$1_$2 *create_RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(RxCompletable_$16_$1 *outer$, NSException *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$16_$1_$2)

@interface RxCompletable_$17 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  id<RxFunctionsAction0> val$onComplete_;
  id<RxFunctionsAction0> val$onAfterComplete_;
  id<RxFunctionsAction1> val$onError_;
  id<RxFunctionsAction1> val$onSubscribe_;
  id<RxFunctionsAction0> val$onUnsubscribe_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
               withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0
               withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$1
               withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2
               withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$3
               withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$4;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$17)

J2OBJC_FIELD_SETTER(RxCompletable_$17, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$17, val$onComplete_, id<RxFunctionsAction0>)
J2OBJC_FIELD_SETTER(RxCompletable_$17, val$onAfterComplete_, id<RxFunctionsAction0>)
J2OBJC_FIELD_SETTER(RxCompletable_$17, val$onError_, id<RxFunctionsAction1>)
J2OBJC_FIELD_SETTER(RxCompletable_$17, val$onSubscribe_, id<RxFunctionsAction1>)
J2OBJC_FIELD_SETTER(RxCompletable_$17, val$onUnsubscribe_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxCompletable_$17 *self, RxCompletable *outer$, id<RxFunctionsAction0> capture$0, id<RxFunctionsAction0> capture$1, id<RxFunctionsAction1> capture$2, id<RxFunctionsAction1> capture$3, id<RxFunctionsAction0> capture$4);

__attribute__((unused)) static RxCompletable_$17 *new_RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxCompletable *outer$, id<RxFunctionsAction0> capture$0, id<RxFunctionsAction0> capture$1, id<RxFunctionsAction1> capture$2, id<RxFunctionsAction1> capture$3, id<RxFunctionsAction0> capture$4) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$17 *create_RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxCompletable *outer$, id<RxFunctionsAction0> capture$0, id<RxFunctionsAction0> capture$1, id<RxFunctionsAction1> capture$2, id<RxFunctionsAction1> capture$3, id<RxFunctionsAction0> capture$4);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$17)

@interface RxCompletable_$17_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$17 *this$0_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$17:(RxCompletable_$17 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$17_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$17_$1, this$0_, RxCompletable_$17 *)
J2OBJC_FIELD_SETTER(RxCompletable_$17_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(RxCompletable_$17_$1 *self, RxCompletable_$17 *outer$, id<RxCompletable_CompletableSubscriber> capture$0);

__attribute__((unused)) static RxCompletable_$17_$1 *new_RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(RxCompletable_$17 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$17_$1 *create_RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(RxCompletable_$17 *outer$, id<RxCompletable_CompletableSubscriber> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$17_$1)

@interface RxCompletable_$17_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$17_$1 *this$0_;
  id<RxSubscription> val$d_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$17_$1:(RxCompletable_$17_$1 *)outer$
                          withRxSubscription:(id<RxSubscription>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$17_$1_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$17_$1_$1, this$0_, RxCompletable_$17_$1 *)
J2OBJC_FIELD_SETTER(RxCompletable_$17_$1_$1, val$d_, id<RxSubscription>)

__attribute__((unused)) static void RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(RxCompletable_$17_$1_$1 *self, RxCompletable_$17_$1 *outer$, id<RxSubscription> capture$0);

__attribute__((unused)) static RxCompletable_$17_$1_$1 *new_RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(RxCompletable_$17_$1 *outer$, id<RxSubscription> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$17_$1_$1 *create_RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(RxCompletable_$17_$1 *outer$, id<RxSubscription> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$17_$1_$1)

@interface RxCompletable_$18 : NSObject < RxFunctionsAction1 > {
 @public
  id<RxFunctionsAction0> val$onTerminate_;
}

- (void)callWithId:(NSException *)e;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$18)

J2OBJC_FIELD_SETTER(RxCompletable_$18, val$onTerminate_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxCompletable_$18_initWithRxFunctionsAction0_(RxCompletable_$18 *self, id<RxFunctionsAction0> capture$0);

__attribute__((unused)) static RxCompletable_$18 *new_RxCompletable_$18_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$18 *create_RxCompletable_$18_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$18)

@interface RxCompletable_$19 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  JavaUtilConcurrentCountDownLatch *val$cdl_;
  IOSObjectArray *val$err_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$19)

J2OBJC_FIELD_SETTER(RxCompletable_$19, val$cdl_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxCompletable_$19, val$err_, IOSObjectArray *)

__attribute__((unused)) static void RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$19 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

__attribute__((unused)) static RxCompletable_$19 *new_RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$19 *create_RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$19)

@interface RxCompletable_$20 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  JavaUtilConcurrentCountDownLatch *val$cdl_;
  IOSObjectArray *val$err_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$20)

J2OBJC_FIELD_SETTER(RxCompletable_$20, val$cdl_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxCompletable_$20, val$err_, IOSObjectArray *)

__attribute__((unused)) static void RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$20 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

__attribute__((unused)) static RxCompletable_$20 *new_RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$20 *create_RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$20)

@interface RxCompletable_$21 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  id<RxCompletable_CompletableOperator> val$onLift_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
withRxCompletable_CompletableOperator:(id<RxCompletable_CompletableOperator>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$21)

J2OBJC_FIELD_SETTER(RxCompletable_$21, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$21, val$onLift_, id<RxCompletable_CompletableOperator>)

__attribute__((unused)) static void RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(RxCompletable_$21 *self, RxCompletable *outer$, id<RxCompletable_CompletableOperator> capture$0);

__attribute__((unused)) static RxCompletable_$21 *new_RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(RxCompletable *outer$, id<RxCompletable_CompletableOperator> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$21 *create_RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(RxCompletable *outer$, id<RxCompletable_CompletableOperator> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$21)

@interface RxCompletable_$22 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  RxScheduler *val$scheduler_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$22)

J2OBJC_FIELD_SETTER(RxCompletable_$22, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$22, val$scheduler_, RxScheduler *)

__attribute__((unused)) static void RxCompletable_$22_initWithRxCompletable_withRxScheduler_(RxCompletable_$22 *self, RxCompletable *outer$, RxScheduler *capture$0);

__attribute__((unused)) static RxCompletable_$22 *new_RxCompletable_$22_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$22 *create_RxCompletable_$22_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$22)

@interface RxCompletable_$22_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxScheduler_Worker *val$w_;
  id<RxCompletable_CompletableSubscriber> val$s_;
  RxInternalUtilSubscriptionList *val$ad_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxScheduler_Worker:(RxScheduler_Worker *)capture$0
   withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$1
        withRxInternalUtilSubscriptionList:(RxInternalUtilSubscriptionList *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$22_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$22_$1, val$w_, RxScheduler_Worker *)
J2OBJC_FIELD_SETTER(RxCompletable_$22_$1, val$s_, id<RxCompletable_CompletableSubscriber>)
J2OBJC_FIELD_SETTER(RxCompletable_$22_$1, val$ad_, RxInternalUtilSubscriptionList *)

__attribute__((unused)) static void RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(RxCompletable_$22_$1 *self, RxScheduler_Worker *capture$0, id<RxCompletable_CompletableSubscriber> capture$1, RxInternalUtilSubscriptionList *capture$2);

__attribute__((unused)) static RxCompletable_$22_$1 *new_RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(RxScheduler_Worker *capture$0, id<RxCompletable_CompletableSubscriber> capture$1, RxInternalUtilSubscriptionList *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$22_$1 *create_RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(RxScheduler_Worker *capture$0, id<RxCompletable_CompletableSubscriber> capture$1, RxInternalUtilSubscriptionList *capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$22_$1)

@interface RxCompletable_$22_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$22_$1 *this$0_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$22_$1:(RxCompletable_$22_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$22_$1_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$22_$1_$1, this$0_, RxCompletable_$22_$1 *)

__attribute__((unused)) static void RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(RxCompletable_$22_$1_$1 *self, RxCompletable_$22_$1 *outer$);

__attribute__((unused)) static RxCompletable_$22_$1_$1 *new_RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(RxCompletable_$22_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$22_$1_$1 *create_RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(RxCompletable_$22_$1 *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$22_$1_$1)

@interface RxCompletable_$22_$1_$2 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$22_$1 *this$0_;
  NSException *val$e_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$22_$1:(RxCompletable_$22_$1 *)outer$
                             withNSException:(NSException *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$22_$1_$2)

J2OBJC_FIELD_SETTER(RxCompletable_$22_$1_$2, this$0_, RxCompletable_$22_$1 *)
J2OBJC_FIELD_SETTER(RxCompletable_$22_$1_$2, val$e_, NSException *)

__attribute__((unused)) static void RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(RxCompletable_$22_$1_$2 *self, RxCompletable_$22_$1 *outer$, NSException *capture$0);

__attribute__((unused)) static RxCompletable_$22_$1_$2 *new_RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(RxCompletable_$22_$1 *outer$, NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$22_$1_$2 *create_RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(RxCompletable_$22_$1 *outer$, NSException *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$22_$1_$2)

@interface RxCompletable_$23 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  id<RxFunctionsFunc1> val$predicate_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                 withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$23)

J2OBJC_FIELD_SETTER(RxCompletable_$23, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$23, val$predicate_, id<RxFunctionsFunc1>)

__attribute__((unused)) static void RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable_$23 *self, RxCompletable *outer$, id<RxFunctionsFunc1> capture$0);

__attribute__((unused)) static RxCompletable_$23 *new_RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$23 *create_RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$23)

@interface RxCompletable_$23_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$23 *this$0_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$23:(RxCompletable_$23 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$23_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$23_$1, this$0_, RxCompletable_$23 *)
J2OBJC_FIELD_SETTER(RxCompletable_$23_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(RxCompletable_$23_$1 *self, RxCompletable_$23 *outer$, id<RxCompletable_CompletableSubscriber> capture$0);

__attribute__((unused)) static RxCompletable_$23_$1 *new_RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(RxCompletable_$23 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$23_$1 *create_RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(RxCompletable_$23 *outer$, id<RxCompletable_CompletableSubscriber> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$23_$1)

@interface RxCompletable_$24 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  id<RxFunctionsFunc1> val$errorMapper_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                 withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$24)

J2OBJC_FIELD_SETTER(RxCompletable_$24, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$24, val$errorMapper_, id<RxFunctionsFunc1>)

__attribute__((unused)) static void RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable_$24 *self, RxCompletable *outer$, id<RxFunctionsFunc1> capture$0);

__attribute__((unused)) static RxCompletable_$24 *new_RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$24 *create_RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$24)

@interface RxCompletable_$24_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$24 *this$0_;
  id<RxCompletable_CompletableSubscriber> val$s_;
  RxSubscriptionsSerialSubscription *val$sd_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$24:(RxCompletable_$24 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0
    withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$24_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$24_$1, this$0_, RxCompletable_$24 *)
J2OBJC_FIELD_SETTER(RxCompletable_$24_$1, val$s_, id<RxCompletable_CompletableSubscriber>)
J2OBJC_FIELD_SETTER(RxCompletable_$24_$1, val$sd_, RxSubscriptionsSerialSubscription *)

__attribute__((unused)) static void RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(RxCompletable_$24_$1 *self, RxCompletable_$24 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxSubscriptionsSerialSubscription *capture$1);

__attribute__((unused)) static RxCompletable_$24_$1 *new_RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(RxCompletable_$24 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxSubscriptionsSerialSubscription *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$24_$1 *create_RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(RxCompletable_$24 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxSubscriptionsSerialSubscription *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$24_$1)

@interface RxCompletable_$24_$1_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$24_$1 *this$0_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$24_$1:(RxCompletable_$24_$1 *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$24_$1_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$24_$1_$1, this$0_, RxCompletable_$24_$1 *)

__attribute__((unused)) static void RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(RxCompletable_$24_$1_$1 *self, RxCompletable_$24_$1 *outer$);

__attribute__((unused)) static RxCompletable_$24_$1_$1 *new_RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(RxCompletable_$24_$1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$24_$1_$1 *create_RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(RxCompletable_$24_$1 *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$24_$1_$1)

@interface RxCompletable_$25 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxSubscriptionsMultipleAssignmentSubscription *val$mad_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxSubscriptionsMultipleAssignmentSubscription:(RxSubscriptionsMultipleAssignmentSubscription *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$25)

J2OBJC_FIELD_SETTER(RxCompletable_$25, val$mad_, RxSubscriptionsMultipleAssignmentSubscription *)

__attribute__((unused)) static void RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(RxCompletable_$25 *self, RxSubscriptionsMultipleAssignmentSubscription *capture$0);

__attribute__((unused)) static RxCompletable_$25 *new_RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(RxSubscriptionsMultipleAssignmentSubscription *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$25 *create_RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(RxSubscriptionsMultipleAssignmentSubscription *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$25)

@interface RxCompletable_$26 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  jboolean done_;
  id<RxFunctionsAction0> val$onComplete_;
  RxSubscriptionsMultipleAssignmentSubscription *val$mad_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0
withRxSubscriptionsMultipleAssignmentSubscription:(RxSubscriptionsMultipleAssignmentSubscription *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$26)

J2OBJC_FIELD_SETTER(RxCompletable_$26, val$onComplete_, id<RxFunctionsAction0>)
J2OBJC_FIELD_SETTER(RxCompletable_$26, val$mad_, RxSubscriptionsMultipleAssignmentSubscription *)

__attribute__((unused)) static void RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(RxCompletable_$26 *self, id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1);

__attribute__((unused)) static RxCompletable_$26 *new_RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$26 *create_RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$26)

@interface RxCompletable_$27 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  jboolean done_;
  id<RxFunctionsAction0> val$onComplete_;
  RxSubscriptionsMultipleAssignmentSubscription *val$mad_;
  id<RxFunctionsAction1> val$onError_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)callOnErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0
withRxSubscriptionsMultipleAssignmentSubscription:(RxSubscriptionsMultipleAssignmentSubscription *)capture$1
                    withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$27)

J2OBJC_FIELD_SETTER(RxCompletable_$27, val$onComplete_, id<RxFunctionsAction0>)
J2OBJC_FIELD_SETTER(RxCompletable_$27, val$mad_, RxSubscriptionsMultipleAssignmentSubscription *)
J2OBJC_FIELD_SETTER(RxCompletable_$27, val$onError_, id<RxFunctionsAction1>)

__attribute__((unused)) static void RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(RxCompletable_$27 *self, id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1, id<RxFunctionsAction1> capture$2);

__attribute__((unused)) static RxCompletable_$27 *new_RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1, id<RxFunctionsAction1> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$27 *create_RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1, id<RxFunctionsAction1> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$27)

@interface RxCompletable_$28 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxSubscriber *val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$28)

J2OBJC_FIELD_SETTER(RxCompletable_$28, val$s_, RxSubscriber *)

__attribute__((unused)) static void RxCompletable_$28_initWithRxSubscriber_(RxCompletable_$28 *self, RxSubscriber *capture$0);

__attribute__((unused)) static RxCompletable_$28 *new_RxCompletable_$28_initWithRxSubscriber_(RxSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$28 *create_RxCompletable_$28_initWithRxSubscriber_(RxSubscriber *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$28)

@interface RxCompletable_$29 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  RxScheduler *val$scheduler_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$29)

J2OBJC_FIELD_SETTER(RxCompletable_$29, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$29, val$scheduler_, RxScheduler *)

__attribute__((unused)) static void RxCompletable_$29_initWithRxCompletable_withRxScheduler_(RxCompletable_$29 *self, RxCompletable *outer$, RxScheduler *capture$0);

__attribute__((unused)) static RxCompletable_$29 *new_RxCompletable_$29_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$29 *create_RxCompletable_$29_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$29)

@interface RxCompletable_$29_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$29 *this$0_;
  id<RxCompletable_CompletableSubscriber> val$s_;
  RxScheduler_Worker *val$w_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$29:(RxCompletable_$29 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0
                   withRxScheduler_Worker:(RxScheduler_Worker *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$29_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$29_$1, this$0_, RxCompletable_$29 *)
J2OBJC_FIELD_SETTER(RxCompletable_$29_$1, val$s_, id<RxCompletable_CompletableSubscriber>)
J2OBJC_FIELD_SETTER(RxCompletable_$29_$1, val$w_, RxScheduler_Worker *)

__attribute__((unused)) static void RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$29_$1 *self, RxCompletable_$29 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1);

__attribute__((unused)) static RxCompletable_$29_$1 *new_RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$29 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$29_$1 *create_RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$29 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$29_$1)

@interface RxCompletable_$30 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxCompletable *this$0_;
}

- (void)callWithId:(RxSubscriber *)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$30)

J2OBJC_FIELD_SETTER(RxCompletable_$30, this$0_, RxCompletable *)

__attribute__((unused)) static void RxCompletable_$30_initWithRxCompletable_(RxCompletable_$30 *self, RxCompletable *outer$);

__attribute__((unused)) static RxCompletable_$30 *new_RxCompletable_$30_initWithRxCompletable_(RxCompletable *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$30 *create_RxCompletable_$30_initWithRxCompletable_(RxCompletable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$30)

@interface RxCompletable_$31 : NSObject < RxSingle_OnSubscribe > {
 @public
  RxCompletable *this$0_;
  id<RxFunctionsFunc0> val$completionValueFunc0_;
}

- (void)callWithId:(RxSingleSubscriber *)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                 withRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$31)

J2OBJC_FIELD_SETTER(RxCompletable_$31, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$31, val$completionValueFunc0_, id<RxFunctionsFunc0>)

__attribute__((unused)) static void RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(RxCompletable_$31 *self, RxCompletable *outer$, id<RxFunctionsFunc0> capture$0);

__attribute__((unused)) static RxCompletable_$31 *new_RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(RxCompletable *outer$, id<RxFunctionsFunc0> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$31 *create_RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(RxCompletable *outer$, id<RxFunctionsFunc0> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$31)

@interface RxCompletable_$31_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$31 *this$0_;
  RxSingleSubscriber *val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$31:(RxCompletable_$31 *)outer$
                   withRxSingleSubscriber:(RxSingleSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$31_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$31_$1, this$0_, RxCompletable_$31 *)
J2OBJC_FIELD_SETTER(RxCompletable_$31_$1, val$s_, RxSingleSubscriber *)

__attribute__((unused)) static void RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(RxCompletable_$31_$1 *self, RxCompletable_$31 *outer$, RxSingleSubscriber *capture$0);

__attribute__((unused)) static RxCompletable_$31_$1 *new_RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(RxCompletable_$31 *outer$, RxSingleSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$31_$1 *create_RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(RxCompletable_$31 *outer$, RxSingleSubscriber *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$31_$1)

@interface RxCompletable_$32 : NSObject < RxFunctionsFunc0 > {
 @public
  id val$completionValue_;
}

- (id)call;

- (instancetype)initWithId:(id)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$32)

J2OBJC_FIELD_SETTER(RxCompletable_$32, val$completionValue_, id)

__attribute__((unused)) static void RxCompletable_$32_initWithId_(RxCompletable_$32 *self, id capture$0);

__attribute__((unused)) static RxCompletable_$32 *new_RxCompletable_$32_initWithId_(id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$32 *create_RxCompletable_$32_initWithId_(id capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$32)

@interface RxCompletable_$33 : NSObject < RxCompletable_CompletableOnSubscribe > {
 @public
  RxCompletable *this$0_;
  RxScheduler *val$scheduler_;
}

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s;

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$33)

J2OBJC_FIELD_SETTER(RxCompletable_$33, this$0_, RxCompletable *)
J2OBJC_FIELD_SETTER(RxCompletable_$33, val$scheduler_, RxScheduler *)

__attribute__((unused)) static void RxCompletable_$33_initWithRxCompletable_withRxScheduler_(RxCompletable_$33 *self, RxCompletable *outer$, RxScheduler *capture$0);

__attribute__((unused)) static RxCompletable_$33 *new_RxCompletable_$33_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$33 *create_RxCompletable_$33_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$33)

@interface RxCompletable_$33_$1 : NSObject < RxCompletable_CompletableSubscriber > {
 @public
  RxCompletable_$33 *this$0_;
  id<RxCompletable_CompletableSubscriber> val$s_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d;

- (instancetype)initWithRxCompletable_$33:(RxCompletable_$33 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$33_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$33_$1, this$0_, RxCompletable_$33 *)
J2OBJC_FIELD_SETTER(RxCompletable_$33_$1, val$s_, id<RxCompletable_CompletableSubscriber>)

__attribute__((unused)) static void RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(RxCompletable_$33_$1 *self, RxCompletable_$33 *outer$, id<RxCompletable_CompletableSubscriber> capture$0);

__attribute__((unused)) static RxCompletable_$33_$1 *new_RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(RxCompletable_$33 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$33_$1 *create_RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(RxCompletable_$33 *outer$, id<RxCompletable_CompletableSubscriber> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$33_$1)

@interface RxCompletable_$33_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$33_$1 *this$0_;
  id<RxSubscription> val$d_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$33_$1:(RxCompletable_$33_$1 *)outer$
                          withRxSubscription:(id<RxSubscription>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$33_$1_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$33_$1_$1, this$0_, RxCompletable_$33_$1 *)
J2OBJC_FIELD_SETTER(RxCompletable_$33_$1_$1, val$d_, id<RxSubscription>)

__attribute__((unused)) static void RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(RxCompletable_$33_$1_$1 *self, RxCompletable_$33_$1 *outer$, id<RxSubscription> capture$0);

__attribute__((unused)) static RxCompletable_$33_$1_$1 *new_RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(RxCompletable_$33_$1 *outer$, id<RxSubscription> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$33_$1_$1 *create_RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(RxCompletable_$33_$1 *outer$, id<RxSubscription> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$33_$1_$1)

@interface RxCompletable_$33_$1_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxCompletable_$33_$1_$1 *this$0_;
  RxScheduler_Worker *val$w_;
}

- (void)call;

- (instancetype)initWithRxCompletable_$33_$1_$1:(RxCompletable_$33_$1_$1 *)outer$
                         withRxScheduler_Worker:(RxScheduler_Worker *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxCompletable_$33_$1_$1_$1)

J2OBJC_FIELD_SETTER(RxCompletable_$33_$1_$1_$1, this$0_, RxCompletable_$33_$1_$1 *)
J2OBJC_FIELD_SETTER(RxCompletable_$33_$1_$1_$1, val$w_, RxScheduler_Worker *)

__attribute__((unused)) static void RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(RxCompletable_$33_$1_$1_$1 *self, RxCompletable_$33_$1_$1 *outer$, RxScheduler_Worker *capture$0);

__attribute__((unused)) static RxCompletable_$33_$1_$1_$1 *new_RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(RxCompletable_$33_$1_$1 *outer$, RxScheduler_Worker *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxCompletable_$33_$1_$1_$1 *create_RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(RxCompletable_$33_$1_$1 *outer$, RxScheduler_Worker *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxCompletable_$33_$1_$1_$1)

J2OBJC_INITIALIZED_DEFN(RxCompletable)

RxPluginsRxJavaErrorHandler *RxCompletable_ERROR_HANDLER;
RxPluginsRxJavaCompletableExecutionHook *RxCompletable_HOOK;
RxCompletable *RxCompletable_COMPLETE;
RxCompletable *RxCompletable_NEVER;

@implementation RxCompletable

+ (RxPluginsRxJavaErrorHandler *)ERROR_HANDLER {
  return RxCompletable_ERROR_HANDLER;
}

+ (RxPluginsRxJavaCompletableExecutionHook *)HOOK {
  return RxCompletable_HOOK;
}

+ (void)setHOOK:(RxPluginsRxJavaCompletableExecutionHook *)value {
  RxCompletable_HOOK = value;
}

+ (RxCompletable *)COMPLETE {
  return RxCompletable_COMPLETE;
}

+ (RxCompletable *)NEVER {
  return RxCompletable_NEVER;
}

+ (RxCompletable *)ambWithRxCompletableArray:(IOSObjectArray *)sources {
  return RxCompletable_ambWithRxCompletableArray_(sources);
}

+ (RxCompletable *)ambWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxCompletable_ambWithJavaLangIterable_(sources);
}

+ (RxCompletable *)complete {
  return RxCompletable_complete();
}

+ (RxCompletable *)concatWithRxCompletableArray:(IOSObjectArray *)sources {
  return RxCompletable_concatWithRxCompletableArray_(sources);
}

+ (RxCompletable *)concatWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxCompletable_concatWithJavaLangIterable_(sources);
}

+ (RxCompletable *)concatWithRxObservable:(RxObservable *)sources {
  return RxCompletable_concatWithRxObservable_(sources);
}

+ (RxCompletable *)concatWithRxObservable:(RxObservable *)sources
                                  withInt:(jint)prefetch {
  return RxCompletable_concatWithRxObservable_withInt_(sources, prefetch);
}

+ (RxCompletable *)createWithRxCompletable_CompletableOnSubscribe:(id<RxCompletable_CompletableOnSubscribe>)onSubscribe {
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(onSubscribe);
}

+ (RxCompletable *)deferWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)completableFunc0 {
  return RxCompletable_deferWithRxFunctionsFunc0_(completableFunc0);
}

+ (RxCompletable *)errorWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)errorFunc0 {
  return RxCompletable_errorWithRxFunctionsFunc0_(errorFunc0);
}

+ (RxCompletable *)errorWithNSException:(NSException *)error {
  return RxCompletable_errorWithNSException_(error);
}

+ (RxCompletable *)fromActionWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  return RxCompletable_fromActionWithRxFunctionsAction0_(action);
}

+ (RxCompletable *)fromCallableWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable {
  return RxCompletable_fromCallableWithJavaUtilConcurrentCallable_(callable);
}

+ (RxCompletable *)fromFutureWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future {
  return RxCompletable_fromFutureWithJavaUtilConcurrentFuture_(future);
}

+ (RxCompletable *)fromObservableWithRxObservable:(RxObservable *)flowable {
  return RxCompletable_fromObservableWithRxObservable_(flowable);
}

+ (RxCompletable *)fromSingleWithRxSingle:(RxSingle *)single {
  return RxCompletable_fromSingleWithRxSingle_(single);
}

+ (RxCompletable *)mergeWithRxCompletableArray:(IOSObjectArray *)sources {
  return RxCompletable_mergeWithRxCompletableArray_(sources);
}

+ (RxCompletable *)mergeWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxCompletable_mergeWithJavaLangIterable_(sources);
}

+ (RxCompletable *)mergeWithRxObservable:(RxObservable *)sources {
  return RxCompletable_mergeWithRxObservable_(sources);
}

+ (RxCompletable *)mergeWithRxObservable:(RxObservable *)sources
                                 withInt:(jint)maxConcurrency {
  return RxCompletable_mergeWithRxObservable_withInt_(sources, maxConcurrency);
}

+ (RxCompletable *)merge0WithRxObservable:(RxObservable *)sources
                                  withInt:(jint)maxConcurrency
                              withBoolean:(jboolean)delayErrors {
  return RxCompletable_merge0WithRxObservable_withInt_withBoolean_(sources, maxConcurrency, delayErrors);
}

+ (RxCompletable *)mergeDelayErrorWithRxCompletableArray:(IOSObjectArray *)sources {
  return RxCompletable_mergeDelayErrorWithRxCompletableArray_(sources);
}

+ (RxCompletable *)mergeDelayErrorWithJavaLangIterable:(id<JavaLangIterable>)sources {
  return RxCompletable_mergeDelayErrorWithJavaLangIterable_(sources);
}

+ (RxCompletable *)mergeDelayErrorWithRxObservable:(RxObservable *)sources {
  return RxCompletable_mergeDelayErrorWithRxObservable_(sources);
}

+ (RxCompletable *)mergeDelayErrorWithRxObservable:(RxObservable *)sources
                                           withInt:(jint)maxConcurrency {
  return RxCompletable_mergeDelayErrorWithRxObservable_withInt_(sources, maxConcurrency);
}

+ (RxCompletable *)never {
  return RxCompletable_never();
}

+ (id)requireNonNullWithId:(id)o {
  return RxCompletable_requireNonNullWithId_(o);
}

+ (RxCompletable *)timerWithLong:(jlong)delay
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxCompletable_timerWithLong_withJavaUtilConcurrentTimeUnit_(delay, unit);
}

+ (RxCompletable *)timerWithLong:(jlong)delay
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxCompletable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(delay, unit, scheduler);
}

+ (JavaLangNullPointerException *)toNpeWithNSException:(NSException *)ex {
  return RxCompletable_toNpeWithNSException_(ex);
}

+ (RxCompletable *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFunc0
                          withRxFunctionsFunc1:(id<RxFunctionsFunc1>)completableFunc1
                        withRxFunctionsAction1:(id<RxFunctionsAction1>)disposer {
  return RxCompletable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(resourceFunc0, completableFunc1, disposer);
}

+ (RxCompletable *)using__WithRxFunctionsFunc0:(id<RxFunctionsFunc0>)resourceFunc0
                          withRxFunctionsFunc1:(id<RxFunctionsFunc1>)completableFunc1
                        withRxFunctionsAction1:(id<RxFunctionsAction1>)disposer
                                   withBoolean:(jboolean)eager {
  return RxCompletable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFunc0, completableFunc1, disposer, eager);
}

- (instancetype)initWithRxCompletable_CompletableOnSubscribe:(id<RxCompletable_CompletableOnSubscribe>)onSubscribe {
  RxCompletable_initWithRxCompletable_CompletableOnSubscribe_(self, onSubscribe);
  return self;
}

- (RxCompletable *)ambWithWithRxCompletable:(RxCompletable *)other {
  (void) RxCompletable_requireNonNullWithId_(other);
  return RxCompletable_ambWithRxCompletableArray_([IOSObjectArray newArrayWithObjects:(id[]){ self, other } count:2 type:RxCompletable_class_()]);
}

- (void)await {
  JavaUtilConcurrentCountDownLatch *cdl = new_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  IOSObjectArray *err = [IOSObjectArray newArrayWithLength:1 type:NSException_class_()];
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(cdl, err));
  if ([cdl getCount] == 0) {
    if (IOSObjectArray_Get(err, 0) != nil) {
      (void) RxExceptionsExceptions_propagateWithNSException_(IOSObjectArray_Get(err, 0));
    }
    return;
  }
  @try {
    [cdl await];
  }
  @catch (JavaLangInterruptedException *ex) {
    @throw RxExceptionsExceptions_propagateWithNSException_(ex);
  }
  if (IOSObjectArray_Get(err, 0) != nil) {
    (void) RxExceptionsExceptions_propagateWithNSException_(IOSObjectArray_Get(err, 0));
  }
}

- (jboolean)awaitWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  (void) RxCompletable_requireNonNullWithId_(unit);
  JavaUtilConcurrentCountDownLatch *cdl = new_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  IOSObjectArray *err = [IOSObjectArray newArrayWithLength:1 type:NSException_class_()];
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(cdl, err));
  if ([cdl getCount] == 0) {
    if (IOSObjectArray_Get(err, 0) != nil) {
      (void) RxExceptionsExceptions_propagateWithNSException_(IOSObjectArray_Get(err, 0));
    }
    return true;
  }
  jboolean b;
  @try {
    b = [cdl awaitWithLong:timeout withJavaUtilConcurrentTimeUnit:unit];
  }
  @catch (JavaLangInterruptedException *ex) {
    @throw RxExceptionsExceptions_propagateWithNSException_(ex);
  }
  if (b) {
    if (IOSObjectArray_Get(err, 0) != nil) {
      (void) RxExceptionsExceptions_propagateWithNSException_(IOSObjectArray_Get(err, 0));
    }
  }
  return b;
}

- (RxCompletable *)composeWithRxCompletable_CompletableTransformer:(id<RxCompletable_CompletableTransformer>)transformer {
  return RxCompletable_toWithRxFunctionsFunc1_(self, transformer);
}

- (RxObservable *)andThenWithRxObservable:(RxObservable *)next {
  return RxCompletable_andThenWithRxObservable_(self, next);
}

- (RxSingle *)andThenWithRxSingle:(RxSingle *)next {
  (void) RxCompletable_requireNonNullWithId_(next);
  return [((RxSingle *) nil_chk(next)) delaySubscriptionWithRxObservable:RxCompletable_toObservable(self)];
}

- (RxCompletable *)andThenWithRxCompletable:(RxCompletable *)next {
  return RxCompletable_andThenWithRxCompletable_(self, next);
}

- (RxCompletable *)concatWithWithRxCompletable:(RxCompletable *)other {
  return RxCompletable_concatWithWithRxCompletable_(self, other);
}

- (RxCompletable *)delayWithLong:(jlong)delay
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxCompletable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withBoolean_(self, delay, unit, RxSchedulersSchedulers_computation(), false);
}

- (RxCompletable *)delayWithLong:(jlong)delay
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler {
  return RxCompletable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withBoolean_(self, delay, unit, scheduler, false);
}

- (RxCompletable *)delayWithLong:(jlong)delay
  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxScheduler:(RxScheduler *)scheduler
                     withBoolean:(jboolean)delayError {
  return RxCompletable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withBoolean_(self, delay, unit, scheduler, delayError);
}

- (RxCompletable *)doOnCompleteWithRxFunctionsAction0:(id<RxFunctionsAction0>)onComplete {
  return RxCompletable_doOnCompletedWithRxFunctionsAction0_(self, onComplete);
}

- (RxCompletable *)doOnCompletedWithRxFunctionsAction0:(id<RxFunctionsAction0>)onCompleted {
  return RxCompletable_doOnCompletedWithRxFunctionsAction0_(self, onCompleted);
}

- (RxCompletable *)doOnUnsubscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)onUnsubscribe {
  return RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(self, RxFunctionsActions_empty(), RxFunctionsActions_empty(), RxFunctionsActions_empty(), RxFunctionsActions_empty(), onUnsubscribe);
}

- (RxCompletable *)doOnErrorWithRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  return RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(self, RxFunctionsActions_empty(), onError, RxFunctionsActions_empty(), RxFunctionsActions_empty(), RxFunctionsActions_empty());
}

- (RxCompletable *)doOnLifecycleWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSubscribe
                                withRxFunctionsAction1:(id<RxFunctionsAction1>)onError
                                withRxFunctionsAction0:(id<RxFunctionsAction0>)onComplete
                                withRxFunctionsAction0:(id<RxFunctionsAction0>)onAfterComplete
                                withRxFunctionsAction0:(id<RxFunctionsAction0>)onUnsubscribe {
  return RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(self, onSubscribe, onError, onComplete, onAfterComplete, onUnsubscribe);
}

- (RxCompletable *)doOnSubscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onSubscribe {
  return RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(self, onSubscribe, RxFunctionsActions_empty(), RxFunctionsActions_empty(), RxFunctionsActions_empty(), RxFunctionsActions_empty());
}

- (RxCompletable *)doOnTerminateWithRxFunctionsAction0:(id<RxFunctionsAction0>)onTerminate {
  return RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(self, RxFunctionsActions_empty(), new_RxCompletable_$18_initWithRxFunctionsAction0_(onTerminate), onTerminate, RxFunctionsActions_empty(), RxFunctionsActions_empty());
}

- (RxCompletable *)endWithWithRxCompletable:(RxCompletable *)other {
  return RxCompletable_andThenWithRxCompletable_(self, other);
}

- (RxObservable *)endWithWithRxObservable:(RxObservable *)next {
  return RxCompletable_andThenWithRxObservable_(self, next);
}

- (RxCompletable *)doAfterTerminateWithRxFunctionsAction0:(id<RxFunctionsAction0>)onAfterComplete {
  return RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(self, RxFunctionsActions_empty(), RxFunctionsActions_empty(), RxFunctionsActions_empty(), onAfterComplete, RxFunctionsActions_empty());
}

- (NSException *)get {
  JavaUtilConcurrentCountDownLatch *cdl = new_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  IOSObjectArray *err = [IOSObjectArray newArrayWithLength:1 type:NSException_class_()];
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(cdl, err));
  if ([cdl getCount] == 0) {
    return IOSObjectArray_Get(err, 0);
  }
  @try {
    [cdl await];
  }
  @catch (JavaLangInterruptedException *ex) {
    @throw RxExceptionsExceptions_propagateWithNSException_(ex);
  }
  return IOSObjectArray_Get(err, 0);
}

- (NSException *)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  (void) RxCompletable_requireNonNullWithId_(unit);
  JavaUtilConcurrentCountDownLatch *cdl = new_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  IOSObjectArray *err = [IOSObjectArray newArrayWithLength:1 type:NSException_class_()];
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(cdl, err));
  if ([cdl getCount] == 0) {
    return IOSObjectArray_Get(err, 0);
  }
  jboolean b;
  @try {
    b = [cdl awaitWithLong:timeout withJavaUtilConcurrentTimeUnit:unit];
  }
  @catch (JavaLangInterruptedException *ex) {
    @throw RxExceptionsExceptions_propagateWithNSException_(ex);
  }
  if (b) {
    return IOSObjectArray_Get(err, 0);
  }
  (void) RxExceptionsExceptions_propagateWithNSException_(new_JavaUtilConcurrentTimeoutException_init());
  return nil;
}

- (RxCompletable *)liftWithRxCompletable_CompletableOperator:(id<RxCompletable_CompletableOperator>)onLift {
  (void) RxCompletable_requireNonNullWithId_(onLift);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(self, onLift));
}

- (RxCompletable *)mergeWithWithRxCompletable:(RxCompletable *)other {
  (void) RxCompletable_requireNonNullWithId_(other);
  return RxCompletable_mergeWithRxCompletableArray_([IOSObjectArray newArrayWithObjects:(id[]){ self, other } count:2 type:RxCompletable_class_()]);
}

- (RxCompletable *)observeOnWithRxScheduler:(RxScheduler *)scheduler {
  (void) RxCompletable_requireNonNullWithId_(scheduler);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$22_initWithRxCompletable_withRxScheduler_(self, scheduler));
}

- (RxCompletable *)onErrorComplete {
  return RxCompletable_onErrorCompleteWithRxFunctionsFunc1_(self, RxInternalUtilUtilityFunctions_alwaysTrue());
}

- (RxCompletable *)onErrorCompleteWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxCompletable_onErrorCompleteWithRxFunctionsFunc1_(self, predicate);
}

- (RxCompletable *)onErrorResumeNextWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)errorMapper {
  (void) RxCompletable_requireNonNullWithId_(errorMapper);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(self, errorMapper));
}

- (RxCompletable *)repeat {
  return RxCompletable_fromObservableWithRxObservable_([((RxObservable *) nil_chk(RxCompletable_toObservable(self))) repeat]);
}

- (RxCompletable *)repeatWithLong:(jlong)times {
  return RxCompletable_fromObservableWithRxObservable_([((RxObservable *) nil_chk(RxCompletable_toObservable(self))) repeatWithLong:times]);
}

- (RxCompletable *)repeatWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)handler {
  (void) RxCompletable_requireNonNullWithId_(handler);
  return RxCompletable_fromObservableWithRxObservable_([((RxObservable *) nil_chk(RxCompletable_toObservable(self))) repeatWhenWithRxFunctionsFunc1:handler]);
}

- (RxCompletable *)retry {
  return RxCompletable_fromObservableWithRxObservable_([((RxObservable *) nil_chk(RxCompletable_toObservable(self))) retry]);
}

- (RxCompletable *)retryWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate {
  return RxCompletable_fromObservableWithRxObservable_([((RxObservable *) nil_chk(RxCompletable_toObservable(self))) retryWithRxFunctionsFunc2:predicate]);
}

- (RxCompletable *)retryWithLong:(jlong)times {
  return RxCompletable_fromObservableWithRxObservable_([((RxObservable *) nil_chk(RxCompletable_toObservable(self))) retryWithLong:times]);
}

- (RxCompletable *)retryWhenWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)handler {
  return RxCompletable_fromObservableWithRxObservable_([((RxObservable *) nil_chk(RxCompletable_toObservable(self))) retryWhenWithRxFunctionsFunc1:handler]);
}

- (RxCompletable *)startWithWithRxCompletable:(RxCompletable *)other {
  (void) RxCompletable_requireNonNullWithId_(other);
  return RxCompletable_concatWithRxCompletableArray_([IOSObjectArray newArrayWithObjects:(id[]){ other, self } count:2 type:RxCompletable_class_()]);
}

- (RxObservable *)startWithWithRxObservable:(RxObservable *)other {
  (void) RxCompletable_requireNonNullWithId_(other);
  return [((RxObservable *) nil_chk(RxCompletable_toObservable(self))) startWithWithRxObservable:other];
}

- (id<RxSubscription>)subscribe {
  RxSubscriptionsMultipleAssignmentSubscription *mad = new_RxSubscriptionsMultipleAssignmentSubscription_init();
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(mad));
  return mad;
}

- (id<RxSubscription>)subscribeWithRxFunctionsAction0:(id<RxFunctionsAction0>)onComplete {
  (void) RxCompletable_requireNonNullWithId_(onComplete);
  RxSubscriptionsMultipleAssignmentSubscription *mad = new_RxSubscriptionsMultipleAssignmentSubscription_init();
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(onComplete, mad));
  return mad;
}

- (id<RxSubscription>)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onError
                               withRxFunctionsAction0:(id<RxFunctionsAction0>)onComplete {
  (void) RxCompletable_requireNonNullWithId_(onError);
  (void) RxCompletable_requireNonNullWithId_(onComplete);
  RxSubscriptionsMultipleAssignmentSubscription *mad = new_RxSubscriptionsMultipleAssignmentSubscription_init();
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(onComplete, mad, onError));
  return mad;
}

+ (void)deliverUncaughtExceptionWithNSException:(NSException *)e {
  RxCompletable_deliverUncaughtExceptionWithNSException_(e);
}

- (void)unsafeSubscribeWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)s {
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, s);
}

- (void)subscribeWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)s {
  if (!([s isKindOfClass:[RxObserversSafeCompletableSubscriber class]])) {
    s = new_RxObserversSafeCompletableSubscriber_initWithRxCompletable_CompletableSubscriber_(s);
  }
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, s);
}

- (void)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)s {
  RxCompletable_unsafeSubscribeWithRxSubscriber_(self, s);
}

- (void)unsafeSubscribeWithRxSubscriber:(RxSubscriber *)s
                            withBoolean:(jboolean)callOnStart {
  RxCompletable_unsafeSubscribeWithRxSubscriber_withBoolean_(self, s, callOnStart);
}

- (void)subscribeWithRxSubscriber:(RxSubscriber *)s {
  [((RxSubscriber *) nil_chk(s)) onStart];
  if (!([s isKindOfClass:[RxObserversSafeSubscriber class]])) {
    s = new_RxObserversSafeSubscriber_initWithRxSubscriber_(s);
  }
  RxCompletable_unsafeSubscribeWithRxSubscriber_withBoolean_(self, s, false);
}

- (RxCompletable *)subscribeOnWithRxScheduler:(RxScheduler *)scheduler {
  (void) RxCompletable_requireNonNullWithId_(scheduler);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$29_initWithRxCompletable_withRxScheduler_(self, scheduler));
}

- (RxCompletable *)timeoutWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  return RxCompletable_timeout0WithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(self, timeout, unit, RxSchedulersSchedulers_computation(), nil);
}

- (RxCompletable *)timeoutWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                 withRxCompletable:(RxCompletable *)other {
  (void) RxCompletable_requireNonNullWithId_(other);
  return RxCompletable_timeout0WithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(self, timeout, unit, RxSchedulersSchedulers_computation(), other);
}

- (RxCompletable *)timeoutWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withRxScheduler:(RxScheduler *)scheduler {
  return RxCompletable_timeout0WithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(self, timeout, unit, scheduler, nil);
}

- (RxCompletable *)timeoutWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                   withRxScheduler:(RxScheduler *)scheduler
                 withRxCompletable:(RxCompletable *)other {
  (void) RxCompletable_requireNonNullWithId_(other);
  return RxCompletable_timeout0WithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(self, timeout, unit, scheduler, other);
}

- (RxCompletable *)timeout0WithLong:(jlong)timeout
     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                    withRxScheduler:(RxScheduler *)scheduler
                  withRxCompletable:(RxCompletable *)other {
  return RxCompletable_timeout0WithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(self, timeout, unit, scheduler, other);
}

- (id)toWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)converter {
  return RxCompletable_toWithRxFunctionsFunc1_(self, converter);
}

- (RxObservable *)toObservable {
  return RxCompletable_toObservable(self);
}

- (RxSingle *)toSingleWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)completionValueFunc0 {
  return RxCompletable_toSingleWithRxFunctionsFunc0_(self, completionValueFunc0);
}

- (RxSingle *)toSingleDefaultWithId:(id)completionValue {
  (void) RxCompletable_requireNonNullWithId_(completionValue);
  return RxCompletable_toSingleWithRxFunctionsFunc0_(self, new_RxCompletable_$32_initWithId_(completionValue));
}

- (RxCompletable *)unsubscribeOnWithRxScheduler:(RxScheduler *)scheduler {
  (void) RxCompletable_requireNonNullWithId_(scheduler);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$33_initWithRxCompletable_withRxScheduler_(self, scheduler));
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "ambWithRxCompletableArray:", "LRxCompletable;", 0x89, 0, 1, -1, -1, -1, -1 },
    { "ambWithJavaLangIterable:", "LRxCompletable;", 0x9, 0, 2, -1, 3, -1, -1 },
    { "complete", "LRxCompletable;", 0x9, -1, -1, -1, -1, -1, -1 },
    { "concatWithRxCompletableArray:", "LRxCompletable;", 0x89, 4, 1, -1, -1, -1, -1 },
    { "concatWithJavaLangIterable:", "LRxCompletable;", 0x9, 4, 2, -1, 3, -1, -1 },
    { "concatWithRxObservable:", "LRxCompletable;", 0x9, 4, 5, -1, 6, -1, -1 },
    { "concatWithRxObservable:withInt:", "LRxCompletable;", 0x9, 4, 7, -1, 8, -1, -1 },
    { "createWithRxCompletable_CompletableOnSubscribe:", "LRxCompletable;", 0x9, 9, 10, -1, -1, -1, -1 },
    { "deferWithRxFunctionsFunc0:", "LRxCompletable;", 0x9, 11, 12, -1, 13, -1, -1 },
    { "errorWithRxFunctionsFunc0:", "LRxCompletable;", 0x9, 14, 12, -1, 15, -1, -1 },
    { "errorWithNSException:", "LRxCompletable;", 0x9, 14, 16, -1, -1, -1, -1 },
    { "fromActionWithRxFunctionsAction0:", "LRxCompletable;", 0x9, 17, 18, -1, -1, -1, -1 },
    { "fromCallableWithJavaUtilConcurrentCallable:", "LRxCompletable;", 0x9, 19, 20, -1, 21, -1, -1 },
    { "fromFutureWithJavaUtilConcurrentFuture:", "LRxCompletable;", 0x9, 22, 23, -1, 24, -1, -1 },
    { "fromObservableWithRxObservable:", "LRxCompletable;", 0x9, 25, 5, -1, 26, -1, -1 },
    { "fromSingleWithRxSingle:", "LRxCompletable;", 0x9, 27, 28, -1, 29, -1, -1 },
    { "mergeWithRxCompletableArray:", "LRxCompletable;", 0x89, 30, 1, -1, -1, -1, -1 },
    { "mergeWithJavaLangIterable:", "LRxCompletable;", 0x9, 30, 2, -1, 3, -1, -1 },
    { "mergeWithRxObservable:", "LRxCompletable;", 0x9, 30, 5, -1, 6, -1, -1 },
    { "mergeWithRxObservable:withInt:", "LRxCompletable;", 0x9, 30, 7, -1, 8, -1, -1 },
    { "merge0WithRxObservable:withInt:withBoolean:", "LRxCompletable;", 0xc, 31, 32, -1, 33, -1, -1 },
    { "mergeDelayErrorWithRxCompletableArray:", "LRxCompletable;", 0x89, 34, 1, -1, -1, -1, -1 },
    { "mergeDelayErrorWithJavaLangIterable:", "LRxCompletable;", 0x9, 34, 2, -1, 3, -1, -1 },
    { "mergeDelayErrorWithRxObservable:", "LRxCompletable;", 0x9, 34, 5, -1, 6, -1, -1 },
    { "mergeDelayErrorWithRxObservable:withInt:", "LRxCompletable;", 0x9, 34, 7, -1, 8, -1, -1 },
    { "never", "LRxCompletable;", 0x9, -1, -1, -1, -1, -1, -1 },
    { "requireNonNullWithId:", "LNSObject;", 0x8, 35, 36, -1, 37, -1, -1 },
    { "timerWithLong:withJavaUtilConcurrentTimeUnit:", "LRxCompletable;", 0x9, 38, 39, -1, -1, -1, -1 },
    { "timerWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:", "LRxCompletable;", 0x9, 38, 40, -1, -1, -1, -1 },
    { "toNpeWithNSException:", "LJavaLangNullPointerException;", 0x8, 41, 16, -1, -1, -1, -1 },
    { "using__WithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:", "LRxCompletable;", 0x9, 42, 43, -1, 44, -1, -1 },
    { "using__WithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:withBoolean:", "LRxCompletable;", 0x9, 42, 45, -1, 46, -1, -1 },
    { "initWithRxCompletable_CompletableOnSubscribe:", NULL, 0x4, -1, 10, -1, -1, -1, -1 },
    { "ambWithWithRxCompletable:", "LRxCompletable;", 0x11, 47, 48, -1, -1, -1, -1 },
    { "await", "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { "awaitWithLong:withJavaUtilConcurrentTimeUnit:", "Z", 0x11, 49, 39, -1, -1, -1, -1 },
    { "composeWithRxCompletable_CompletableTransformer:", "LRxCompletable;", 0x11, 50, 51, -1, -1, -1, -1 },
    { "andThenWithRxObservable:", "LRxObservable;", 0x11, 52, 5, -1, 53, -1, -1 },
    { "andThenWithRxSingle:", "LRxSingle;", 0x11, 52, 28, -1, 54, -1, -1 },
    { "andThenWithRxCompletable:", "LRxCompletable;", 0x11, 52, 48, -1, -1, -1, -1 },
    { "concatWithWithRxCompletable:", "LRxCompletable;", 0x11, 55, 48, -1, -1, -1, -1 },
    { "delayWithLong:withJavaUtilConcurrentTimeUnit:", "LRxCompletable;", 0x11, 56, 39, -1, -1, -1, -1 },
    { "delayWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:", "LRxCompletable;", 0x11, 56, 40, -1, -1, -1, -1 },
    { "delayWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:withBoolean:", "LRxCompletable;", 0x11, 56, 57, -1, -1, -1, -1 },
    { "doOnCompleteWithRxFunctionsAction0:", "LRxCompletable;", 0x11, 58, 18, -1, -1, 59, -1 },
    { "doOnCompletedWithRxFunctionsAction0:", "LRxCompletable;", 0x11, 60, 18, -1, -1, -1, -1 },
    { "doOnUnsubscribeWithRxFunctionsAction0:", "LRxCompletable;", 0x11, 61, 18, -1, -1, -1, -1 },
    { "doOnErrorWithRxFunctionsAction1:", "LRxCompletable;", 0x11, 62, 63, -1, 64, -1, -1 },
    { "doOnLifecycleWithRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:withRxFunctionsAction0:withRxFunctionsAction0:", "LRxCompletable;", 0x14, 65, 66, -1, 67, -1, -1 },
    { "doOnSubscribeWithRxFunctionsAction1:", "LRxCompletable;", 0x11, 68, 63, -1, 69, -1, -1 },
    { "doOnTerminateWithRxFunctionsAction0:", "LRxCompletable;", 0x11, 70, 18, -1, -1, -1, -1 },
    { "endWithWithRxCompletable:", "LRxCompletable;", 0x11, 71, 48, -1, -1, 72, -1 },
    { "endWithWithRxObservable:", "LRxObservable;", 0x11, 71, 5, -1, 53, 73, -1 },
    { "doAfterTerminateWithRxFunctionsAction0:", "LRxCompletable;", 0x11, 74, 18, -1, -1, -1, -1 },
    { "get", "LNSException;", 0x11, -1, -1, -1, -1, -1, -1 },
    { "getWithLong:withJavaUtilConcurrentTimeUnit:", "LNSException;", 0x11, 75, 39, -1, -1, -1, -1 },
    { "liftWithRxCompletable_CompletableOperator:", "LRxCompletable;", 0x11, 76, 77, -1, -1, -1, -1 },
    { "mergeWithWithRxCompletable:", "LRxCompletable;", 0x11, 78, 48, -1, -1, -1, -1 },
    { "observeOnWithRxScheduler:", "LRxCompletable;", 0x11, 79, 80, -1, -1, -1, -1 },
    { "onErrorComplete", "LRxCompletable;", 0x11, -1, -1, -1, -1, -1, -1 },
    { "onErrorCompleteWithRxFunctionsFunc1:", "LRxCompletable;", 0x11, 81, 82, -1, 83, -1, -1 },
    { "onErrorResumeNextWithRxFunctionsFunc1:", "LRxCompletable;", 0x11, 84, 82, -1, 85, -1, -1 },
    { "repeat", "LRxCompletable;", 0x11, -1, -1, -1, -1, -1, -1 },
    { "repeatWithLong:", "LRxCompletable;", 0x11, 86, 87, -1, -1, -1, -1 },
    { "repeatWhenWithRxFunctionsFunc1:", "LRxCompletable;", 0x11, 88, 82, -1, 89, -1, -1 },
    { "retry", "LRxCompletable;", 0x11, -1, -1, -1, -1, -1, -1 },
    { "retryWithRxFunctionsFunc2:", "LRxCompletable;", 0x11, 90, 91, -1, 92, -1, -1 },
    { "retryWithLong:", "LRxCompletable;", 0x11, 90, 87, -1, -1, -1, -1 },
    { "retryWhenWithRxFunctionsFunc1:", "LRxCompletable;", 0x11, 93, 82, -1, 94, -1, -1 },
    { "startWithWithRxCompletable:", "LRxCompletable;", 0x11, 95, 48, -1, -1, -1, -1 },
    { "startWithWithRxObservable:", "LRxObservable;", 0x11, 95, 5, -1, 53, -1, -1 },
    { "subscribe", "LRxSubscription;", 0x11, -1, -1, -1, -1, -1, -1 },
    { "subscribeWithRxFunctionsAction0:", "LRxSubscription;", 0x11, 96, 18, -1, -1, -1, -1 },
    { "subscribeWithRxFunctionsAction1:withRxFunctionsAction0:", "LRxSubscription;", 0x11, 96, 97, -1, 98, -1, -1 },
    { "deliverUncaughtExceptionWithNSException:", "V", 0xa, 99, 16, -1, -1, -1, -1 },
    { "unsafeSubscribeWithRxCompletable_CompletableSubscriber:", "V", 0x11, 100, 101, -1, -1, -1, -1 },
    { "subscribeWithRxCompletable_CompletableSubscriber:", "V", 0x11, 96, 101, -1, -1, -1, -1 },
    { "unsafeSubscribeWithRxSubscriber:", "V", 0x11, 100, 102, -1, 103, -1, -1 },
    { "unsafeSubscribeWithRxSubscriber:withBoolean:", "V", 0x12, 100, 104, -1, 105, -1, -1 },
    { "subscribeWithRxSubscriber:", "V", 0x11, 96, 102, -1, 103, -1, -1 },
    { "subscribeOnWithRxScheduler:", "LRxCompletable;", 0x11, 106, 80, -1, -1, -1, -1 },
    { "timeoutWithLong:withJavaUtilConcurrentTimeUnit:", "LRxCompletable;", 0x11, 107, 39, -1, -1, -1, -1 },
    { "timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxCompletable:", "LRxCompletable;", 0x11, 107, 108, -1, -1, -1, -1 },
    { "timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:", "LRxCompletable;", 0x11, 107, 40, -1, -1, -1, -1 },
    { "timeoutWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:withRxCompletable:", "LRxCompletable;", 0x11, 107, 109, -1, -1, -1, -1 },
    { "timeout0WithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:withRxCompletable:", "LRxCompletable;", 0x11, 110, 109, -1, -1, -1, -1 },
    { "toWithRxFunctionsFunc1:", "LNSObject;", 0x11, 111, 82, -1, 112, -1, -1 },
    { "toObservable", "LRxObservable;", 0x11, -1, -1, -1, 113, -1, -1 },
    { "toSingleWithRxFunctionsFunc0:", "LRxSingle;", 0x11, 114, 12, -1, 115, -1, -1 },
    { "toSingleDefaultWithId:", "LRxSingle;", 0x11, 116, 36, -1, 117, -1, -1 },
    { "unsubscribeOnWithRxScheduler:", "LRxCompletable;", 0x11, 118, 80, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ERROR_HANDLER", "LRxPluginsRxJavaErrorHandler;", .constantValue.asLong = 0, 0x18, -1, 119, -1, -1 },
    { "HOOK", "LRxPluginsRxJavaCompletableExecutionHook;", .constantValue.asLong = 0, 0x8, -1, 120, -1, -1 },
    { "COMPLETE", "LRxCompletable;", .constantValue.asLong = 0, 0x18, -1, 121, -1, -1 },
    { "NEVER", "LRxCompletable;", .constantValue.asLong = 0, 0x18, -1, 122, -1, -1 },
    { "onSubscribe_", "LRxCompletable_CompletableOnSubscribe;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "amb", "[LRxCompletable;", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Lrx/Completable;>;)Lrx/Completable;", "concat", "LRxObservable;", "(Lrx/Observable<+Lrx/Completable;>;)Lrx/Completable;", "LRxObservable;I", "(Lrx/Observable<+Lrx/Completable;>;I)Lrx/Completable;", "create", "LRxCompletable_CompletableOnSubscribe;", "defer", "LRxFunctionsFunc0;", "(Lrx/functions/Func0<+Lrx/Completable;>;)Lrx/Completable;", "error", "(Lrx/functions/Func0<+Ljava/lang/Throwable;>;)Lrx/Completable;", "LNSException;", "fromAction", "LRxFunctionsAction0;", "fromCallable", "LJavaUtilConcurrentCallable;", "(Ljava/util/concurrent/Callable<*>;)Lrx/Completable;", "fromFuture", "LJavaUtilConcurrentFuture;", "(Ljava/util/concurrent/Future<*>;)Lrx/Completable;", "fromObservable", "(Lrx/Observable<*>;)Lrx/Completable;", "fromSingle", "LRxSingle;", "(Lrx/Single<*>;)Lrx/Completable;", "merge", "merge0", "LRxObservable;IZ", "(Lrx/Observable<+Lrx/Completable;>;IZ)Lrx/Completable;", "mergeDelayError", "requireNonNull", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)TT;", "timer", "JLJavaUtilConcurrentTimeUnit;", "JLJavaUtilConcurrentTimeUnit;LRxScheduler;", "toNpe", "using", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;", "<R:Ljava/lang/Object;>(Lrx/functions/Func0<TR;>;Lrx/functions/Func1<-TR;+Lrx/Completable;>;Lrx/functions/Action1<-TR;>;)Lrx/Completable;", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;Z", "<R:Ljava/lang/Object;>(Lrx/functions/Func0<TR;>;Lrx/functions/Func1<-TR;+Lrx/Completable;>;Lrx/functions/Action1<-TR;>;Z)Lrx/Completable;", "ambWith", "LRxCompletable;", "await", "compose", "LRxCompletable_CompletableTransformer;", "andThen", "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;)Lrx/Observable<TT;>;", "<T:Ljava/lang/Object;>(Lrx/Single<TT;>;)Lrx/Single<TT;>;", "concatWith", "delay", "JLJavaUtilConcurrentTimeUnit;LRxScheduler;Z", "doOnComplete", (void *)&RxCompletable__Annotations$0, "doOnCompleted", "doOnUnsubscribe", "doOnError", "LRxFunctionsAction1;", "(Lrx/functions/Action1<-Ljava/lang/Throwable;>;)Lrx/Completable;", "doOnLifecycle", "LRxFunctionsAction1;LRxFunctionsAction1;LRxFunctionsAction0;LRxFunctionsAction0;LRxFunctionsAction0;", "(Lrx/functions/Action1<-Lrx/Subscription;>;Lrx/functions/Action1<-Ljava/lang/Throwable;>;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action0;)Lrx/Completable;", "doOnSubscribe", "(Lrx/functions/Action1<-Lrx/Subscription;>;)Lrx/Completable;", "doOnTerminate", "endWith", (void *)&RxCompletable__Annotations$1, (void *)&RxCompletable__Annotations$2, "doAfterTerminate", "get", "lift", "LRxCompletable_CompletableOperator;", "mergeWith", "observeOn", "LRxScheduler;", "onErrorComplete", "LRxFunctionsFunc1;", "(Lrx/functions/Func1<-Ljava/lang/Throwable;Ljava/lang/Boolean;>;)Lrx/Completable;", "onErrorResumeNext", "(Lrx/functions/Func1<-Ljava/lang/Throwable;+Lrx/Completable;>;)Lrx/Completable;", "repeat", "J", "repeatWhen", "(Lrx/functions/Func1<+Lrx/Observable<+Ljava/lang/Void;>;+Lrx/Observable<*>;>;)Lrx/Completable;", "retry", "LRxFunctionsFunc2;", "(Lrx/functions/Func2<Ljava/lang/Integer;Ljava/lang/Throwable;Ljava/lang/Boolean;>;)Lrx/Completable;", "retryWhen", "(Lrx/functions/Func1<+Lrx/Observable<+Ljava/lang/Throwable;>;+Lrx/Observable<*>;>;)Lrx/Completable;", "startWith", "subscribe", "LRxFunctionsAction1;LRxFunctionsAction0;", "(Lrx/functions/Action1<-Ljava/lang/Throwable;>;Lrx/functions/Action0;)Lrx/Subscription;", "deliverUncaughtException", "unsafeSubscribe", "LRxCompletable_CompletableSubscriber;", "LRxSubscriber;", "<T:Ljava/lang/Object;>(Lrx/Subscriber<TT;>;)V", "LRxSubscriber;Z", "<T:Ljava/lang/Object;>(Lrx/Subscriber<TT;>;Z)V", "subscribeOn", "timeout", "JLJavaUtilConcurrentTimeUnit;LRxCompletable;", "JLJavaUtilConcurrentTimeUnit;LRxScheduler;LRxCompletable;", "timeout0", "to", "<U:Ljava/lang/Object;>(Lrx/functions/Func1<-Lrx/Completable;TU;>;)TU;", "<T:Ljava/lang/Object;>()Lrx/Observable<TT;>;", "toSingle", "<T:Ljava/lang/Object;>(Lrx/functions/Func0<+TT;>;)Lrx/Single<TT;>;", "toSingleDefault", "<T:Ljava/lang/Object;>(TT;)Lrx/Single<TT;>;", "unsubscribeOn", &RxCompletable_ERROR_HANDLER, &RxCompletable_HOOK, &RxCompletable_COMPLETE, &RxCompletable_NEVER, "LRxCompletable_CompletableOnSubscribe;LRxCompletable_CompletableOperator;LRxCompletable_CompletableSubscriber;LRxCompletable_CompletableTransformer;" };
  static const J2ObjcClassInfo _RxCompletable = { "Completable", "rx", ptrTable, methods, fields, 7, 0x1, 91, 5, -1, 123, -1, -1, -1 };
  return &_RxCompletable;
}

+ (void)initialize {
  if (self == [RxCompletable class]) {
    RxCompletable_ERROR_HANDLER = [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getErrorHandler];
    RxCompletable_HOOK = [((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getCompletableExecutionHook];
    RxCompletable_COMPLETE = RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$1_init());
    RxCompletable_NEVER = RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$2_init());
    J2OBJC_SET_INITIALIZED(RxCompletable)
  }
}

@end

RxCompletable *RxCompletable_ambWithRxCompletableArray_(IOSObjectArray *sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  if (((IOSObjectArray *) nil_chk(sources))->size_ == 0) {
    return RxCompletable_complete();
  }
  if (sources->size_ == 1) {
    return IOSObjectArray_Get(sources, 0);
  }
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$3_initWithRxCompletableArray_(sources));
}

RxCompletable *RxCompletable_ambWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$4_initWithJavaLangIterable_(sources));
}

RxCompletable *RxCompletable_complete() {
  RxCompletable_initialize();
  return RxCompletable_COMPLETE;
}

RxCompletable *RxCompletable_concatWithRxCompletableArray_(IOSObjectArray *sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  if (((IOSObjectArray *) nil_chk(sources))->size_ == 0) {
    return RxCompletable_complete();
  }
  else if (sources->size_ == 1) {
    return IOSObjectArray_Get(sources, 0);
  }
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeConcatArray_initWithRxCompletableArray_(sources));
}

RxCompletable *RxCompletable_concatWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeConcatIterable_initWithJavaLangIterable_(sources));
}

RxCompletable *RxCompletable_concatWithRxObservable_(RxObservable *sources) {
  RxCompletable_initialize();
  return RxCompletable_concatWithRxObservable_withInt_(sources, 2);
}

RxCompletable *RxCompletable_concatWithRxObservable_withInt_(RxObservable *sources, jint prefetch) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  if (prefetch < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"prefetch > 0 required but it was ", prefetch));
  }
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeConcat_initWithRxObservable_withInt_(sources, prefetch));
}

RxCompletable *RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(id<RxCompletable_CompletableOnSubscribe> onSubscribe) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(onSubscribe);
  @try {
    return new_RxCompletable_initWithRxCompletable_CompletableOnSubscribe_(onSubscribe);
  }
  @catch (JavaLangNullPointerException *ex) {
    @throw ex;
  }
  @catch (NSException *ex) {
    [((RxPluginsRxJavaErrorHandler *) nil_chk(RxCompletable_ERROR_HANDLER)) handleErrorWithNSException:ex];
    @throw RxCompletable_toNpeWithNSException_(ex);
  }
}

RxCompletable *RxCompletable_deferWithRxFunctionsFunc0_(id<RxFunctionsFunc0> completableFunc0) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(completableFunc0);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$5_initWithRxFunctionsFunc0_(completableFunc0));
}

RxCompletable *RxCompletable_errorWithRxFunctionsFunc0_(id<RxFunctionsFunc0> errorFunc0) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(errorFunc0);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$6_initWithRxFunctionsFunc0_(errorFunc0));
}

RxCompletable *RxCompletable_errorWithNSException_(NSException *error) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(error);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$7_initWithNSException_(error));
}

RxCompletable *RxCompletable_fromActionWithRxFunctionsAction0_(id<RxFunctionsAction0> action) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(action);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$8_initWithRxFunctionsAction0_(action));
}

RxCompletable *RxCompletable_fromCallableWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(callable);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$9_initWithJavaUtilConcurrentCallable_(callable));
}

RxCompletable *RxCompletable_fromFutureWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(future);
  return RxCompletable_fromObservableWithRxObservable_(RxObservable_fromWithJavaUtilConcurrentFuture_(future));
}

RxCompletable *RxCompletable_fromObservableWithRxObservable_(RxObservable *flowable) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(flowable);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$10_initWithRxObservable_(flowable));
}

RxCompletable *RxCompletable_fromSingleWithRxSingle_(RxSingle *single) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(single);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$11_initWithRxSingle_(single));
}

RxCompletable *RxCompletable_mergeWithRxCompletableArray_(IOSObjectArray *sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  if (((IOSObjectArray *) nil_chk(sources))->size_ == 0) {
    return RxCompletable_complete();
  }
  else if (sources->size_ == 1) {
    return IOSObjectArray_Get(sources, 0);
  }
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeMergeArray_initWithRxCompletableArray_(sources));
}

RxCompletable *RxCompletable_mergeWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeMergeIterable_initWithJavaLangIterable_(sources));
}

RxCompletable *RxCompletable_mergeWithRxObservable_(RxObservable *sources) {
  RxCompletable_initialize();
  return RxCompletable_merge0WithRxObservable_withInt_withBoolean_(sources, JavaLangInteger_MAX_VALUE, false);
}

RxCompletable *RxCompletable_mergeWithRxObservable_withInt_(RxObservable *sources, jint maxConcurrency) {
  RxCompletable_initialize();
  return RxCompletable_merge0WithRxObservable_withInt_withBoolean_(sources, maxConcurrency, false);
}

RxCompletable *RxCompletable_merge0WithRxObservable_withInt_withBoolean_(RxObservable *sources, jint maxConcurrency, jboolean delayErrors) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  if (maxConcurrency < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"maxConcurrency > 0 required but it was ", maxConcurrency));
  }
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeMerge_initWithRxObservable_withInt_withBoolean_(sources, maxConcurrency, delayErrors));
}

RxCompletable *RxCompletable_mergeDelayErrorWithRxCompletableArray_(IOSObjectArray *sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeMergeDelayErrorArray_initWithRxCompletableArray_(sources));
}

RxCompletable *RxCompletable_mergeDelayErrorWithJavaLangIterable_(id<JavaLangIterable> sources) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(sources);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeMergeDelayErrorIterable_initWithJavaLangIterable_(sources));
}

RxCompletable *RxCompletable_mergeDelayErrorWithRxObservable_(RxObservable *sources) {
  RxCompletable_initialize();
  return RxCompletable_merge0WithRxObservable_withInt_withBoolean_(sources, JavaLangInteger_MAX_VALUE, true);
}

RxCompletable *RxCompletable_mergeDelayErrorWithRxObservable_withInt_(RxObservable *sources, jint maxConcurrency) {
  RxCompletable_initialize();
  return RxCompletable_merge0WithRxObservable_withInt_withBoolean_(sources, maxConcurrency, true);
}

RxCompletable *RxCompletable_never() {
  RxCompletable_initialize();
  return RxCompletable_NEVER;
}

id RxCompletable_requireNonNullWithId_(id o) {
  RxCompletable_initialize();
  if (o == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  return o;
}

RxCompletable *RxCompletable_timerWithLong_withJavaUtilConcurrentTimeUnit_(jlong delay, JavaUtilConcurrentTimeUnit *unit) {
  RxCompletable_initialize();
  return RxCompletable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(delay, unit, RxSchedulersSchedulers_computation());
}

RxCompletable *RxCompletable_timerWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(unit);
  (void) RxCompletable_requireNonNullWithId_(scheduler);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(scheduler, delay, unit));
}

JavaLangNullPointerException *RxCompletable_toNpeWithNSException_(NSException *ex) {
  RxCompletable_initialize();
  JavaLangNullPointerException *npe = new_JavaLangNullPointerException_initWithNSString_(@"Actually not, but can't pass out an exception otherwise...");
  (void) [npe initCauseWithNSException:ex];
  return npe;
}

RxCompletable *RxCompletable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_(id<RxFunctionsFunc0> resourceFunc0, id<RxFunctionsFunc1> completableFunc1, id<RxFunctionsAction1> disposer) {
  RxCompletable_initialize();
  return RxCompletable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFunc0, completableFunc1, disposer, true);
}

RxCompletable *RxCompletable_using__WithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> resourceFunc0, id<RxFunctionsFunc1> completableFunc1, id<RxFunctionsAction1> disposer, jboolean eager) {
  RxCompletable_initialize();
  (void) RxCompletable_requireNonNullWithId_(resourceFunc0);
  (void) RxCompletable_requireNonNullWithId_(completableFunc1);
  (void) RxCompletable_requireNonNullWithId_(disposer);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(resourceFunc0, completableFunc1, disposer, eager));
}

void RxCompletable_initWithRxCompletable_CompletableOnSubscribe_(RxCompletable *self, id<RxCompletable_CompletableOnSubscribe> onSubscribe) {
  NSObject_init(self);
  self->onSubscribe_ = [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk(RxCompletable_HOOK)) onCreateWithRxCompletable_CompletableOnSubscribe:onSubscribe];
}

RxCompletable *new_RxCompletable_initWithRxCompletable_CompletableOnSubscribe_(id<RxCompletable_CompletableOnSubscribe> onSubscribe) {
  J2OBJC_NEW_IMPL(RxCompletable, initWithRxCompletable_CompletableOnSubscribe_, onSubscribe)
}

RxCompletable *create_RxCompletable_initWithRxCompletable_CompletableOnSubscribe_(id<RxCompletable_CompletableOnSubscribe> onSubscribe) {
  J2OBJC_CREATE_IMPL(RxCompletable, initWithRxCompletable_CompletableOnSubscribe_, onSubscribe)
}

RxObservable *RxCompletable_andThenWithRxObservable_(RxCompletable *self, RxObservable *next) {
  (void) RxCompletable_requireNonNullWithId_(next);
  return [((RxObservable *) nil_chk(next)) delaySubscriptionWithRxObservable:RxCompletable_toObservable(self)];
}

RxCompletable *RxCompletable_andThenWithRxCompletable_(RxCompletable *self, RxCompletable *next) {
  return RxCompletable_concatWithWithRxCompletable_(self, next);
}

RxCompletable *RxCompletable_concatWithWithRxCompletable_(RxCompletable *self, RxCompletable *other) {
  (void) RxCompletable_requireNonNullWithId_(other);
  return RxCompletable_concatWithRxCompletableArray_([IOSObjectArray newArrayWithObjects:(id[]){ self, other } count:2 type:RxCompletable_class_()]);
}

RxCompletable *RxCompletable_delayWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withBoolean_(RxCompletable *self, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, jboolean delayError) {
  (void) RxCompletable_requireNonNullWithId_(unit);
  (void) RxCompletable_requireNonNullWithId_(scheduler);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(self, scheduler, delay, unit, delayError));
}

RxCompletable *RxCompletable_doOnCompletedWithRxFunctionsAction0_(RxCompletable *self, id<RxFunctionsAction0> onCompleted) {
  return RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(self, RxFunctionsActions_empty(), RxFunctionsActions_empty(), onCompleted, RxFunctionsActions_empty(), RxFunctionsActions_empty());
}

RxCompletable *RxCompletable_doOnLifecycleWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction0_(RxCompletable *self, id<RxFunctionsAction1> onSubscribe, id<RxFunctionsAction1> onError, id<RxFunctionsAction0> onComplete, id<RxFunctionsAction0> onAfterComplete, id<RxFunctionsAction0> onUnsubscribe) {
  (void) RxCompletable_requireNonNullWithId_(onSubscribe);
  (void) RxCompletable_requireNonNullWithId_(onError);
  (void) RxCompletable_requireNonNullWithId_(onComplete);
  (void) RxCompletable_requireNonNullWithId_(onAfterComplete);
  (void) RxCompletable_requireNonNullWithId_(onUnsubscribe);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(self, onComplete, onAfterComplete, onError, onSubscribe, onUnsubscribe));
}

RxCompletable *RxCompletable_onErrorCompleteWithRxFunctionsFunc1_(RxCompletable *self, id<RxFunctionsFunc1> predicate) {
  (void) RxCompletable_requireNonNullWithId_(predicate);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(self, predicate));
}

void RxCompletable_deliverUncaughtExceptionWithNSException_(NSException *e) {
  RxCompletable_initialize();
  JavaLangThread *thread = JavaLangThread_currentThread();
  [((id<JavaLangThread_UncaughtExceptionHandler>) nil_chk([((JavaLangThread *) nil_chk(thread)) getUncaughtExceptionHandler])) uncaughtExceptionWithJavaLangThread:thread withNSException:e];
}

void RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(RxCompletable *self, id<RxCompletable_CompletableSubscriber> s) {
  (void) RxCompletable_requireNonNullWithId_(s);
  @try {
    id<RxCompletable_CompletableOnSubscribe> onSubscribeDecorated = [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk(RxCompletable_HOOK)) onSubscribeStartWithRxCompletable:self withRxCompletable_CompletableOnSubscribe:self->onSubscribe_];
    [((id<RxCompletable_CompletableOnSubscribe>) nil_chk(onSubscribeDecorated)) callWithId:s];
  }
  @catch (JavaLangNullPointerException *ex) {
    @throw ex;
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    ex = [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk(RxCompletable_HOOK)) onSubscribeErrorWithNSException:ex];
    [((RxPluginsRxJavaErrorHandler *) nil_chk(RxCompletable_ERROR_HANDLER)) handleErrorWithNSException:ex];
    @throw RxCompletable_toNpeWithNSException_(ex);
  }
}

void RxCompletable_unsafeSubscribeWithRxSubscriber_(RxCompletable *self, RxSubscriber *s) {
  RxCompletable_unsafeSubscribeWithRxSubscriber_withBoolean_(self, s, true);
}

void RxCompletable_unsafeSubscribeWithRxSubscriber_withBoolean_(RxCompletable *self, RxSubscriber *s, jboolean callOnStart) {
  (void) RxCompletable_requireNonNullWithId_(s);
  @try {
    if (callOnStart) {
      [((RxSubscriber *) nil_chk(s)) onStart];
    }
    RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(self, new_RxCompletable_$28_initWithRxSubscriber_(s));
    (void) [((RxPluginsRxJavaObservableExecutionHook *) nil_chk([((RxPluginsRxJavaPlugins *) nil_chk(RxPluginsRxJavaPlugins_getInstance())) getObservableExecutionHook])) onSubscribeReturnWithRxSubscription:s];
  }
  @catch (JavaLangNullPointerException *ex) {
    @throw ex;
  }
  @catch (NSException *ex) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
    ex = [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk(RxCompletable_HOOK)) onSubscribeErrorWithNSException:ex];
    [((RxPluginsRxJavaErrorHandler *) nil_chk(RxCompletable_ERROR_HANDLER)) handleErrorWithNSException:ex];
    @throw RxCompletable_toNpeWithNSException_(ex);
  }
}

RxCompletable *RxCompletable_timeout0WithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(RxCompletable *self, jlong timeout, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler, RxCompletable *other) {
  (void) RxCompletable_requireNonNullWithId_(unit);
  (void) RxCompletable_requireNonNullWithId_(scheduler);
  return RxCompletable_createWithRxCompletable_CompletableOnSubscribe_(new_RxInternalOperatorsCompletableOnSubscribeTimeout_initWithRxCompletable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_withRxCompletable_(self, timeout, unit, scheduler, other));
}

id RxCompletable_toWithRxFunctionsFunc1_(RxCompletable *self, id<RxFunctionsFunc1> converter) {
  return [((id<RxFunctionsFunc1>) nil_chk(converter)) callWithId:self];
}

RxObservable *RxCompletable_toObservable(RxCompletable *self) {
  return RxObservable_createWithRxObservable_OnSubscribe_(new_RxCompletable_$30_initWithRxCompletable_(self));
}

RxSingle *RxCompletable_toSingleWithRxFunctionsFunc0_(RxCompletable *self, id<RxFunctionsFunc0> completionValueFunc0) {
  (void) RxCompletable_requireNonNullWithId_(completionValueFunc0);
  return RxSingle_createWithRxSingle_OnSubscribe_(new_RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(self, completionValueFunc0));
}

IOSObjectArray *RxCompletable__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCompletable__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxCompletable__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable)

@implementation RxCompletable_CompletableOnSubscribe

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxCompletable;", "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Completable$CompletableSubscriber;>;" };
  static const J2ObjcClassInfo _RxCompletable_CompletableOnSubscribe = { "CompletableOnSubscribe", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxCompletable_CompletableOnSubscribe;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxCompletable_CompletableOnSubscribe)

@implementation RxCompletable_CompletableOperator

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxCompletable;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Completable$CompletableSubscriber;Lrx/Completable$CompletableSubscriber;>;" };
  static const J2ObjcClassInfo _RxCompletable_CompletableOperator = { "CompletableOperator", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxCompletable_CompletableOperator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxCompletable_CompletableOperator)

@implementation RxCompletable_CompletableSubscriber

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x401, 2, 3, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable;" };
  static const J2ObjcClassInfo _RxCompletable_CompletableSubscriber = { "CompletableSubscriber", "rx", ptrTable, methods, NULL, 7, 0x609, 3, 0, 4, -1, -1, -1, -1 };
  return &_RxCompletable_CompletableSubscriber;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxCompletable_CompletableSubscriber)

@implementation RxCompletable_CompletableTransformer

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRxCompletable;", "Ljava/lang/Object;Lrx/functions/Func1<Lrx/Completable;Lrx/Completable;>;" };
  static const J2ObjcClassInfo _RxCompletable_CompletableTransformer = { "CompletableTransformer", "rx", ptrTable, NULL, NULL, 7, 0x609, 0, 0, 0, -1, -1, 1, -1 };
  return &_RxCompletable_CompletableTransformer;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxCompletable_CompletableTransformer)

@implementation RxCompletable_$1

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
  [s onCompleted];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCompletable_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;" };
  static const J2ObjcClassInfo _RxCompletable_$1 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, -1, -1 };
  return &_RxCompletable_$1;
}

@end

void RxCompletable_$1_init(RxCompletable_$1 *self) {
  NSObject_init(self);
}

RxCompletable_$1 *new_RxCompletable_$1_init() {
  J2OBJC_NEW_IMPL(RxCompletable_$1, init)
}

RxCompletable_$1 *create_RxCompletable_$1_init() {
  J2OBJC_CREATE_IMPL(RxCompletable_$1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$1)

@implementation RxCompletable_$2

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxCompletable_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;" };
  static const J2ObjcClassInfo _RxCompletable_$2 = { "", "rx", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, -1, -1 };
  return &_RxCompletable_$2;
}

@end

void RxCompletable_$2_init(RxCompletable_$2 *self) {
  NSObject_init(self);
}

RxCompletable_$2 *new_RxCompletable_$2_init() {
  J2OBJC_NEW_IMPL(RxCompletable_$2, init)
}

RxCompletable_$2 *create_RxCompletable_$2_init() {
  J2OBJC_CREATE_IMPL(RxCompletable_$2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$2)

@implementation RxCompletable_$3

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsCompositeSubscription *set = new_RxSubscriptionsCompositeSubscription_init();
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:set];
  JavaUtilConcurrentAtomicAtomicBoolean *once = new_JavaUtilConcurrentAtomicAtomicBoolean_init();
  id<RxCompletable_CompletableSubscriber> inner = new_RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(once, set, s);
  {
    IOSObjectArray *a__ = val$sources_;
    RxCompletable * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    RxCompletable * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      RxCompletable *c = *b__++;
      if ([set isUnsubscribed]) {
        return;
      }
      if (c == nil) {
        JavaLangNullPointerException *npe = new_JavaLangNullPointerException_initWithNSString_(@"One of the sources is null");
        if ([once compareAndSetWithBoolean:false withBoolean:true]) {
          [set unsubscribe];
          [s onErrorWithNSException:npe];
        }
        else {
          [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:npe];
        }
        return;
      }
      if ([once get] || [set isUnsubscribed]) {
        return;
      }
      RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(c, inner);
    }
  }
}

- (instancetype)initWithRxCompletableArray:(IOSObjectArray *)capture$0 {
  RxCompletable_$3_initWithRxCompletableArray_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletableArray:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$sources_", "[LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "[LRxCompletable;", "LRxCompletable;", "ambWithRxCompletableArray:" };
  static const J2ObjcClassInfo _RxCompletable_$3 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$3;
}

@end

void RxCompletable_$3_initWithRxCompletableArray_(RxCompletable_$3 *self, IOSObjectArray *capture$0) {
  self->val$sources_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$3 *new_RxCompletable_$3_initWithRxCompletableArray_(IOSObjectArray *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$3, initWithRxCompletableArray_, capture$0)
}

RxCompletable_$3 *create_RxCompletable_$3_initWithRxCompletableArray_(IOSObjectArray *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$3, initWithRxCompletableArray_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$3)

@implementation RxCompletable_$3_$1

- (void)onCompleted {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) unsubscribe];
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) unsubscribe];
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
  }
  else {
    [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
  }
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) addWithRxSubscription:d];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                     withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$1
                      withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2 {
  RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentAtomicAtomicBoolean:withRxSubscriptionsCompositeSubscription:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$set_", "LRxSubscriptionsCompositeSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LJavaUtilConcurrentAtomicAtomicBoolean;LRxSubscriptionsCompositeSubscription;LRxCompletable_CompletableSubscriber;", "LRxCompletable_$3;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$3_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 3, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$3_$1;
}

@end

void RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxCompletable_$3_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  self->val$once_ = capture$0;
  self->val$set_ = capture$1;
  self->val$s_ = capture$2;
  NSObject_init(self);
}

RxCompletable_$3_$1 *new_RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_NEW_IMPL(RxCompletable_$3_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_, capture$0, capture$1, capture$2)
}

RxCompletable_$3_$1 *create_RxCompletable_$3_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_CREATE_IMPL(RxCompletable_$3_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$3_$1)

@implementation RxCompletable_$4

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsCompositeSubscription *set = new_RxSubscriptionsCompositeSubscription_init();
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:set];
  JavaUtilConcurrentAtomicAtomicBoolean *once = new_JavaUtilConcurrentAtomicAtomicBoolean_init();
  id<RxCompletable_CompletableSubscriber> inner = new_RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(once, set, s);
  id<JavaUtilIterator> it;
  @try {
    it = [((id<JavaLangIterable>) nil_chk(val$sources_)) iterator];
  }
  @catch (NSException *e) {
    [s onErrorWithNSException:e];
    return;
  }
  if (it == nil) {
    [s onErrorWithNSException:new_JavaLangNullPointerException_initWithNSString_(@"The iterator returned is null")];
    return;
  }
  jboolean empty = true;
  for (; ; ) {
    if ([once get] || [set isUnsubscribed]) {
      return;
    }
    jboolean b;
    @try {
      b = [it hasNext];
    }
    @catch (NSException *e) {
      if ([once compareAndSetWithBoolean:false withBoolean:true]) {
        [set unsubscribe];
        [s onErrorWithNSException:e];
      }
      else {
        [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
      }
      return;
    }
    if (!b) {
      if (empty) {
        [s onCompleted];
      }
      break;
    }
    empty = false;
    if ([once get] || [set isUnsubscribed]) {
      return;
    }
    RxCompletable *c;
    @try {
      c = [it next];
    }
    @catch (NSException *e) {
      if ([once compareAndSetWithBoolean:false withBoolean:true]) {
        [set unsubscribe];
        [s onErrorWithNSException:e];
      }
      else {
        [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
      }
      return;
    }
    if (c == nil) {
      JavaLangNullPointerException *npe = new_JavaLangNullPointerException_initWithNSString_(@"One of the sources is null");
      if ([once compareAndSetWithBoolean:false withBoolean:true]) {
        [set unsubscribe];
        [s onErrorWithNSException:npe];
      }
      else {
        [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:npe];
      }
      return;
    }
    if ([once get] || [set isUnsubscribed]) {
      return;
    }
    RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(c, inner);
  }
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0 {
  RxCompletable_$4_initWithJavaLangIterable_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithJavaLangIterable:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$sources_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Lrx/Completable;>;)V", "Ljava/lang/Iterable<+Lrx/Completable;>;", "LRxCompletable;", "ambWithJavaLangIterable:" };
  static const J2ObjcClassInfo _RxCompletable_$4 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$4;
}

@end

void RxCompletable_$4_initWithJavaLangIterable_(RxCompletable_$4 *self, id<JavaLangIterable> capture$0) {
  self->val$sources_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$4 *new_RxCompletable_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$4, initWithJavaLangIterable_, capture$0)
}

RxCompletable_$4 *create_RxCompletable_$4_initWithJavaLangIterable_(id<JavaLangIterable> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$4, initWithJavaLangIterable_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$4)

@implementation RxCompletable_$4_$1

- (void)onCompleted {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) unsubscribe];
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) unsubscribe];
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
  }
  else {
    [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
  }
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) addWithRxSubscription:d];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                     withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$1
                      withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2 {
  RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentAtomicAtomicBoolean:withRxSubscriptionsCompositeSubscription:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$set_", "LRxSubscriptionsCompositeSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LJavaUtilConcurrentAtomicAtomicBoolean;LRxSubscriptionsCompositeSubscription;LRxCompletable_CompletableSubscriber;", "LRxCompletable_$4;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$4_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 3, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$4_$1;
}

@end

void RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(RxCompletable_$4_$1 *self, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  self->val$once_ = capture$0;
  self->val$set_ = capture$1;
  self->val$s_ = capture$2;
  NSObject_init(self);
}

RxCompletable_$4_$1 *new_RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_NEW_IMPL(RxCompletable_$4_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_, capture$0, capture$1, capture$2)
}

RxCompletable_$4_$1 *create_RxCompletable_$4_$1_initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_(JavaUtilConcurrentAtomicAtomicBoolean *capture$0, RxSubscriptionsCompositeSubscription *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_CREATE_IMPL(RxCompletable_$4_$1, initWithJavaUtilConcurrentAtomicAtomicBoolean_withRxSubscriptionsCompositeSubscription_withRxCompletable_CompletableSubscriber_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$4_$1)

@implementation RxCompletable_$5

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxCompletable *c;
  @try {
    c = [((id<RxFunctionsFunc0>) nil_chk(val$completableFunc0_)) call];
  }
  @catch (NSException *e) {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
    [s onErrorWithNSException:e];
    return;
  }
  if (c == nil) {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
    [s onErrorWithNSException:new_JavaLangNullPointerException_initWithNSString_(@"The completable returned is null")];
    return;
  }
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(c, s);
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0 {
  RxCompletable_$5_initWithRxFunctionsFunc0_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxFunctionsFunc0:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$completableFunc0_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxFunctionsFunc0;", "(Lrx/functions/Func0<+Lrx/Completable;>;)V", "Lrx/functions/Func0<+Lrx/Completable;>;", "LRxCompletable;", "deferWithRxFunctionsFunc0:" };
  static const J2ObjcClassInfo _RxCompletable_$5 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$5;
}

@end

void RxCompletable_$5_initWithRxFunctionsFunc0_(RxCompletable_$5 *self, id<RxFunctionsFunc0> capture$0) {
  self->val$completableFunc0_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$5 *new_RxCompletable_$5_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$5, initWithRxFunctionsFunc0_, capture$0)
}

RxCompletable_$5 *create_RxCompletable_$5_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$5, initWithRxFunctionsFunc0_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$5)

@implementation RxCompletable_$6

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
  NSException *error;
  @try {
    error = [((id<RxFunctionsFunc0>) nil_chk(val$errorFunc0_)) call];
  }
  @catch (NSException *e) {
    error = e;
  }
  if (error == nil) {
    error = new_JavaLangNullPointerException_initWithNSString_(@"The error supplied is null");
  }
  [s onErrorWithNSException:error];
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0 {
  RxCompletable_$6_initWithRxFunctionsFunc0_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxFunctionsFunc0:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$errorFunc0_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxFunctionsFunc0;", "(Lrx/functions/Func0<+Ljava/lang/Throwable;>;)V", "Lrx/functions/Func0<+Ljava/lang/Throwable;>;", "LRxCompletable;", "errorWithRxFunctionsFunc0:" };
  static const J2ObjcClassInfo _RxCompletable_$6 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$6;
}

@end

void RxCompletable_$6_initWithRxFunctionsFunc0_(RxCompletable_$6 *self, id<RxFunctionsFunc0> capture$0) {
  self->val$errorFunc0_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$6 *new_RxCompletable_$6_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$6, initWithRxFunctionsFunc0_, capture$0)
}

RxCompletable_$6 *create_RxCompletable_$6_initWithRxFunctionsFunc0_(id<RxFunctionsFunc0> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$6, initWithRxFunctionsFunc0_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$6)

@implementation RxCompletable_$7

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
  [s onErrorWithNSException:val$error_];
}

- (instancetype)initWithNSException:(NSException *)capture$0 {
  RxCompletable_$7_initWithNSException_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithNSException:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$error_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LNSException;", "LRxCompletable;", "errorWithNSException:" };
  static const J2ObjcClassInfo _RxCompletable_$7 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$7;
}

@end

void RxCompletable_$7_initWithNSException_(RxCompletable_$7 *self, NSException *capture$0) {
  self->val$error_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$7 *new_RxCompletable_$7_initWithNSException_(NSException *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$7, initWithNSException_, capture$0)
}

RxCompletable_$7 *create_RxCompletable_$7_initWithNSException_(NSException *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$7, initWithNSException_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$7)

@implementation RxCompletable_$8

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsBooleanSubscription *bs = new_RxSubscriptionsBooleanSubscription_init();
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:bs];
  @try {
    [((id<RxFunctionsAction0>) nil_chk(val$action_)) call];
  }
  @catch (NSException *e) {
    if (![bs isUnsubscribed]) {
      [s onErrorWithNSException:e];
    }
    return;
  }
  if (![bs isUnsubscribed]) {
    [s onCompleted];
  }
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0 {
  RxCompletable_$8_initWithRxFunctionsAction0_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxFunctionsAction0:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$action_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxFunctionsAction0;", "LRxCompletable;", "fromActionWithRxFunctionsAction0:" };
  static const J2ObjcClassInfo _RxCompletable_$8 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$8;
}

@end

void RxCompletable_$8_initWithRxFunctionsAction0_(RxCompletable_$8 *self, id<RxFunctionsAction0> capture$0) {
  self->val$action_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$8 *new_RxCompletable_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$8, initWithRxFunctionsAction0_, capture$0)
}

RxCompletable_$8 *create_RxCompletable_$8_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$8, initWithRxFunctionsAction0_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$8)

@implementation RxCompletable_$9

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsBooleanSubscription *bs = new_RxSubscriptionsBooleanSubscription_init();
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:bs];
  @try {
    (void) [((id<JavaUtilConcurrentCallable>) nil_chk(val$callable_)) call];
  }
  @catch (NSException *e) {
    if (![bs isUnsubscribed]) {
      [s onErrorWithNSException:e];
    }
    return;
  }
  if (![bs isUnsubscribed]) {
    [s onCompleted];
  }
}

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)capture$0 {
  RxCompletable_$9_initWithJavaUtilConcurrentCallable_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentCallable:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$callable_", "LJavaUtilConcurrentCallable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LJavaUtilConcurrentCallable;", "(Ljava/util/concurrent/Callable<*>;)V", "Ljava/util/concurrent/Callable<*>;", "LRxCompletable;", "fromCallableWithJavaUtilConcurrentCallable:" };
  static const J2ObjcClassInfo _RxCompletable_$9 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$9;
}

@end

void RxCompletable_$9_initWithJavaUtilConcurrentCallable_(RxCompletable_$9 *self, id<JavaUtilConcurrentCallable> capture$0) {
  self->val$callable_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$9 *new_RxCompletable_$9_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$9, initWithJavaUtilConcurrentCallable_, capture$0)
}

RxCompletable_$9 *create_RxCompletable_$9_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$9, initWithJavaUtilConcurrentCallable_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$9)

@implementation RxCompletable_$10

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)cs {
  RxSubscriber *subscriber = new_RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(cs);
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(cs)) onSubscribeWithRxSubscription:subscriber];
  (void) [((RxObservable *) nil_chk(val$flowable_)) unsafeSubscribeWithRxSubscriber:subscriber];
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0 {
  RxCompletable_$10_initWithRxObservable_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxObservable:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$flowable_", "LRxObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxObservable;", "(Lrx/Observable<*>;)V", "Lrx/Observable<*>;", "LRxCompletable;", "fromObservableWithRxObservable:" };
  static const J2ObjcClassInfo _RxCompletable_$10 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$10;
}

@end

void RxCompletable_$10_initWithRxObservable_(RxCompletable_$10 *self, RxObservable *capture$0) {
  self->val$flowable_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$10 *new_RxCompletable_$10_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$10, initWithRxObservable_, capture$0)
}

RxCompletable_$10 *create_RxCompletable_$10_initWithRxObservable_(RxObservable *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$10, initWithRxObservable_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$10)

@implementation RxCompletable_$10_$1

- (void)onCompleted {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$cs_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)t {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$cs_)) onErrorWithNSException:t];
}

- (void)onNextWithId:(id)t {
}

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0 {
  RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$cs_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "LRxCompletable_CompletableSubscriber;", "LRxCompletable_$10;", "callWithId:", "Lrx/Subscriber<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxCompletable_$10_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 1, 5, -1, 6, 7, -1 };
  return &_RxCompletable_$10_$1;
}

@end

void RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(RxCompletable_$10_$1 *self, id<RxCompletable_CompletableSubscriber> capture$0) {
  self->val$cs_ = capture$0;
  RxSubscriber_init(self);
}

RxCompletable_$10_$1 *new_RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$10_$1, initWithRxCompletable_CompletableSubscriber_, capture$0)
}

RxCompletable_$10_$1 *create_RxCompletable_$10_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$10_$1, initWithRxCompletable_CompletableSubscriber_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$10_$1)

@implementation RxCompletable_$11

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSingleSubscriber *te = new_RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(s);
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:te];
  (void) [((RxSingle *) nil_chk(val$single_)) subscribeWithRxSingleSubscriber:te];
}

- (instancetype)initWithRxSingle:(RxSingle *)capture$0 {
  RxCompletable_$11_initWithRxSingle_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxSingle:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$single_", "LRxSingle;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxSingle;", "(Lrx/Single<*>;)V", "Lrx/Single<*>;", "LRxCompletable;", "fromSingleWithRxSingle:" };
  static const J2ObjcClassInfo _RxCompletable_$11 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$11;
}

@end

void RxCompletable_$11_initWithRxSingle_(RxCompletable_$11 *self, RxSingle *capture$0) {
  self->val$single_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$11 *new_RxCompletable_$11_initWithRxSingle_(RxSingle *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$11, initWithRxSingle_, capture$0)
}

RxCompletable_$11 *create_RxCompletable_$11_initWithRxSingle_(RxSingle *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$11, initWithRxSingle_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$11)

@implementation RxCompletable_$11_$1

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
}

- (void)onSuccessWithId:(id)value {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
}

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0 {
  RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSuccessWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "initWithRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSuccess", "LNSObject;", "(Ljava/lang/Object;)V", "LRxCompletable_CompletableSubscriber;", "LRxCompletable_$11;", "callWithId:", "Lrx/SingleSubscriber<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _RxCompletable_$11_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 3, 1, 6, -1, 7, 8, -1 };
  return &_RxCompletable_$11_$1;
}

@end

void RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(RxCompletable_$11_$1 *self, id<RxCompletable_CompletableSubscriber> capture$0) {
  self->val$s_ = capture$0;
  RxSingleSubscriber_init(self);
}

RxCompletable_$11_$1 *new_RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$11_$1, initWithRxCompletable_CompletableSubscriber_, capture$0)
}

RxCompletable_$11_$1 *create_RxCompletable_$11_$1_initWithRxCompletable_CompletableSubscriber_(id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$11_$1, initWithRxCompletable_CompletableSubscriber_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$11_$1)

@implementation RxCompletable_$12

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsMultipleAssignmentSubscription *mad = new_RxSubscriptionsMultipleAssignmentSubscription_init();
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:mad];
  if (![mad isUnsubscribed]) {
    RxScheduler_Worker *w = [((RxScheduler *) nil_chk(val$scheduler_)) createWorker];
    [mad setWithRxSubscription:w];
    (void) [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:new_RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(s, w) withLong:val$delay_ withJavaUtilConcurrentTimeUnit:val$unit_];
  }
}

- (instancetype)initWithRxScheduler:(RxScheduler *)capture$0
                           withLong:(jlong)capture$1
     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$2 {
  RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxScheduler:withLong:withJavaUtilConcurrentTimeUnit:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$delay_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxScheduler;JLJavaUtilConcurrentTimeUnit;", "LRxCompletable;", "timerWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:" };
  static const J2ObjcClassInfo _RxCompletable_$12 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 3, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$12;
}

@end

void RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(RxCompletable_$12 *self, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2) {
  self->val$scheduler_ = capture$0;
  self->val$delay_ = capture$1;
  self->val$unit_ = capture$2;
  NSObject_init(self);
}

RxCompletable_$12 *new_RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2) {
  J2OBJC_NEW_IMPL(RxCompletable_$12, initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_, capture$0, capture$1, capture$2)
}

RxCompletable_$12 *create_RxCompletable_$12_initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_(RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2) {
  J2OBJC_CREATE_IMPL(RxCompletable_$12, initWithRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$12)

@implementation RxCompletable_$12_$1

- (void)call {
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(val$w_)) unsubscribe];
  }
}

- (instancetype)initWithRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0
                                     withRxScheduler_Worker:(RxScheduler_Worker *)capture$1 {
  RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_CompletableSubscriber:withRxScheduler_Worker:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$w_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_CompletableSubscriber;LRxScheduler_Worker;", "LRxCompletable_$12;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$12_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_RxCompletable_$12_$1;
}

@end

void RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$12_$1 *self, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) {
  self->val$s_ = capture$0;
  self->val$w_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$12_$1 *new_RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$12_$1, initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_, capture$0, capture$1)
}

RxCompletable_$12_$1 *create_RxCompletable_$12_$1_initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$12_$1, initWithRxCompletable_CompletableSubscriber_withRxScheduler_Worker_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$12_$1)

@implementation RxCompletable_$13

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  id resource;
  @try {
    resource = [((id<RxFunctionsFunc0>) nil_chk(val$resourceFunc0_)) call];
  }
  @catch (NSException *e) {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
    [s onErrorWithNSException:e];
    return;
  }
  RxCompletable *cs;
  @try {
    cs = [((id<RxFunctionsFunc1>) nil_chk(val$completableFunc1_)) callWithId:resource];
  }
  @catch (NSException *e) {
    @try {
      [((id<RxFunctionsAction1>) nil_chk(val$disposer_)) callWithId:resource];
    }
    @catch (NSException *ex) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(e);
      RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
      [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
      [s onErrorWithNSException:new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]))];
      return;
    }
    RxExceptionsExceptions_throwIfFatalWithNSException_(e);
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
    [s onErrorWithNSException:e];
    return;
  }
  if (cs == nil) {
    @try {
      [((id<RxFunctionsAction1>) nil_chk(val$disposer_)) callWithId:resource];
    }
    @catch (NSException *ex) {
      RxExceptionsExceptions_throwIfFatalWithNSException_(ex);
      [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
      [s onErrorWithNSException:new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangNullPointerException_initWithNSString_(@"The completable supplied is null"), ex } count:2 type:NSException_class_()]))];
      return;
    }
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
    [s onErrorWithNSException:new_JavaLangNullPointerException_initWithNSString_(@"The completable supplied is null")];
    return;
  }
  JavaUtilConcurrentAtomicAtomicBoolean *once = new_JavaUtilConcurrentAtomicAtomicBoolean_init();
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(cs, new_RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(self, once, resource, s));
}

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$1
                  withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2
                             withBoolean:(jboolean)capture$3 {
  RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(self, capture$0, capture$1, capture$2, capture$3);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:withBoolean:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$resourceFunc0_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$completableFunc1_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$disposer_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "val$eager_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxFunctionsFunc0;LRxFunctionsFunc1;LRxFunctionsAction1;Z", "(Lrx/functions/Func0<TR;>;Lrx/functions/Func1<-TR;+Lrx/Completable;>;Lrx/functions/Action1<-TR;>;Z)V", "Lrx/functions/Func0<TR;>;", "Lrx/functions/Func1<-TR;+Lrx/Completable;>;", "Lrx/functions/Action1<-TR;>;", "LRxCompletable;", "using__WithRxFunctionsFunc0:withRxFunctionsFunc1:withRxFunctionsAction1:withBoolean:" };
  static const J2ObjcClassInfo _RxCompletable_$13 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 4, 7, -1, 8, -1, -1 };
  return &_RxCompletable_$13;
}

@end

void RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(RxCompletable_$13 *self, id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1, id<RxFunctionsAction1> capture$2, jboolean capture$3) {
  self->val$resourceFunc0_ = capture$0;
  self->val$completableFunc1_ = capture$1;
  self->val$disposer_ = capture$2;
  self->val$eager_ = capture$3;
  NSObject_init(self);
}

RxCompletable_$13 *new_RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1, id<RxFunctionsAction1> capture$2, jboolean capture$3) {
  J2OBJC_NEW_IMPL(RxCompletable_$13, initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_, capture$0, capture$1, capture$2, capture$3)
}

RxCompletable_$13 *create_RxCompletable_$13_initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_(id<RxFunctionsFunc0> capture$0, id<RxFunctionsFunc1> capture$1, id<RxFunctionsAction1> capture$2, jboolean capture$3) {
  J2OBJC_CREATE_IMPL(RxCompletable_$13, initWithRxFunctionsFunc0_withRxFunctionsFunc1_withRxFunctionsAction1_withBoolean_, capture$0, capture$1, capture$2, capture$3)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$13)

@implementation RxCompletable_$13_$1

- (void)dispose {
  [((id<RxSubscription>) nil_chk(d_)) unsubscribe];
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
    @try {
      [((id<RxFunctionsAction1>) nil_chk(this$0_->val$disposer_)) callWithId:val$resource_];
    }
    @catch (NSException *ex) {
      [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:ex];
    }
  }
}

- (void)onCompleted {
  if (this$0_->val$eager_) {
    if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
      @try {
        [((id<RxFunctionsAction1>) nil_chk(this$0_->val$disposer_)) callWithId:val$resource_];
      }
      @catch (NSException *ex) {
        [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:ex];
        return;
      }
    }
  }
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
  if (!this$0_->val$eager_) {
    [self dispose];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (this$0_->val$eager_) {
    if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(val$once_)) compareAndSetWithBoolean:false withBoolean:true]) {
      @try {
        [((id<RxFunctionsAction1>) nil_chk(this$0_->val$disposer_)) callWithId:val$resource_];
      }
      @catch (NSException *ex) {
        e = new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]));
      }
    }
  }
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
  if (!this$0_->val$eager_) {
    [self dispose];
  }
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  self->d_ = d;
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(self))];
}

- (instancetype)initWithRxCompletable_$13:(RxCompletable_$13 *)outer$
withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$0
                                   withId:(id)capture$1
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2 {
  RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispose", "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$13:withJavaUtilConcurrentAtomicAtomicBoolean:withId:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$13;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "d_", "LRxSubscription;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$once_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$resource_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$13;LJavaUtilConcurrentAtomicAtomicBoolean;LNSObject;LRxCompletable_CompletableSubscriber;", "(Lrx/Completable$13;Ljava/util/concurrent/atomic/AtomicBoolean;TR;Lrx/Completable$CompletableSubscriber;)V", "TR;", "LRxCompletable_$13;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$13_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 5, 5, 7, -1, 8, -1, -1 };
  return &_RxCompletable_$13_$1;
}

@end

void RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(RxCompletable_$13_$1 *self, RxCompletable_$13 *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, id capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  self->this$0_ = outer$;
  self->val$once_ = capture$0;
  self->val$resource_ = capture$1;
  self->val$s_ = capture$2;
  NSObject_init(self);
}

RxCompletable_$13_$1 *new_RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(RxCompletable_$13 *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, id capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_NEW_IMPL(RxCompletable_$13_$1, initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_, outer$, capture$0, capture$1, capture$2)
}

RxCompletable_$13_$1 *create_RxCompletable_$13_$1_initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_(RxCompletable_$13 *outer$, JavaUtilConcurrentAtomicAtomicBoolean *capture$0, id capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_CREATE_IMPL(RxCompletable_$13_$1, initWithRxCompletable_$13_withJavaUtilConcurrentAtomicAtomicBoolean_withId_withRxCompletable_CompletableSubscriber_, outer$, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$13_$1)

@implementation RxCompletable_$13_$1_$1

- (void)call {
  [this$0_ dispose];
}

- (instancetype)initWithRxCompletable_$13_$1:(RxCompletable_$13_$1 *)outer$ {
  RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$13_$1:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$13_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$13_$1;", "onSubscribeWithRxSubscription:" };
  static const J2ObjcClassInfo _RxCompletable_$13_$1_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxCompletable_$13_$1_$1;
}

@end

void RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(RxCompletable_$13_$1_$1 *self, RxCompletable_$13_$1 *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxCompletable_$13_$1_$1 *new_RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(RxCompletable_$13_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxCompletable_$13_$1_$1, initWithRxCompletable_$13_$1_, outer$)
}

RxCompletable_$13_$1_$1 *create_RxCompletable_$13_$1_$1_initWithRxCompletable_$13_$1_(RxCompletable_$13_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxCompletable_$13_$1_$1, initWithRxCompletable_$13_$1_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$13_$1_$1)

@implementation RxCompletable_$14

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  (void) IOSObjectArray_Set(nil_chk(val$err_), 0, e);
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1 {
  RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentCountDownLatch:withNSExceptionArray:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$cdl_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$err_", "[LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LJavaUtilConcurrentCountDownLatch;[LNSException;", "LRxCompletable;", "await" };
  static const J2ObjcClassInfo _RxCompletable_$14 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$14;
}

@end

void RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$14 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  self->val$cdl_ = capture$0;
  self->val$err_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$14 *new_RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$14, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

RxCompletable_$14 *create_RxCompletable_$14_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$14, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$14)

@implementation RxCompletable_$15

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  (void) IOSObjectArray_Set(nil_chk(val$err_), 0, e);
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1 {
  RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentCountDownLatch:withNSExceptionArray:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$cdl_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$err_", "[LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LJavaUtilConcurrentCountDownLatch;[LNSException;", "LRxCompletable;", "awaitWithLong:withJavaUtilConcurrentTimeUnit:" };
  static const J2ObjcClassInfo _RxCompletable_$15 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$15;
}

@end

void RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$15 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  self->val$cdl_ = capture$0;
  self->val$err_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$15 *new_RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$15, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

RxCompletable_$15 *create_RxCompletable_$15_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$15, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$15)

@implementation RxCompletable_$16

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsCompositeSubscription *set = new_RxSubscriptionsCompositeSubscription_init();
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(val$scheduler_)) createWorker];
  [set addWithRxSubscription:w];
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, new_RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(self, set, w, s));
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0
                             withLong:(jlong)capture$1
       withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$2
                          withBoolean:(jboolean)capture$3 {
  RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(self, outer$, capture$0, capture$1, capture$2, capture$3);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxScheduler:withLong:withJavaUtilConcurrentTimeUnit:withBoolean:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$delay_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$delayError_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxScheduler;JLJavaUtilConcurrentTimeUnit;Z", "LRxCompletable;", "delayWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:withBoolean:" };
  static const J2ObjcClassInfo _RxCompletable_$16 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 5, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$16;
}

@end

void RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(RxCompletable_$16 *self, RxCompletable *outer$, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, jboolean capture$3) {
  self->this$0_ = outer$;
  self->val$scheduler_ = capture$0;
  self->val$delay_ = capture$1;
  self->val$unit_ = capture$2;
  self->val$delayError_ = capture$3;
  NSObject_init(self);
}

RxCompletable_$16 *new_RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(RxCompletable *outer$, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, jboolean capture$3) {
  J2OBJC_NEW_IMPL(RxCompletable_$16, initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_, outer$, capture$0, capture$1, capture$2, capture$3)
}

RxCompletable_$16 *create_RxCompletable_$16_initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_(RxCompletable *outer$, RxScheduler *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, jboolean capture$3) {
  J2OBJC_CREATE_IMPL(RxCompletable_$16, initWithRxCompletable_withRxScheduler_withLong_withJavaUtilConcurrentTimeUnit_withBoolean_, outer$, capture$0, capture$1, capture$2, capture$3)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$16)

@implementation RxCompletable_$16_$1

- (void)onCompleted {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) addWithRxSubscription:[((RxScheduler_Worker *) nil_chk(val$w_)) scheduleWithRxFunctionsAction0:new_RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(self) withLong:this$0_->val$delay_ withJavaUtilConcurrentTimeUnit:this$0_->val$unit_]];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (this$0_->val$delayError_) {
    [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) addWithRxSubscription:[((RxScheduler_Worker *) nil_chk(val$w_)) scheduleWithRxFunctionsAction0:new_RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(self, e) withLong:this$0_->val$delay_ withJavaUtilConcurrentTimeUnit:this$0_->val$unit_]];
  }
  else {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
  }
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsCompositeSubscription *) nil_chk(val$set_)) addWithRxSubscription:d];
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onSubscribeWithRxSubscription:val$set_];
}

- (instancetype)initWithRxCompletable_$16:(RxCompletable_$16 *)outer$
 withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)capture$0
                   withRxScheduler_Worker:(RxScheduler_Worker *)capture$1
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$2 {
  RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$16:withRxSubscriptionsCompositeSubscription:withRxScheduler_Worker:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$16;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$set_", "LRxSubscriptionsCompositeSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$w_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$16;LRxSubscriptionsCompositeSubscription;LRxScheduler_Worker;LRxCompletable_CompletableSubscriber;", "LRxCompletable_$16;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$16_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 4, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$16_$1;
}

@end

void RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(RxCompletable_$16_$1 *self, RxCompletable_$16 *outer$, RxSubscriptionsCompositeSubscription *capture$0, RxScheduler_Worker *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  self->this$0_ = outer$;
  self->val$set_ = capture$0;
  self->val$w_ = capture$1;
  self->val$s_ = capture$2;
  NSObject_init(self);
}

RxCompletable_$16_$1 *new_RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(RxCompletable_$16 *outer$, RxSubscriptionsCompositeSubscription *capture$0, RxScheduler_Worker *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_NEW_IMPL(RxCompletable_$16_$1, initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_, outer$, capture$0, capture$1, capture$2)
}

RxCompletable_$16_$1 *create_RxCompletable_$16_$1_initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_(RxCompletable_$16 *outer$, RxSubscriptionsCompositeSubscription *capture$0, RxScheduler_Worker *capture$1, id<RxCompletable_CompletableSubscriber> capture$2) {
  J2OBJC_CREATE_IMPL(RxCompletable_$16_$1, initWithRxCompletable_$16_withRxSubscriptionsCompositeSubscription_withRxScheduler_Worker_withRxCompletable_CompletableSubscriber_, outer$, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$16_$1)

@implementation RxCompletable_$16_$1_$1

- (void)call {
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onCompleted];
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(this$0_->val$w_)) unsubscribe];
  }
}

- (instancetype)initWithRxCompletable_$16_$1:(RxCompletable_$16_$1 *)outer$ {
  RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$16_$1:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$16_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$16_$1;", "onCompleted" };
  static const J2ObjcClassInfo _RxCompletable_$16_$1_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxCompletable_$16_$1_$1;
}

@end

void RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(RxCompletable_$16_$1_$1 *self, RxCompletable_$16_$1 *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxCompletable_$16_$1_$1 *new_RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(RxCompletable_$16_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxCompletable_$16_$1_$1, initWithRxCompletable_$16_$1_, outer$)
}

RxCompletable_$16_$1_$1 *create_RxCompletable_$16_$1_$1_initWithRxCompletable_$16_$1_(RxCompletable_$16_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxCompletable_$16_$1_$1, initWithRxCompletable_$16_$1_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$16_$1_$1)

@implementation RxCompletable_$16_$1_$2

- (void)call {
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onErrorWithNSException:val$e_];
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(this$0_->val$w_)) unsubscribe];
  }
}

- (instancetype)initWithRxCompletable_$16_$1:(RxCompletable_$16_$1 *)outer$
                             withNSException:(NSException *)capture$0 {
  RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$16_$1:withNSException:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$16_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$e_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$16_$1;LNSException;", "LRxCompletable_$16_$1;", "onErrorWithNSException:" };
  static const J2ObjcClassInfo _RxCompletable_$16_$1_$2 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_RxCompletable_$16_$1_$2;
}

@end

void RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(RxCompletable_$16_$1_$2 *self, RxCompletable_$16_$1 *outer$, NSException *capture$0) {
  self->this$0_ = outer$;
  self->val$e_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$16_$1_$2 *new_RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(RxCompletable_$16_$1 *outer$, NSException *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$16_$1_$2, initWithRxCompletable_$16_$1_withNSException_, outer$, capture$0)
}

RxCompletable_$16_$1_$2 *create_RxCompletable_$16_$1_$2_initWithRxCompletable_$16_$1_withNSException_(RxCompletable_$16_$1 *outer$, NSException *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$16_$1_$2, initWithRxCompletable_$16_$1_withNSException_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$16_$1_$2)

@implementation RxCompletable_$17

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, new_RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(self, s));
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
               withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0
               withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$1
               withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2
               withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$3
               withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$4 {
  RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(self, outer$, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxFunctionsAction0:withRxFunctionsAction0:withRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$onComplete_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$onAfterComplete_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$onError_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$onSubscribe_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "val$onUnsubscribe_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxFunctionsAction0;LRxFunctionsAction0;LRxFunctionsAction1;LRxFunctionsAction1;LRxFunctionsAction0;", "(Lrx/Completable;Lrx/functions/Action0;Lrx/functions/Action0;Lrx/functions/Action1<-Ljava/lang/Throwable;>;Lrx/functions/Action1<-Lrx/Subscription;>;Lrx/functions/Action0;)V", "Lrx/functions/Action1<-Ljava/lang/Throwable;>;", "Lrx/functions/Action1<-Lrx/Subscription;>;", "LRxCompletable;", "doOnLifecycleWithRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:withRxFunctionsAction0:withRxFunctionsAction0:" };
  static const J2ObjcClassInfo _RxCompletable_$17 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 6, 6, -1, 7, -1, -1 };
  return &_RxCompletable_$17;
}

@end

void RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxCompletable_$17 *self, RxCompletable *outer$, id<RxFunctionsAction0> capture$0, id<RxFunctionsAction0> capture$1, id<RxFunctionsAction1> capture$2, id<RxFunctionsAction1> capture$3, id<RxFunctionsAction0> capture$4) {
  self->this$0_ = outer$;
  self->val$onComplete_ = capture$0;
  self->val$onAfterComplete_ = capture$1;
  self->val$onError_ = capture$2;
  self->val$onSubscribe_ = capture$3;
  self->val$onUnsubscribe_ = capture$4;
  NSObject_init(self);
}

RxCompletable_$17 *new_RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxCompletable *outer$, id<RxFunctionsAction0> capture$0, id<RxFunctionsAction0> capture$1, id<RxFunctionsAction1> capture$2, id<RxFunctionsAction1> capture$3, id<RxFunctionsAction0> capture$4) {
  J2OBJC_NEW_IMPL(RxCompletable_$17, initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4)
}

RxCompletable_$17 *create_RxCompletable_$17_initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxCompletable *outer$, id<RxFunctionsAction0> capture$0, id<RxFunctionsAction0> capture$1, id<RxFunctionsAction1> capture$2, id<RxFunctionsAction1> capture$3, id<RxFunctionsAction0> capture$4) {
  J2OBJC_CREATE_IMPL(RxCompletable_$17, initWithRxCompletable_withRxFunctionsAction0_withRxFunctionsAction0_withRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_, outer$, capture$0, capture$1, capture$2, capture$3, capture$4)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$17)

@implementation RxCompletable_$17_$1

- (void)onCompleted {
  @try {
    [((id<RxFunctionsAction0>) nil_chk(this$0_->val$onComplete_)) call];
  }
  @catch (NSException *e) {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
    return;
  }
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
  @try {
    [((id<RxFunctionsAction0>) nil_chk(this$0_->val$onAfterComplete_)) call];
  }
  @catch (NSException *e) {
    [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  @try {
    [((id<RxFunctionsAction1>) nil_chk(this$0_->val$onError_)) callWithId:e];
  }
  @catch (NSException *ex) {
    e = new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]));
  }
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  @try {
    [((id<RxFunctionsAction1>) nil_chk(this$0_->val$onSubscribe_)) callWithId:d];
  }
  @catch (NSException *ex) {
    [((id<RxSubscription>) nil_chk(d)) unsubscribe];
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_unsubscribed()];
    [val$s_ onErrorWithNSException:ex];
    return;
  }
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(self, d))];
}

- (instancetype)initWithRxCompletable_$17:(RxCompletable_$17 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0 {
  RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$17:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$17;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$17;LRxCompletable_CompletableSubscriber;", "LRxCompletable_$17;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$17_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$17_$1;
}

@end

void RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(RxCompletable_$17_$1 *self, RxCompletable_$17 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  self->this$0_ = outer$;
  self->val$s_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$17_$1 *new_RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(RxCompletable_$17 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$17_$1, initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_, outer$, capture$0)
}

RxCompletable_$17_$1 *create_RxCompletable_$17_$1_initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_(RxCompletable_$17 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$17_$1, initWithRxCompletable_$17_withRxCompletable_CompletableSubscriber_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$17_$1)

@implementation RxCompletable_$17_$1_$1

- (void)call {
  @try {
    [((id<RxFunctionsAction0>) nil_chk(this$0_->this$0_->val$onUnsubscribe_)) call];
  }
  @catch (NSException *e) {
    [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
  }
  [((id<RxSubscription>) nil_chk(val$d_)) unsubscribe];
}

- (instancetype)initWithRxCompletable_$17_$1:(RxCompletable_$17_$1 *)outer$
                          withRxSubscription:(id<RxSubscription>)capture$0 {
  RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$17_$1:withRxSubscription:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$17_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$d_", "LRxSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$17_$1;LRxSubscription;", "LRxCompletable_$17_$1;", "onSubscribeWithRxSubscription:" };
  static const J2ObjcClassInfo _RxCompletable_$17_$1_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_RxCompletable_$17_$1_$1;
}

@end

void RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(RxCompletable_$17_$1_$1 *self, RxCompletable_$17_$1 *outer$, id<RxSubscription> capture$0) {
  self->this$0_ = outer$;
  self->val$d_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$17_$1_$1 *new_RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(RxCompletable_$17_$1 *outer$, id<RxSubscription> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$17_$1_$1, initWithRxCompletable_$17_$1_withRxSubscription_, outer$, capture$0)
}

RxCompletable_$17_$1_$1 *create_RxCompletable_$17_$1_$1_initWithRxCompletable_$17_$1_withRxSubscription_(RxCompletable_$17_$1 *outer$, id<RxSubscription> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$17_$1_$1, initWithRxCompletable_$17_$1_withRxSubscription_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$17_$1_$1)

@implementation RxCompletable_$18

- (void)callWithId:(NSException *)e {
  [((id<RxFunctionsAction0>) nil_chk(val$onTerminate_)) call];
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0 {
  RxCompletable_$18_initWithRxFunctionsAction0_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxFunctionsAction0:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$onTerminate_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LRxFunctionsAction0;", "LRxCompletable;", "doOnTerminateWithRxFunctionsAction0:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxCompletable_$18 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxCompletable_$18;
}

@end

void RxCompletable_$18_initWithRxFunctionsAction0_(RxCompletable_$18 *self, id<RxFunctionsAction0> capture$0) {
  self->val$onTerminate_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$18 *new_RxCompletable_$18_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$18, initWithRxFunctionsAction0_, capture$0)
}

RxCompletable_$18 *create_RxCompletable_$18_initWithRxFunctionsAction0_(id<RxFunctionsAction0> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$18, initWithRxFunctionsAction0_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$18)

@implementation RxCompletable_$19

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  (void) IOSObjectArray_Set(nil_chk(val$err_), 0, e);
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1 {
  RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentCountDownLatch:withNSExceptionArray:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$cdl_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$err_", "[LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LJavaUtilConcurrentCountDownLatch;[LNSException;", "LRxCompletable;", "get" };
  static const J2ObjcClassInfo _RxCompletable_$19 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$19;
}

@end

void RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$19 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  self->val$cdl_ = capture$0;
  self->val$err_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$19 *new_RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$19, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

RxCompletable_$19 *create_RxCompletable_$19_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$19, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$19)

@implementation RxCompletable_$20

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  (void) IOSObjectArray_Set(nil_chk(val$err_), 0, e);
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
                                    withNSExceptionArray:(IOSObjectArray *)capture$1 {
  RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentCountDownLatch:withNSExceptionArray:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$cdl_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$err_", "[LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LJavaUtilConcurrentCountDownLatch;[LNSException;", "LRxCompletable;", "getWithLong:withJavaUtilConcurrentTimeUnit:" };
  static const J2ObjcClassInfo _RxCompletable_$20 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$20;
}

@end

void RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(RxCompletable_$20 *self, JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  self->val$cdl_ = capture$0;
  self->val$err_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$20 *new_RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$20, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

RxCompletable_$20 *create_RxCompletable_$20_initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_(JavaUtilConcurrentCountDownLatch *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$20, initWithJavaUtilConcurrentCountDownLatch_withNSExceptionArray_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$20)

@implementation RxCompletable_$21

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  @try {
    id<RxCompletable_CompletableOperator> onLiftDecorated = [((RxPluginsRxJavaCompletableExecutionHook *) nil_chk(JreLoadStatic(RxCompletable, HOOK))) onLiftWithRxCompletable_CompletableOperator:val$onLift_];
    id<RxCompletable_CompletableSubscriber> sw = [((id<RxCompletable_CompletableOperator>) nil_chk(onLiftDecorated)) callWithId:s];
    RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, sw);
  }
  @catch (JavaLangNullPointerException *ex) {
    @throw ex;
  }
  @catch (NSException *ex) {
    @throw RxCompletable_toNpeWithNSException_(ex);
  }
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
withRxCompletable_CompletableOperator:(id<RxCompletable_CompletableOperator>)capture$0 {
  RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxCompletable_CompletableOperator:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$onLift_", "LRxCompletable_CompletableOperator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxCompletable_CompletableOperator;", "LRxCompletable;", "liftWithRxCompletable_CompletableOperator:" };
  static const J2ObjcClassInfo _RxCompletable_$21 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$21;
}

@end

void RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(RxCompletable_$21 *self, RxCompletable *outer$, id<RxCompletable_CompletableOperator> capture$0) {
  self->this$0_ = outer$;
  self->val$onLift_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$21 *new_RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(RxCompletable *outer$, id<RxCompletable_CompletableOperator> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$21, initWithRxCompletable_withRxCompletable_CompletableOperator_, outer$, capture$0)
}

RxCompletable_$21 *create_RxCompletable_$21_initWithRxCompletable_withRxCompletable_CompletableOperator_(RxCompletable *outer$, id<RxCompletable_CompletableOperator> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$21, initWithRxCompletable_withRxCompletable_CompletableOperator_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$21)

@implementation RxCompletable_$22

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxInternalUtilSubscriptionList *ad = new_RxInternalUtilSubscriptionList_init();
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(val$scheduler_)) createWorker];
  [ad addWithRxSubscription:w];
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(s)) onSubscribeWithRxSubscription:ad];
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, new_RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(w, s, ad));
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0 {
  RxCompletable_$22_initWithRxCompletable_withRxScheduler_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxScheduler:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxScheduler;", "LRxCompletable;", "observeOnWithRxScheduler:" };
  static const J2ObjcClassInfo _RxCompletable_$22 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$22;
}

@end

void RxCompletable_$22_initWithRxCompletable_withRxScheduler_(RxCompletable_$22 *self, RxCompletable *outer$, RxScheduler *capture$0) {
  self->this$0_ = outer$;
  self->val$scheduler_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$22 *new_RxCompletable_$22_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$22, initWithRxCompletable_withRxScheduler_, outer$, capture$0)
}

RxCompletable_$22 *create_RxCompletable_$22_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$22, initWithRxCompletable_withRxScheduler_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$22)

@implementation RxCompletable_$22_$1

- (void)onCompleted {
  (void) [((RxScheduler_Worker *) nil_chk(val$w_)) scheduleWithRxFunctionsAction0:new_RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(self)];
}

- (void)onErrorWithNSException:(NSException *)e {
  (void) [((RxScheduler_Worker *) nil_chk(val$w_)) scheduleWithRxFunctionsAction0:new_RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(self, e)];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxInternalUtilSubscriptionList *) nil_chk(val$ad_)) addWithRxSubscription:d];
}

- (instancetype)initWithRxScheduler_Worker:(RxScheduler_Worker *)capture$0
   withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$1
        withRxInternalUtilSubscriptionList:(RxInternalUtilSubscriptionList *)capture$2 {
  RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxScheduler_Worker:withRxCompletable_CompletableSubscriber:withRxInternalUtilSubscriptionList:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$w_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$ad_", "LRxInternalUtilSubscriptionList;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxScheduler_Worker;LRxCompletable_CompletableSubscriber;LRxInternalUtilSubscriptionList;", "LRxCompletable_$22;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$22_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 3, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$22_$1;
}

@end

void RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(RxCompletable_$22_$1 *self, RxScheduler_Worker *capture$0, id<RxCompletable_CompletableSubscriber> capture$1, RxInternalUtilSubscriptionList *capture$2) {
  self->val$w_ = capture$0;
  self->val$s_ = capture$1;
  self->val$ad_ = capture$2;
  NSObject_init(self);
}

RxCompletable_$22_$1 *new_RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(RxScheduler_Worker *capture$0, id<RxCompletable_CompletableSubscriber> capture$1, RxInternalUtilSubscriptionList *capture$2) {
  J2OBJC_NEW_IMPL(RxCompletable_$22_$1, initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_, capture$0, capture$1, capture$2)
}

RxCompletable_$22_$1 *create_RxCompletable_$22_$1_initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_(RxScheduler_Worker *capture$0, id<RxCompletable_CompletableSubscriber> capture$1, RxInternalUtilSubscriptionList *capture$2) {
  J2OBJC_CREATE_IMPL(RxCompletable_$22_$1, initWithRxScheduler_Worker_withRxCompletable_CompletableSubscriber_withRxInternalUtilSubscriptionList_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$22_$1)

@implementation RxCompletable_$22_$1_$1

- (void)call {
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onCompleted];
  }
  @finally {
    [((RxInternalUtilSubscriptionList *) nil_chk(this$0_->val$ad_)) unsubscribe];
  }
}

- (instancetype)initWithRxCompletable_$22_$1:(RxCompletable_$22_$1 *)outer$ {
  RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$22_$1:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$22_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$22_$1;", "onCompleted" };
  static const J2ObjcClassInfo _RxCompletable_$22_$1_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxCompletable_$22_$1_$1;
}

@end

void RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(RxCompletable_$22_$1_$1 *self, RxCompletable_$22_$1 *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxCompletable_$22_$1_$1 *new_RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(RxCompletable_$22_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxCompletable_$22_$1_$1, initWithRxCompletable_$22_$1_, outer$)
}

RxCompletable_$22_$1_$1 *create_RxCompletable_$22_$1_$1_initWithRxCompletable_$22_$1_(RxCompletable_$22_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxCompletable_$22_$1_$1, initWithRxCompletable_$22_$1_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$22_$1_$1)

@implementation RxCompletable_$22_$1_$2

- (void)call {
  @try {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onErrorWithNSException:val$e_];
  }
  @finally {
    [((RxInternalUtilSubscriptionList *) nil_chk(this$0_->val$ad_)) unsubscribe];
  }
}

- (instancetype)initWithRxCompletable_$22_$1:(RxCompletable_$22_$1 *)outer$
                             withNSException:(NSException *)capture$0 {
  RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$22_$1:withNSException:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$22_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$e_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$22_$1;LNSException;", "LRxCompletable_$22_$1;", "onErrorWithNSException:" };
  static const J2ObjcClassInfo _RxCompletable_$22_$1_$2 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_RxCompletable_$22_$1_$2;
}

@end

void RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(RxCompletable_$22_$1_$2 *self, RxCompletable_$22_$1 *outer$, NSException *capture$0) {
  self->this$0_ = outer$;
  self->val$e_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$22_$1_$2 *new_RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(RxCompletable_$22_$1 *outer$, NSException *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$22_$1_$2, initWithRxCompletable_$22_$1_withNSException_, outer$, capture$0)
}

RxCompletable_$22_$1_$2 *create_RxCompletable_$22_$1_$2_initWithRxCompletable_$22_$1_withNSException_(RxCompletable_$22_$1 *outer$, NSException *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$22_$1_$2, initWithRxCompletable_$22_$1_withNSException_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$22_$1_$2)

@implementation RxCompletable_$23

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, new_RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(self, s));
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                 withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0 {
  RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxFunctionsFunc1:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$predicate_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxFunctionsFunc1;", "(Lrx/Completable;Lrx/functions/Func1<-Ljava/lang/Throwable;Ljava/lang/Boolean;>;)V", "Lrx/functions/Func1<-Ljava/lang/Throwable;Ljava/lang/Boolean;>;", "LRxCompletable;", "onErrorCompleteWithRxFunctionsFunc1:" };
  static const J2ObjcClassInfo _RxCompletable_$23 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$23;
}

@end

void RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable_$23 *self, RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) {
  self->this$0_ = outer$;
  self->val$predicate_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$23 *new_RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$23, initWithRxCompletable_withRxFunctionsFunc1_, outer$, capture$0)
}

RxCompletable_$23 *create_RxCompletable_$23_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$23, initWithRxCompletable_withRxFunctionsFunc1_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$23)

@implementation RxCompletable_$23_$1

- (void)onCompleted {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  jboolean b;
  @try {
    b = [((JavaLangBoolean *) nil_chk([((id<RxFunctionsFunc1>) nil_chk(this$0_->val$predicate_)) callWithId:e])) booleanValue];
  }
  @catch (NSException *ex) {
    e = new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]));
    return;
  }
  if (b) {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
  }
  else {
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
  }
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onSubscribeWithRxSubscription:d];
}

- (instancetype)initWithRxCompletable_$23:(RxCompletable_$23 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0 {
  RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$23:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$23;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$23;LRxCompletable_CompletableSubscriber;", "LRxCompletable_$23;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$23_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$23_$1;
}

@end

void RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(RxCompletable_$23_$1 *self, RxCompletable_$23 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  self->this$0_ = outer$;
  self->val$s_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$23_$1 *new_RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(RxCompletable_$23 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$23_$1, initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_, outer$, capture$0)
}

RxCompletable_$23_$1 *create_RxCompletable_$23_$1_initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_(RxCompletable_$23 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$23_$1, initWithRxCompletable_$23_withRxCompletable_CompletableSubscriber_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$23_$1)

@implementation RxCompletable_$24

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxSubscriptionsSerialSubscription *sd = new_RxSubscriptionsSerialSubscription_init();
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, new_RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(self, s, sd));
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                 withRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0 {
  RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxFunctionsFunc1:", NULL, 0x0, -1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$errorMapper_", "LRxFunctionsFunc1;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxFunctionsFunc1;", "(Lrx/Completable;Lrx/functions/Func1<-Ljava/lang/Throwable;+Lrx/Completable;>;)V", "Lrx/functions/Func1<-Ljava/lang/Throwable;+Lrx/Completable;>;", "LRxCompletable;", "onErrorResumeNextWithRxFunctionsFunc1:" };
  static const J2ObjcClassInfo _RxCompletable_$24 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$24;
}

@end

void RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable_$24 *self, RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) {
  self->this$0_ = outer$;
  self->val$errorMapper_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$24 *new_RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$24, initWithRxCompletable_withRxFunctionsFunc1_, outer$, capture$0)
}

RxCompletable_$24 *create_RxCompletable_$24_initWithRxCompletable_withRxFunctionsFunc1_(RxCompletable *outer$, id<RxFunctionsFunc1> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$24, initWithRxCompletable_withRxFunctionsFunc1_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$24)

@implementation RxCompletable_$24_$1

- (void)onCompleted {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  RxCompletable *c;
  @try {
    c = [((id<RxFunctionsFunc1>) nil_chk(this$0_->val$errorMapper_)) callWithId:e];
  }
  @catch (NSException *ex) {
    e = new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]));
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
    return;
  }
  if (c == nil) {
    JavaLangNullPointerException *npe = new_JavaLangNullPointerException_initWithNSString_(@"The completable returned is null");
    e = new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, npe } count:2 type:NSException_class_()]));
    [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
    return;
  }
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(c, new_RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(self));
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsSerialSubscription *) nil_chk(val$sd_)) setWithRxSubscription:d];
}

- (instancetype)initWithRxCompletable_$24:(RxCompletable_$24 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0
    withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)capture$1 {
  RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$24:withRxCompletable_CompletableSubscriber:withRxSubscriptionsSerialSubscription:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$24;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sd_", "LRxSubscriptionsSerialSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$24;LRxCompletable_CompletableSubscriber;LRxSubscriptionsSerialSubscription;", "LRxCompletable_$24;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$24_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 3, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$24_$1;
}

@end

void RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(RxCompletable_$24_$1 *self, RxCompletable_$24 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxSubscriptionsSerialSubscription *capture$1) {
  self->this$0_ = outer$;
  self->val$s_ = capture$0;
  self->val$sd_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$24_$1 *new_RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(RxCompletable_$24 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxSubscriptionsSerialSubscription *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$24_$1, initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1)
}

RxCompletable_$24_$1 *create_RxCompletable_$24_$1_initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_(RxCompletable_$24 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxSubscriptionsSerialSubscription *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$24_$1, initWithRxCompletable_$24_withRxCompletable_CompletableSubscriber_withRxSubscriptionsSerialSubscription_, outer$, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$24_$1)

@implementation RxCompletable_$24_$1_$1

- (void)onCompleted {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(this$0_->val$s_)) onErrorWithNSException:e];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsSerialSubscription *) nil_chk(this$0_->val$sd_)) setWithRxSubscription:d];
}

- (instancetype)initWithRxCompletable_$24_$1:(RxCompletable_$24_$1 *)outer$ {
  RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$24_$1:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$24_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$24_$1;", "onErrorWithNSException:" };
  static const J2ObjcClassInfo _RxCompletable_$24_$1_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 1, 4, -1, 5, -1, -1 };
  return &_RxCompletable_$24_$1_$1;
}

@end

void RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(RxCompletable_$24_$1_$1 *self, RxCompletable_$24_$1 *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxCompletable_$24_$1_$1 *new_RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(RxCompletable_$24_$1 *outer$) {
  J2OBJC_NEW_IMPL(RxCompletable_$24_$1_$1, initWithRxCompletable_$24_$1_, outer$)
}

RxCompletable_$24_$1_$1 *create_RxCompletable_$24_$1_$1_initWithRxCompletable_$24_$1_(RxCompletable_$24_$1 *outer$) {
  J2OBJC_CREATE_IMPL(RxCompletable_$24_$1_$1, initWithRxCompletable_$24_$1_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$24_$1_$1)

@implementation RxCompletable_$25

- (void)onCompleted {
  [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) unsubscribe];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
  [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) unsubscribe];
  RxCompletable_deliverUncaughtExceptionWithNSException_(e);
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) setWithRxSubscription:d];
}

- (instancetype)initWithRxSubscriptionsMultipleAssignmentSubscription:(RxSubscriptionsMultipleAssignmentSubscription *)capture$0 {
  RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxSubscriptionsMultipleAssignmentSubscription:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$mad_", "LRxSubscriptionsMultipleAssignmentSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxSubscriptionsMultipleAssignmentSubscription;", "LRxCompletable;", "subscribe" };
  static const J2ObjcClassInfo _RxCompletable_$25 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 1, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$25;
}

@end

void RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(RxCompletable_$25 *self, RxSubscriptionsMultipleAssignmentSubscription *capture$0) {
  self->val$mad_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$25 *new_RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(RxSubscriptionsMultipleAssignmentSubscription *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$25, initWithRxSubscriptionsMultipleAssignmentSubscription_, capture$0)
}

RxCompletable_$25 *create_RxCompletable_$25_initWithRxSubscriptionsMultipleAssignmentSubscription_(RxSubscriptionsMultipleAssignmentSubscription *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$25, initWithRxSubscriptionsMultipleAssignmentSubscription_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$25)

@implementation RxCompletable_$26

- (void)onCompleted {
  if (!done_) {
    done_ = true;
    @try {
      [((id<RxFunctionsAction0>) nil_chk(val$onComplete_)) call];
    }
    @catch (NSException *e) {
      [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
      RxCompletable_deliverUncaughtExceptionWithNSException_(e);
    }
    @finally {
      [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) unsubscribe];
    }
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
  [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) unsubscribe];
  RxCompletable_deliverUncaughtExceptionWithNSException_(e);
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) setWithRxSubscription:d];
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0
withRxSubscriptionsMultipleAssignmentSubscription:(RxSubscriptionsMultipleAssignmentSubscription *)capture$1 {
  RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxFunctionsAction0:withRxSubscriptionsMultipleAssignmentSubscription:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$onComplete_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$mad_", "LRxSubscriptionsMultipleAssignmentSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxFunctionsAction0;LRxSubscriptionsMultipleAssignmentSubscription;", "LRxCompletable;", "subscribeWithRxFunctionsAction0:" };
  static const J2ObjcClassInfo _RxCompletable_$26 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 3, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$26;
}

@end

void RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(RxCompletable_$26 *self, id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1) {
  self->val$onComplete_ = capture$0;
  self->val$mad_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$26 *new_RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$26, initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_, capture$0, capture$1)
}

RxCompletable_$26 *create_RxCompletable_$26_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$26, initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$26)

@implementation RxCompletable_$27

- (void)onCompleted {
  if (!done_) {
    done_ = true;
    @try {
      [((id<RxFunctionsAction0>) nil_chk(val$onComplete_)) call];
    }
    @catch (NSException *e) {
      [self callOnErrorWithNSException:e];
      return;
    }
    [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) unsubscribe];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (!done_) {
    done_ = true;
    [self callOnErrorWithNSException:e];
  }
  else {
    [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
    RxCompletable_deliverUncaughtExceptionWithNSException_(e);
  }
}

- (void)callOnErrorWithNSException:(NSException *)e {
  @try {
    [((id<RxFunctionsAction1>) nil_chk(val$onError_)) callWithId:e];
  }
  @catch (NSException *ex) {
    e = new_RxExceptionsCompositeException_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]));
    [((RxPluginsRxJavaErrorHandler *) nil_chk(JreLoadStatic(RxCompletable, ERROR_HANDLER))) handleErrorWithNSException:e];
    RxCompletable_deliverUncaughtExceptionWithNSException_(e);
  }
  @finally {
    [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) unsubscribe];
  }
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriptionsMultipleAssignmentSubscription *) nil_chk(val$mad_)) setWithRxSubscription:d];
}

- (instancetype)initWithRxFunctionsAction0:(id<RxFunctionsAction0>)capture$0
withRxSubscriptionsMultipleAssignmentSubscription:(RxSubscriptionsMultipleAssignmentSubscription *)capture$1
                    withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2 {
  RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "callOnErrorWithNSException:", "V", 0x0, 2, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "initWithRxFunctionsAction0:withRxSubscriptionsMultipleAssignmentSubscription:withRxFunctionsAction1:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$onComplete_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$mad_", "LRxSubscriptionsMultipleAssignmentSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$onError_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "callOnError", "onSubscribe", "LRxSubscription;", "LRxFunctionsAction0;LRxSubscriptionsMultipleAssignmentSubscription;LRxFunctionsAction1;", "(Lrx/functions/Action0;Lrx/subscriptions/MultipleAssignmentSubscription;Lrx/functions/Action1<-Ljava/lang/Throwable;>;)V", "Lrx/functions/Action1<-Ljava/lang/Throwable;>;", "LRxCompletable;", "subscribeWithRxFunctionsAction1:withRxFunctionsAction0:" };
  static const J2ObjcClassInfo _RxCompletable_$27 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 5, 4, 8, -1, 9, -1, -1 };
  return &_RxCompletable_$27;
}

@end

void RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(RxCompletable_$27 *self, id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1, id<RxFunctionsAction1> capture$2) {
  self->val$onComplete_ = capture$0;
  self->val$mad_ = capture$1;
  self->val$onError_ = capture$2;
  NSObject_init(self);
}

RxCompletable_$27 *new_RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1, id<RxFunctionsAction1> capture$2) {
  J2OBJC_NEW_IMPL(RxCompletable_$27, initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_, capture$0, capture$1, capture$2)
}

RxCompletable_$27 *create_RxCompletable_$27_initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_(id<RxFunctionsAction0> capture$0, RxSubscriptionsMultipleAssignmentSubscription *capture$1, id<RxFunctionsAction1> capture$2) {
  J2OBJC_CREATE_IMPL(RxCompletable_$27, initWithRxFunctionsAction0_withRxSubscriptionsMultipleAssignmentSubscription_withRxFunctionsAction1_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$27)

@implementation RxCompletable_$28

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(val$s_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(val$s_)) onErrorWithNSException:e];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSubscriber *) nil_chk(val$s_)) addWithRxSubscription:d];
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)capture$0 {
  RxCompletable_$28_initWithRxSubscriber_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxSubscriber:", NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LRxSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxSubscriber;", "(Lrx/Subscriber<TT;>;)V", "Lrx/Subscriber<TT;>;", "LRxCompletable;", "unsafeSubscribeWithRxSubscriber:withBoolean:" };
  static const J2ObjcClassInfo _RxCompletable_$28 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 1, 7, -1, 8, -1, -1 };
  return &_RxCompletable_$28;
}

@end

void RxCompletable_$28_initWithRxSubscriber_(RxCompletable_$28 *self, RxSubscriber *capture$0) {
  self->val$s_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$28 *new_RxCompletable_$28_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$28, initWithRxSubscriber_, capture$0)
}

RxCompletable_$28 *create_RxCompletable_$28_initWithRxSubscriber_(RxSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$28, initWithRxSubscriber_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$28)

@implementation RxCompletable_$29

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(val$scheduler_)) createWorker];
  (void) [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:new_RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(self, s, w)];
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0 {
  RxCompletable_$29_initWithRxCompletable_withRxScheduler_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxScheduler:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxScheduler;", "LRxCompletable;", "subscribeOnWithRxScheduler:" };
  static const J2ObjcClassInfo _RxCompletable_$29 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$29;
}

@end

void RxCompletable_$29_initWithRxCompletable_withRxScheduler_(RxCompletable_$29 *self, RxCompletable *outer$, RxScheduler *capture$0) {
  self->this$0_ = outer$;
  self->val$scheduler_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$29 *new_RxCompletable_$29_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$29, initWithRxCompletable_withRxScheduler_, outer$, capture$0)
}

RxCompletable_$29 *create_RxCompletable_$29_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$29, initWithRxCompletable_withRxScheduler_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$29)

@implementation RxCompletable_$29_$1

- (void)call {
  @try {
    RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_->this$0_, val$s_);
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(val$w_)) unsubscribe];
  }
}

- (instancetype)initWithRxCompletable_$29:(RxCompletable_$29 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0
                   withRxScheduler_Worker:(RxScheduler_Worker *)capture$1 {
  RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$29:withRxCompletable_CompletableSubscriber:withRxScheduler_Worker:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$29;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$w_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$29;LRxCompletable_CompletableSubscriber;LRxScheduler_Worker;", "LRxCompletable_$29;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$29_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 3, 1, -1, 2, -1, -1 };
  return &_RxCompletable_$29_$1;
}

@end

void RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$29_$1 *self, RxCompletable_$29 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) {
  self->this$0_ = outer$;
  self->val$s_ = capture$0;
  self->val$w_ = capture$1;
  NSObject_init(self);
}

RxCompletable_$29_$1 *new_RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$29 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) {
  J2OBJC_NEW_IMPL(RxCompletable_$29_$1, initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_, outer$, capture$0, capture$1)
}

RxCompletable_$29_$1 *create_RxCompletable_$29_$1_initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_(RxCompletable_$29 *outer$, id<RxCompletable_CompletableSubscriber> capture$0, RxScheduler_Worker *capture$1) {
  J2OBJC_CREATE_IMPL(RxCompletable_$29_$1, initWithRxCompletable_$29_withRxCompletable_CompletableSubscriber_withRxScheduler_Worker_, outer$, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$29_$1)

@implementation RxCompletable_$30

- (void)callWithId:(RxSubscriber *)s {
  RxCompletable_unsafeSubscribeWithRxSubscriber_(this$0_, s);
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$ {
  RxCompletable_$30_initWithRxCompletable_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "initWithRxCompletable:", NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "LRxCompletable;", "toObservable", "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxCompletable_$30 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RxCompletable_$30;
}

@end

void RxCompletable_$30_initWithRxCompletable_(RxCompletable_$30 *self, RxCompletable *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxCompletable_$30 *new_RxCompletable_$30_initWithRxCompletable_(RxCompletable *outer$) {
  J2OBJC_NEW_IMPL(RxCompletable_$30, initWithRxCompletable_, outer$)
}

RxCompletable_$30 *create_RxCompletable_$30_initWithRxCompletable_(RxCompletable *outer$) {
  J2OBJC_CREATE_IMPL(RxCompletable_$30, initWithRxCompletable_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$30)

@implementation RxCompletable_$31

- (void)callWithId:(RxSingleSubscriber *)s {
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, new_RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(self, s));
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                 withRxFunctionsFunc0:(id<RxFunctionsFunc0>)capture$0 {
  RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "initWithRxCompletable:withRxFunctionsFunc0:", NULL, 0x0, -1, 3, -1, 4, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$completionValueFunc0_", "LRxFunctionsFunc0;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxSingleSubscriber;", "(Lrx/SingleSubscriber<-TT;>;)V", "LRxCompletable;LRxFunctionsFunc0;", "(Lrx/Completable;Lrx/functions/Func0<+TT;>;)V", "Lrx/functions/Func0<+TT;>;", "LRxCompletable;", "toSingleWithRxFunctionsFunc0:", "Ljava/lang/Object;Lrx/Single$OnSubscribe<TT;>;" };
  static const J2ObjcClassInfo _RxCompletable_$31 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 6, -1, 7, 8, -1 };
  return &_RxCompletable_$31;
}

@end

void RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(RxCompletable_$31 *self, RxCompletable *outer$, id<RxFunctionsFunc0> capture$0) {
  self->this$0_ = outer$;
  self->val$completionValueFunc0_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$31 *new_RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(RxCompletable *outer$, id<RxFunctionsFunc0> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$31, initWithRxCompletable_withRxFunctionsFunc0_, outer$, capture$0)
}

RxCompletable_$31 *create_RxCompletable_$31_initWithRxCompletable_withRxFunctionsFunc0_(RxCompletable *outer$, id<RxFunctionsFunc0> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$31, initWithRxCompletable_withRxFunctionsFunc0_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$31)

@implementation RxCompletable_$31_$1

- (void)onCompleted {
  id v;
  @try {
    v = [((id<RxFunctionsFunc0>) nil_chk(this$0_->val$completionValueFunc0_)) call];
  }
  @catch (NSException *e) {
    [((RxSingleSubscriber *) nil_chk(val$s_)) onErrorWithNSException:e];
    return;
  }
  if (v == nil) {
    [((RxSingleSubscriber *) nil_chk(val$s_)) onErrorWithNSException:new_JavaLangNullPointerException_initWithNSString_(@"The value supplied is null")];
  }
  else {
    [((RxSingleSubscriber *) nil_chk(val$s_)) onSuccessWithId:v];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSingleSubscriber *) nil_chk(val$s_)) onErrorWithNSException:e];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((RxSingleSubscriber *) nil_chk(val$s_)) addWithRxSubscription:d];
}

- (instancetype)initWithRxCompletable_$31:(RxCompletable_$31 *)outer$
                   withRxSingleSubscriber:(RxSingleSubscriber *)capture$0 {
  RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$31:withRxSingleSubscriber:", NULL, 0x0, -1, 4, -1, 5, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$31;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxSingleSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$31;LRxSingleSubscriber;", "(Lrx/Completable$31;Lrx/SingleSubscriber<-TT;>;)V", "Lrx/SingleSubscriber<-TT;>;", "LRxCompletable_$31;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$31_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 7, -1, 8, -1, -1 };
  return &_RxCompletable_$31_$1;
}

@end

void RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(RxCompletable_$31_$1 *self, RxCompletable_$31 *outer$, RxSingleSubscriber *capture$0) {
  self->this$0_ = outer$;
  self->val$s_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$31_$1 *new_RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(RxCompletable_$31 *outer$, RxSingleSubscriber *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$31_$1, initWithRxCompletable_$31_withRxSingleSubscriber_, outer$, capture$0)
}

RxCompletable_$31_$1 *create_RxCompletable_$31_$1_initWithRxCompletable_$31_withRxSingleSubscriber_(RxCompletable_$31 *outer$, RxSingleSubscriber *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$31_$1, initWithRxCompletable_$31_withRxSingleSubscriber_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$31_$1)

@implementation RxCompletable_$32

- (id)call {
  return val$completionValue_;
}

- (instancetype)initWithId:(id)capture$0 {
  RxCompletable_$32_initWithId_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
    { "initWithId:", NULL, 0x0, -1, 1, -1, 2, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$completionValue_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "LNSObject;", "(TT;)V", "TT;", "LRxCompletable;", "toSingleDefaultWithId:", "Ljava/lang/Object;Lrx/functions/Func0<TT;>;" };
  static const J2ObjcClassInfo _RxCompletable_$32 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RxCompletable_$32;
}

@end

void RxCompletable_$32_initWithId_(RxCompletable_$32 *self, id capture$0) {
  self->val$completionValue_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$32 *new_RxCompletable_$32_initWithId_(id capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$32, initWithId_, capture$0)
}

RxCompletable_$32 *create_RxCompletable_$32_initWithId_(id capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$32, initWithId_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$32)

@implementation RxCompletable_$33

- (void)callWithId:(id<RxCompletable_CompletableSubscriber>)s {
  RxCompletable_unsafeSubscribeWithRxCompletable_CompletableSubscriber_(this$0_, new_RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(self, s));
}

- (instancetype)initWithRxCompletable:(RxCompletable *)outer$
                      withRxScheduler:(RxScheduler *)capture$0 {
  RxCompletable_$33_initWithRxCompletable_withRxScheduler_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "initWithRxCompletable:withRxScheduler:", NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRxCompletable_CompletableSubscriber;", "LRxCompletable;LRxScheduler;", "LRxCompletable;", "unsubscribeOnWithRxScheduler:" };
  static const J2ObjcClassInfo _RxCompletable_$33 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, -1, -1 };
  return &_RxCompletable_$33;
}

@end

void RxCompletable_$33_initWithRxCompletable_withRxScheduler_(RxCompletable_$33 *self, RxCompletable *outer$, RxScheduler *capture$0) {
  self->this$0_ = outer$;
  self->val$scheduler_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$33 *new_RxCompletable_$33_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$33, initWithRxCompletable_withRxScheduler_, outer$, capture$0)
}

RxCompletable_$33 *create_RxCompletable_$33_initWithRxCompletable_withRxScheduler_(RxCompletable *outer$, RxScheduler *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$33, initWithRxCompletable_withRxScheduler_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$33)

@implementation RxCompletable_$33_$1

- (void)onCompleted {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onErrorWithNSException:e];
}

- (void)onSubscribeWithRxSubscription:(id<RxSubscription>)d {
  [((id<RxCompletable_CompletableSubscriber>) nil_chk(val$s_)) onSubscribeWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(self, d))];
}

- (instancetype)initWithRxCompletable_$33:(RxCompletable_$33 *)outer$
  withRxCompletable_CompletableSubscriber:(id<RxCompletable_CompletableSubscriber>)capture$0 {
  RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onSubscribeWithRxSubscription:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "initWithRxCompletable_$33:withRxCompletable_CompletableSubscriber:", NULL, 0x0, -1, 4, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$33;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LRxCompletable_CompletableSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LRxSubscription;", "LRxCompletable_$33;LRxCompletable_CompletableSubscriber;", "LRxCompletable_$33;", "callWithId:" };
  static const J2ObjcClassInfo _RxCompletable_$33_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 4, 2, 5, -1, 6, -1, -1 };
  return &_RxCompletable_$33_$1;
}

@end

void RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(RxCompletable_$33_$1 *self, RxCompletable_$33 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  self->this$0_ = outer$;
  self->val$s_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$33_$1 *new_RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(RxCompletable_$33 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$33_$1, initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_, outer$, capture$0)
}

RxCompletable_$33_$1 *create_RxCompletable_$33_$1_initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_(RxCompletable_$33 *outer$, id<RxCompletable_CompletableSubscriber> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$33_$1, initWithRxCompletable_$33_withRxCompletable_CompletableSubscriber_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$33_$1)

@implementation RxCompletable_$33_$1_$1

- (void)call {
  RxScheduler_Worker *w = [((RxScheduler *) nil_chk(this$0_->this$0_->val$scheduler_)) createWorker];
  (void) [((RxScheduler_Worker *) nil_chk(w)) scheduleWithRxFunctionsAction0:new_RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(self, w)];
}

- (instancetype)initWithRxCompletable_$33_$1:(RxCompletable_$33_$1 *)outer$
                          withRxSubscription:(id<RxSubscription>)capture$0 {
  RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$33_$1:withRxSubscription:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$33_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$d_", "LRxSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$33_$1;LRxSubscription;", "LRxCompletable_$33_$1;", "onSubscribeWithRxSubscription:" };
  static const J2ObjcClassInfo _RxCompletable_$33_$1_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_RxCompletable_$33_$1_$1;
}

@end

void RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(RxCompletable_$33_$1_$1 *self, RxCompletable_$33_$1 *outer$, id<RxSubscription> capture$0) {
  self->this$0_ = outer$;
  self->val$d_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$33_$1_$1 *new_RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(RxCompletable_$33_$1 *outer$, id<RxSubscription> capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$33_$1_$1, initWithRxCompletable_$33_$1_withRxSubscription_, outer$, capture$0)
}

RxCompletable_$33_$1_$1 *create_RxCompletable_$33_$1_$1_initWithRxCompletable_$33_$1_withRxSubscription_(RxCompletable_$33_$1 *outer$, id<RxSubscription> capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$33_$1_$1, initWithRxCompletable_$33_$1_withRxSubscription_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$33_$1_$1)

@implementation RxCompletable_$33_$1_$1_$1

- (void)call {
  @try {
    [((id<RxSubscription>) nil_chk(this$0_->val$d_)) unsubscribe];
  }
  @finally {
    [((RxScheduler_Worker *) nil_chk(val$w_)) unsubscribe];
  }
}

- (instancetype)initWithRxCompletable_$33_$1_$1:(RxCompletable_$33_$1_$1 *)outer$
                         withRxScheduler_Worker:(RxScheduler_Worker *)capture$0 {
  RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxCompletable_$33_$1_$1:withRxScheduler_Worker:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxCompletable_$33_$1_$1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$w_", "LRxScheduler_Worker;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxCompletable_$33_$1_$1;LRxScheduler_Worker;", "LRxCompletable_$33_$1_$1;", "call" };
  static const J2ObjcClassInfo _RxCompletable_$33_$1_$1_$1 = { "", "rx", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_RxCompletable_$33_$1_$1_$1;
}

@end

void RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(RxCompletable_$33_$1_$1_$1 *self, RxCompletable_$33_$1_$1 *outer$, RxScheduler_Worker *capture$0) {
  self->this$0_ = outer$;
  self->val$w_ = capture$0;
  NSObject_init(self);
}

RxCompletable_$33_$1_$1_$1 *new_RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(RxCompletable_$33_$1_$1 *outer$, RxScheduler_Worker *capture$0) {
  J2OBJC_NEW_IMPL(RxCompletable_$33_$1_$1_$1, initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_, outer$, capture$0)
}

RxCompletable_$33_$1_$1_$1 *create_RxCompletable_$33_$1_$1_$1_initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_(RxCompletable_$33_$1_$1 *outer$, RxScheduler_Worker *capture$0) {
  J2OBJC_CREATE_IMPL(RxCompletable_$33_$1_$1_$1, initWithRxCompletable_$33_$1_$1_withRxScheduler_Worker_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxCompletable_$33_$1_$1_$1)
