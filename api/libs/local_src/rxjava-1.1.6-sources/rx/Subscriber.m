//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/Subscriber.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "rx/Producer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/internal/util/SubscriptionList.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface RxSubscriber () {
 @public
  RxInternalUtilSubscriptionList *subscriptions_;
  RxSubscriber *subscriber_;
  id<RxProducer> producer_;
  jlong requested_;
}

- (void)addToRequestedWithLong:(jlong)n;

@end

J2OBJC_FIELD_SETTER(RxSubscriber, subscriptions_, RxInternalUtilSubscriptionList *)
J2OBJC_FIELD_SETTER(RxSubscriber, subscriber_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxSubscriber, producer_, id<RxProducer>)

inline jlong RxSubscriber_get_NOT_SET();
#define RxSubscriber_NOT_SET ((jlong) 0x8000000000000000LL)
J2OBJC_STATIC_FIELD_CONSTANT(RxSubscriber, NOT_SET, jlong)

__attribute__((unused)) static void RxSubscriber_addToRequestedWithLong_(RxSubscriber *self, jlong n);

@implementation RxSubscriber

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSubscriber_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithRxSubscriber:(RxSubscriber *)subscriber {
  RxSubscriber_initWithRxSubscriber_(self, subscriber);
  return self;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)subscriber
                         withBoolean:(jboolean)shareSubscriptions {
  RxSubscriber_initWithRxSubscriber_withBoolean_(self, subscriber, shareSubscriptions);
  return self;
}

- (void)addWithRxSubscription:(id<RxSubscription>)s {
  [((RxInternalUtilSubscriptionList *) nil_chk(subscriptions_)) addWithRxSubscription:s];
}

- (void)unsubscribe {
  [((RxInternalUtilSubscriptionList *) nil_chk(subscriptions_)) unsubscribe];
}

- (jboolean)isUnsubscribed {
  return [((RxInternalUtilSubscriptionList *) nil_chk(subscriptions_)) isUnsubscribed];
}

- (void)onStart {
}

- (void)requestWithLong:(jlong)n {
  if (n < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"number requested cannot be negative: ", n));
  }
  id<RxProducer> producerToRequestFrom = nil;
  @synchronized(self) {
    if (producer_ != nil) {
      producerToRequestFrom = producer_;
    }
    else {
      RxSubscriber_addToRequestedWithLong_(self, n);
      return;
    }
  }
  [producerToRequestFrom requestWithLong:n];
}

- (void)addToRequestedWithLong:(jlong)n {
  RxSubscriber_addToRequestedWithLong_(self, n);
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  jlong toRequest;
  jboolean passToSubscriber = false;
  @synchronized(self) {
    toRequest = requested_;
    producer_ = p;
    if (subscriber_ != nil) {
      if (toRequest == RxSubscriber_NOT_SET) {
        passToSubscriber = true;
      }
    }
  }
  if (passToSubscriber) {
    [((RxSubscriber *) nil_chk(subscriber_)) setProducerWithRxProducer:producer_];
  }
  else {
    if (toRequest == RxSubscriber_NOT_SET) {
      [((id<RxProducer>) nil_chk(producer_)) requestWithLong:JavaLangLong_MAX_VALUE];
    }
    else {
      [((id<RxProducer>) nil_chk(producer_)) requestWithLong:toRequest];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { "initWithRxSubscriber:", NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { "initWithRxSubscriber:withBoolean:", NULL, 0x4, -1, 2, -1, 3, -1, -1 },
    { "addWithRxSubscription:", "V", 0x11, 4, 5, -1, -1, -1, -1 },
    { "unsubscribe", "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { "isUnsubscribed", "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { "onStart", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "requestWithLong:", "V", 0x14, 6, 7, -1, -1, -1, -1 },
    { "addToRequestedWithLong:", "V", 0x2, 8, 7, -1, -1, -1, -1 },
    { "setProducerWithRxProducer:", "V", 0x1, 9, 10, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NOT_SET", "J", .constantValue.asLong = RxSubscriber_NOT_SET, 0x1a, -1, -1, -1, -1 },
    { "subscriptions_", "LRxInternalUtilSubscriptionList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "producer_", "LRxProducer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "requested_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxSubscriber;", "(Lrx/Subscriber<*>;)V", "LRxSubscriber;Z", "(Lrx/Subscriber<*>;Z)V", "add", "LRxSubscription;", "request", "J", "addToRequested", "setProducer", "LRxProducer;", "Lrx/Subscriber<*>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observer<TT;>;Lrx/Subscription;" };
  static const J2ObjcClassInfo _RxSubscriber = { "Subscriber", "rx", ptrTable, methods, fields, 7, 0x401, 10, 5, -1, -1, -1, 12, -1 };
  return &_RxSubscriber;
}

@end

void RxSubscriber_init(RxSubscriber *self) {
  RxSubscriber_initWithRxSubscriber_withBoolean_(self, nil, false);
}

void RxSubscriber_initWithRxSubscriber_(RxSubscriber *self, RxSubscriber *subscriber) {
  RxSubscriber_initWithRxSubscriber_withBoolean_(self, subscriber, true);
}

void RxSubscriber_initWithRxSubscriber_withBoolean_(RxSubscriber *self, RxSubscriber *subscriber, jboolean shareSubscriptions) {
  NSObject_init(self);
  self->requested_ = RxSubscriber_NOT_SET;
  self->subscriber_ = subscriber;
  self->subscriptions_ = shareSubscriptions && subscriber != nil ? subscriber->subscriptions_ : new_RxInternalUtilSubscriptionList_init();
}

void RxSubscriber_addToRequestedWithLong_(RxSubscriber *self, jlong n) {
  if (self->requested_ == RxSubscriber_NOT_SET) {
    self->requested_ = n;
  }
  else {
    jlong total = self->requested_ + n;
    if (total < 0) {
      self->requested_ = JavaLangLong_MAX_VALUE;
    }
    else {
      self->requested_ = total;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubscriber)
