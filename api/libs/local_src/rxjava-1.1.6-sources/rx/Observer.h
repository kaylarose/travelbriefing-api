//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/Observer.java
//

/*!
 @brief Copyright 2014 Netflix, Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RxObserver")
#ifdef RESTRICT_RxObserver
#define INCLUDE_ALL_RxObserver 0
#else
#define INCLUDE_ALL_RxObserver 1
#endif
#undef RESTRICT_RxObserver

#if !defined (RxObserver_) && (INCLUDE_ALL_RxObserver || defined(INCLUDE_RxObserver))
#define RxObserver_

/*!
 @brief Provides a mechanism for receiving push-based notifications.
 <p>
 After an Observer calls an <code>Observable</code>'s <code>subscribe</code> method, the
 <code>Observable</code> calls the Observer's <code>onNext</code> method to provide notifications. A well-behaved
 <code>Observable</code> will call an Observer's <code>onCompleted</code> method exactly once or the Observer's
 <code>onError</code> method exactly once.
 - seealso: <a href="http://reactivex.io/documentation/observable.html">ReactiveX documentation: Observable</a>
 */
@protocol RxObserver < JavaObject >

/*!
 @brief Notifies the Observer that the <code>Observable</code> has finished sending push-based notifications.
 <p>
 The <code>Observable</code> will not call this method if it calls <code>onError</code>.
 */
- (void)onCompleted;

/*!
 @brief Notifies the Observer that the <code>Observable</code> has experienced an error condition.
 <p>
 If the <code>Observable</code> calls this method, it will not thereafter call <code>onNext</code> or
 <code>onCompleted</code>.
 @param e
 the exception encountered by the Observable
 */
- (void)onErrorWithNSException:(NSException *)e;

/*!
 @brief Provides the Observer with a new item to observe.
 <p>
 The <code>Observable</code> may call this method 0 or more times.
 <p>
 The <code>Observable</code> will not call this method again after it calls either <code>onCompleted</code> or
 <code>onError</code>.
 @param t
 the item emitted by the Observable
 */
- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserver)

J2OBJC_TYPE_LITERAL_HEADER(RxObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_RxObserver")
