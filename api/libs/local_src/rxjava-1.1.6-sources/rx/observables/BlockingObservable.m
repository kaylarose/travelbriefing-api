//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/rxjava-1.1.6-sources/rx/observables/BlockingObservable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Iterable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Thread.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/BlockingQueue.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/LinkedBlockingQueue.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "rx/Observable.h"
#include "rx/Observer.h"
#include "rx/Producer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/exceptions/OnErrorNotImplementedException.h"
#include "rx/functions/Action0.h"
#include "rx/functions/Action1.h"
#include "rx/functions/Actions.h"
#include "rx/functions/Func1.h"
#include "rx/internal/operators/BlockingOperatorLatest.h"
#include "rx/internal/operators/BlockingOperatorMostRecent.h"
#include "rx/internal/operators/BlockingOperatorNext.h"
#include "rx/internal/operators/BlockingOperatorToFuture.h"
#include "rx/internal/operators/BlockingOperatorToIterator.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/internal/util/BlockingUtils.h"
#include "rx/internal/util/UtilityFunctions.h"
#include "rx/observables/BlockingObservable.h"
#include "rx/subscriptions/Subscriptions.h"

@interface RxObservablesBlockingObservable () {
 @public
  RxObservable *o_;
}

- (instancetype)initWithRxObservable:(RxObservable *)o;

/*!
 @brief Helper method which handles the actual blocking for a single response.
 <p>
 If the <code>Observable</code> errors, it will be thrown right away.
 @return the actual item
 */
- (id)blockForSingleWithRxObservable:(RxObservable *)observable;

@end

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable, o_, RxObservable *)

__attribute__((unused)) static void RxObservablesBlockingObservable_initWithRxObservable_(RxObservablesBlockingObservable *self, RxObservable *o);

__attribute__((unused)) static RxObservablesBlockingObservable *new_RxObservablesBlockingObservable_initWithRxObservable_(RxObservable *o) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable *create_RxObservablesBlockingObservable_initWithRxObservable_(RxObservable *o);

__attribute__((unused)) static id RxObservablesBlockingObservable_blockForSingleWithRxObservable_(RxObservablesBlockingObservable *self, RxObservable *observable);

@interface RxObservablesBlockingObservable_$1 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
  JavaUtilConcurrentAtomicAtomicReference *val$exceptionFromOnError_;
  id<RxFunctionsAction1> val$onNext_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)args;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
             withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
                                  withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$1)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$1, val$latch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$1, val$exceptionFromOnError_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$1, val$onNext_, id<RxFunctionsAction1>)

__attribute__((unused)) static void RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(RxObservablesBlockingObservable_$1 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<RxFunctionsAction1> capture$2);

__attribute__((unused)) static RxObservablesBlockingObservable_$1 *new_RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<RxFunctionsAction1> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$1 *create_RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<RxFunctionsAction1> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$1)

@interface RxObservablesBlockingObservable_$2 : NSObject < JavaLangIterable > {
 @public
  RxObservablesBlockingObservable *this$0_;
}

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithRxObservablesBlockingObservable:(RxObservablesBlockingObservable *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$2)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$2, this$0_, RxObservablesBlockingObservable *)

__attribute__((unused)) static void RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(RxObservablesBlockingObservable_$2 *self, RxObservablesBlockingObservable *outer$);

__attribute__((unused)) static RxObservablesBlockingObservable_$2 *new_RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(RxObservablesBlockingObservable *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$2 *create_RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(RxObservablesBlockingObservable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$2)

@interface RxObservablesBlockingObservable_$3 : RxSubscriber {
 @public
  JavaUtilConcurrentCountDownLatch *val$latch_;
  JavaUtilConcurrentAtomicAtomicReference *val$returnException_;
  JavaUtilConcurrentAtomicAtomicReference *val$returnItem_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onNextWithId:(id)item;

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
             withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
             withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$3)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$3, val$latch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$3, val$returnException_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$3, val$returnItem_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(RxObservablesBlockingObservable_$3 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, JavaUtilConcurrentAtomicAtomicReference *capture$2);

__attribute__((unused)) static RxObservablesBlockingObservable_$3 *new_RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, JavaUtilConcurrentAtomicAtomicReference *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$3 *create_RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, JavaUtilConcurrentAtomicAtomicReference *capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$3)

@interface RxObservablesBlockingObservable_$4 : RxSubscriber {
 @public
  IOSObjectArray *val$error_;
  JavaUtilConcurrentCountDownLatch *val$cdl_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithNSExceptionArray:(IOSObjectArray *)capture$0
    withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$4)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$4, val$error_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$4, val$cdl_, JavaUtilConcurrentCountDownLatch *)

__attribute__((unused)) static void RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(RxObservablesBlockingObservable_$4 *self, IOSObjectArray *capture$0, JavaUtilConcurrentCountDownLatch *capture$1);

__attribute__((unused)) static RxObservablesBlockingObservable_$4 *new_RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(IOSObjectArray *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$4 *create_RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(IOSObjectArray *capture$0, JavaUtilConcurrentCountDownLatch *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$4)

@interface RxObservablesBlockingObservable_$5 : RxSubscriber {
 @public
  id<JavaUtilConcurrentBlockingQueue> val$queue_;
  RxInternalOperatorsNotificationLite *val$nl_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0
                withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$5)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$5, val$queue_, id<JavaUtilConcurrentBlockingQueue>)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$5, val$nl_, RxInternalOperatorsNotificationLite *)

__attribute__((unused)) static void RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(RxObservablesBlockingObservable_$5 *self, id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1);

__attribute__((unused)) static RxObservablesBlockingObservable_$5 *new_RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$5 *create_RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$5)

@interface RxObservablesBlockingObservable_$6 : RxSubscriber {
 @public
  id<JavaUtilConcurrentBlockingQueue> val$queue_;
  RxInternalOperatorsNotificationLite *val$nl_;
  IOSObjectArray *val$theProducer_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (void)setProducerWithRxProducer:(id<RxProducer>)p;

- (void)onStart;

- (instancetype)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0
                withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)capture$1
                                    withRxProducerArray:(IOSObjectArray *)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$6)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$6, val$queue_, id<JavaUtilConcurrentBlockingQueue>)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$6, val$nl_, RxInternalOperatorsNotificationLite *)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$6, val$theProducer_, IOSObjectArray *)

__attribute__((unused)) static void RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(RxObservablesBlockingObservable_$6 *self, id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1, IOSObjectArray *capture$2);

__attribute__((unused)) static RxObservablesBlockingObservable_$6 *new_RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1, IOSObjectArray *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$6 *create_RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1, IOSObjectArray *capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$6)

@interface RxObservablesBlockingObservable_$7 : NSObject < RxFunctionsAction0 > {
 @public
  id<JavaUtilConcurrentBlockingQueue> val$queue_;
}

- (void)call;

- (instancetype)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$7)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$7, val$queue_, id<JavaUtilConcurrentBlockingQueue>)

__attribute__((unused)) static void RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(RxObservablesBlockingObservable_$7 *self, id<JavaUtilConcurrentBlockingQueue> capture$0);

__attribute__((unused)) static RxObservablesBlockingObservable_$7 *new_RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(id<JavaUtilConcurrentBlockingQueue> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$7 *create_RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(id<JavaUtilConcurrentBlockingQueue> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$7)

@interface RxObservablesBlockingObservable_$8 : NSObject < RxFunctionsAction1 >

- (void)callWithId:(NSException *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$8)

__attribute__((unused)) static void RxObservablesBlockingObservable_$8_init(RxObservablesBlockingObservable_$8 *self);

__attribute__((unused)) static RxObservablesBlockingObservable_$8 *new_RxObservablesBlockingObservable_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$8 *create_RxObservablesBlockingObservable_$8_init();

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$8)

@interface RxObservablesBlockingObservable_$9 : NSObject < RxObserver > {
 @public
  id<RxFunctionsAction1> val$onNext_;
  id<RxFunctionsAction1> val$onError_;
  id<RxFunctionsAction0> val$onCompleted_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onCompleted;

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0
                    withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$1
                    withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesBlockingObservable_$9)

J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$9, val$onNext_, id<RxFunctionsAction1>)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$9, val$onError_, id<RxFunctionsAction1>)
J2OBJC_FIELD_SETTER(RxObservablesBlockingObservable_$9, val$onCompleted_, id<RxFunctionsAction0>)

__attribute__((unused)) static void RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxObservablesBlockingObservable_$9 *self, id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1, id<RxFunctionsAction0> capture$2);

__attribute__((unused)) static RxObservablesBlockingObservable_$9 *new_RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1, id<RxFunctionsAction0> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesBlockingObservable_$9 *create_RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1, id<RxFunctionsAction0> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesBlockingObservable_$9)

J2OBJC_INITIALIZED_DEFN(RxObservablesBlockingObservable)

id RxObservablesBlockingObservable_ON_START;
id RxObservablesBlockingObservable_SET_PRODUCER;
id RxObservablesBlockingObservable_UNSUBSCRIBE;

@implementation RxObservablesBlockingObservable

+ (id)ON_START {
  return RxObservablesBlockingObservable_ON_START;
}

+ (id)SET_PRODUCER {
  return RxObservablesBlockingObservable_SET_PRODUCER;
}

+ (id)UNSUBSCRIBE {
  return RxObservablesBlockingObservable_UNSUBSCRIBE;
}

- (instancetype)initWithRxObservable:(RxObservable *)o {
  RxObservablesBlockingObservable_initWithRxObservable_(self, o);
  return self;
}

+ (RxObservablesBlockingObservable *)fromWithRxObservable:(RxObservable *)o {
  return RxObservablesBlockingObservable_fromWithRxObservable_(o);
}

- (void)forEachWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext {
  JavaUtilConcurrentCountDownLatch *latch = new_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  JavaUtilConcurrentAtomicAtomicReference *exceptionFromOnError = new_JavaUtilConcurrentAtomicAtomicReference_init();
  id<RxSubscription> subscription = [((RxObservable *) nil_chk((o_))) subscribeWithRxSubscriber:new_RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(latch, exceptionFromOnError, onNext)];
  RxInternalUtilBlockingUtils_awaitForCompleteWithJavaUtilConcurrentCountDownLatch_withRxSubscription_(latch, subscription);
  if ([exceptionFromOnError get] != nil) {
    if ([[exceptionFromOnError get] isKindOfClass:[JavaLangRuntimeException class]]) {
      @throw (JavaLangRuntimeException *) cast_chk([exceptionFromOnError get], [JavaLangRuntimeException class]);
    }
    else {
      @throw new_JavaLangRuntimeException_initWithNSException_([exceptionFromOnError get]);
    }
  }
}

- (id<JavaUtilIterator>)getIterator {
  return RxInternalOperatorsBlockingOperatorToIterator_toIteratorWithRxObservable_(o_);
}

- (id)first {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk(o_)) first]);
}

- (id)firstWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk(o_)) firstWithRxFunctionsFunc1:predicate]);
}

- (id)firstOrDefaultWithId:(id)defaultValue {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk([((RxObservable *) nil_chk(o_)) mapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) firstOrDefaultWithId:defaultValue]);
}

- (id)firstOrDefaultWithId:(id)defaultValue
      withRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(o_)) filterWithRxFunctionsFunc1:predicate])) mapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) firstOrDefaultWithId:defaultValue]);
}

- (id)last {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk(o_)) last]);
}

- (id)lastWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk(o_)) lastWithRxFunctionsFunc1:predicate]);
}

- (id)lastOrDefaultWithId:(id)defaultValue {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk([((RxObservable *) nil_chk(o_)) mapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) lastOrDefaultWithId:defaultValue]);
}

- (id)lastOrDefaultWithId:(id)defaultValue
     withRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(o_)) filterWithRxFunctionsFunc1:predicate])) mapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) lastOrDefaultWithId:defaultValue]);
}

- (id<JavaLangIterable>)mostRecentWithId:(id)initialValue {
  return RxInternalOperatorsBlockingOperatorMostRecent_mostRecentWithRxObservable_withId_(o_, initialValue);
}

- (id<JavaLangIterable>)next {
  return RxInternalOperatorsBlockingOperatorNext_nextWithRxObservable_(o_);
}

- (id<JavaLangIterable>)latest {
  return RxInternalOperatorsBlockingOperatorLatest_latestWithRxObservable_(o_);
}

- (id)single {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk(o_)) single]);
}

- (id)singleWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk(o_)) singleWithRxFunctionsFunc1:predicate]);
}

- (id)singleOrDefaultWithId:(id)defaultValue {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk([((RxObservable *) nil_chk(o_)) mapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) singleOrDefaultWithId:defaultValue]);
}

- (id)singleOrDefaultWithId:(id)defaultValue
       withRxFunctionsFunc1:(id<RxFunctionsFunc1>)predicate {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, [((RxObservable *) nil_chk([((RxObservable *) nil_chk([((RxObservable *) nil_chk(o_)) filterWithRxFunctionsFunc1:predicate])) mapWithRxFunctionsFunc1:RxInternalUtilUtilityFunctions_identity()])) singleOrDefaultWithId:defaultValue]);
}

- (id<JavaUtilConcurrentFuture>)toFuture {
  return RxInternalOperatorsBlockingOperatorToFuture_toFutureWithRxObservable_(o_);
}

- (id<JavaLangIterable>)toIterable {
  return new_RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(self);
}

- (id)blockForSingleWithRxObservable:(RxObservable *)observable {
  return RxObservablesBlockingObservable_blockForSingleWithRxObservable_(self, observable);
}

- (void)subscribe {
  JavaUtilConcurrentCountDownLatch *cdl = new_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  IOSObjectArray *error = [IOSObjectArray newArrayWithObjects:(id[]){ nil } count:1 type:NSException_class_()];
  id<RxSubscription> s = [((RxObservable *) nil_chk((o_))) subscribeWithRxSubscriber:new_RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(error, cdl)];
  RxInternalUtilBlockingUtils_awaitForCompleteWithJavaUtilConcurrentCountDownLatch_withRxSubscription_(cdl, s);
  NSException *e = IOSObjectArray_Get(error, 0);
  if (e != nil) {
    if ([e isKindOfClass:[JavaLangRuntimeException class]]) {
      @throw (JavaLangRuntimeException *) cast_chk(e, [JavaLangRuntimeException class]);
    }
    else {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
}

- (void)subscribeWithRxObserver:(id<RxObserver>)observer {
  RxInternalOperatorsNotificationLite *nl = RxInternalOperatorsNotificationLite_instance();
  id<JavaUtilConcurrentBlockingQueue> queue = new_JavaUtilConcurrentLinkedBlockingQueue_init();
  id<RxSubscription> s = [((RxObservable *) nil_chk((o_))) subscribeWithRxSubscriber:new_RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(queue, nl)];
  @try {
    for (; ; ) {
      id o = [queue poll];
      if (o == nil) {
        o = [queue take];
      }
      if ([((RxInternalOperatorsNotificationLite *) nil_chk(nl)) acceptWithRxObserver:observer withId:o]) {
        return;
      }
    }
  }
  @catch (JavaLangInterruptedException *e) {
    [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) interrupt];
    [((id<RxObserver>) nil_chk(observer)) onErrorWithNSException:e];
  }
  @finally {
    [((id<RxSubscription>) nil_chk(s)) unsubscribe];
  }
}

- (void)subscribeWithRxSubscriber:(RxSubscriber *)subscriber {
  RxInternalOperatorsNotificationLite *nl = RxInternalOperatorsNotificationLite_instance();
  id<JavaUtilConcurrentBlockingQueue> queue = new_JavaUtilConcurrentLinkedBlockingQueue_init();
  IOSObjectArray *theProducer = [IOSObjectArray newArrayWithObjects:(id[]){ nil } count:1 type:RxProducer_class_()];
  RxSubscriber *s = new_RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(queue, nl, theProducer);
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:s];
  [subscriber addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(queue))];
  (void) [((RxObservable *) nil_chk((o_))) subscribeWithRxSubscriber:s];
  @try {
    for (; ; ) {
      if ([subscriber isUnsubscribed]) {
        break;
      }
      id o = [queue poll];
      if (o == nil) {
        o = [queue take];
      }
      if ([subscriber isUnsubscribed] || o == RxObservablesBlockingObservable_UNSUBSCRIBE) {
        break;
      }
      if (o == RxObservablesBlockingObservable_ON_START) {
        [subscriber onStart];
      }
      else if (o == RxObservablesBlockingObservable_SET_PRODUCER) {
        [subscriber setProducerWithRxProducer:IOSObjectArray_Get(theProducer, 0)];
      }
      else if ([((RxInternalOperatorsNotificationLite *) nil_chk(nl)) acceptWithRxObserver:subscriber withId:o]) {
        return;
      }
    }
  }
  @catch (JavaLangInterruptedException *e) {
    [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) interrupt];
    [subscriber onErrorWithNSException:e];
  }
  @finally {
    [s unsubscribe];
  }
}

- (void)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext {
  [self subscribeWithRxFunctionsAction1:onNext withRxFunctionsAction1:new_RxObservablesBlockingObservable_$8_init() withRxFunctionsAction0:RxFunctionsActions_empty()];
}

- (void)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext
                 withRxFunctionsAction1:(id<RxFunctionsAction1>)onError {
  [self subscribeWithRxFunctionsAction1:onNext withRxFunctionsAction1:onError withRxFunctionsAction0:RxFunctionsActions_empty()];
}

- (void)subscribeWithRxFunctionsAction1:(id<RxFunctionsAction1>)onNext
                 withRxFunctionsAction1:(id<RxFunctionsAction1>)onError
                 withRxFunctionsAction0:(id<RxFunctionsAction0>)onCompleted {
  [self subscribeWithRxObserver:new_RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(onNext, onError, onCompleted)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObservable:", NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { "fromWithRxObservable:", "LRxObservablesBlockingObservable;", 0x9, 2, 0, -1, 3, -1, -1 },
    { "forEachWithRxFunctionsAction1:", "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { "getIterator", "LJavaUtilIterator;", 0x1, -1, -1, -1, 7, -1, -1 },
    { "first", "LNSObject;", 0x1, -1, -1, -1, 8, -1, -1 },
    { "firstWithRxFunctionsFunc1:", "LNSObject;", 0x1, 9, 10, -1, 11, -1, -1 },
    { "firstOrDefaultWithId:", "LNSObject;", 0x1, 12, 13, -1, 14, -1, -1 },
    { "firstOrDefaultWithId:withRxFunctionsFunc1:", "LNSObject;", 0x1, 12, 15, -1, 16, -1, -1 },
    { "last", "LNSObject;", 0x1, -1, -1, -1, 8, -1, -1 },
    { "lastWithRxFunctionsFunc1:", "LNSObject;", 0x1, 17, 10, -1, 11, -1, -1 },
    { "lastOrDefaultWithId:", "LNSObject;", 0x1, 18, 13, -1, 14, -1, -1 },
    { "lastOrDefaultWithId:withRxFunctionsFunc1:", "LNSObject;", 0x1, 18, 15, -1, 16, -1, -1 },
    { "mostRecentWithId:", "LJavaLangIterable;", 0x1, 19, 13, -1, 20, -1, -1 },
    { "next", "LJavaLangIterable;", 0x1, -1, -1, -1, 21, -1, -1 },
    { "latest", "LJavaLangIterable;", 0x1, -1, -1, -1, 21, -1, -1 },
    { "single", "LNSObject;", 0x1, -1, -1, -1, 8, -1, -1 },
    { "singleWithRxFunctionsFunc1:", "LNSObject;", 0x1, 22, 10, -1, 11, -1, -1 },
    { "singleOrDefaultWithId:", "LNSObject;", 0x1, 23, 13, -1, 14, -1, -1 },
    { "singleOrDefaultWithId:withRxFunctionsFunc1:", "LNSObject;", 0x1, 23, 15, -1, 16, -1, -1 },
    { "toFuture", "LJavaUtilConcurrentFuture;", 0x1, -1, -1, -1, 24, -1, -1 },
    { "toIterable", "LJavaLangIterable;", 0x1, -1, -1, -1, 21, -1, -1 },
    { "blockForSingleWithRxObservable:", "LNSObject;", 0x2, 25, 0, -1, 26, -1, -1 },
    { "subscribe", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "subscribeWithRxObserver:", "V", 0x1, 27, 28, -1, 29, -1, -1 },
    { "subscribeWithRxSubscriber:", "V", 0x1, 27, 30, -1, 31, -1, -1 },
    { "subscribeWithRxFunctionsAction1:", "V", 0x1, 27, 5, -1, 6, -1, -1 },
    { "subscribeWithRxFunctionsAction1:withRxFunctionsAction1:", "V", 0x1, 27, 32, -1, 33, -1, -1 },
    { "subscribeWithRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:", "V", 0x1, 27, 34, -1, 35, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "o_", "LRxObservable;", .constantValue.asLong = 0, 0x12, -1, -1, 36, -1 },
    { "ON_START", "LNSObject;", .constantValue.asLong = 0, 0x18, -1, 37, -1, -1 },
    { "SET_PRODUCER", "LNSObject;", .constantValue.asLong = 0, 0x18, -1, 38, -1, -1 },
    { "UNSUBSCRIBE", "LNSObject;", .constantValue.asLong = 0, 0x18, -1, 39, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxObservable;", "(Lrx/Observable<+TT;>;)V", "from", "<T:Ljava/lang/Object;>(Lrx/Observable<+TT;>;)Lrx/observables/BlockingObservable<TT;>;", "forEach", "LRxFunctionsAction1;", "(Lrx/functions/Action1<-TT;>;)V", "()Ljava/util/Iterator<TT;>;", "()TT;", "first", "LRxFunctionsFunc1;", "(Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)TT;", "firstOrDefault", "LNSObject;", "(TT;)TT;", "LNSObject;LRxFunctionsFunc1;", "(TT;Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)TT;", "last", "lastOrDefault", "mostRecent", "(TT;)Ljava/lang/Iterable<TT;>;", "()Ljava/lang/Iterable<TT;>;", "single", "singleOrDefault", "()Ljava/util/concurrent/Future<TT;>;", "blockForSingle", "(Lrx/Observable<+TT;>;)TT;", "subscribe", "LRxObserver;", "(Lrx/Observer<-TT;>;)V", "LRxSubscriber;", "(Lrx/Subscriber<-TT;>;)V", "LRxFunctionsAction1;LRxFunctionsAction1;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<-Ljava/lang/Throwable;>;)V", "LRxFunctionsAction1;LRxFunctionsAction1;LRxFunctionsAction0;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<-Ljava/lang/Throwable;>;Lrx/functions/Action0;)V", "Lrx/Observable<+TT;>;", &RxObservablesBlockingObservable_ON_START, &RxObservablesBlockingObservable_SET_PRODUCER, &RxObservablesBlockingObservable_UNSUBSCRIBE, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable = { "BlockingObservable", "rx.observables", ptrTable, methods, fields, 7, 0x11, 28, 4, -1, -1, -1, 40, -1 };
  return &_RxObservablesBlockingObservable;
}

+ (void)initialize {
  if (self == [RxObservablesBlockingObservable class]) {
    RxObservablesBlockingObservable_ON_START = new_NSObject_init();
    RxObservablesBlockingObservable_SET_PRODUCER = new_NSObject_init();
    RxObservablesBlockingObservable_UNSUBSCRIBE = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(RxObservablesBlockingObservable)
  }
}

@end

void RxObservablesBlockingObservable_initWithRxObservable_(RxObservablesBlockingObservable *self, RxObservable *o) {
  NSObject_init(self);
  self->o_ = o;
}

RxObservablesBlockingObservable *new_RxObservablesBlockingObservable_initWithRxObservable_(RxObservable *o) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable, initWithRxObservable_, o)
}

RxObservablesBlockingObservable *create_RxObservablesBlockingObservable_initWithRxObservable_(RxObservable *o) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable, initWithRxObservable_, o)
}

RxObservablesBlockingObservable *RxObservablesBlockingObservable_fromWithRxObservable_(RxObservable *o) {
  RxObservablesBlockingObservable_initialize();
  return new_RxObservablesBlockingObservable_initWithRxObservable_(o);
}

id RxObservablesBlockingObservable_blockForSingleWithRxObservable_(RxObservablesBlockingObservable *self, RxObservable *observable) {
  JavaUtilConcurrentAtomicAtomicReference *returnItem = new_JavaUtilConcurrentAtomicAtomicReference_init();
  JavaUtilConcurrentAtomicAtomicReference *returnException = new_JavaUtilConcurrentAtomicAtomicReference_init();
  JavaUtilConcurrentCountDownLatch *latch = new_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  id<RxSubscription> subscription = [((RxObservable *) nil_chk((observable))) subscribeWithRxSubscriber:new_RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(latch, returnException, returnItem)];
  RxInternalUtilBlockingUtils_awaitForCompleteWithJavaUtilConcurrentCountDownLatch_withRxSubscription_(latch, subscription);
  if ([returnException get] != nil) {
    if ([[returnException get] isKindOfClass:[JavaLangRuntimeException class]]) {
      @throw (JavaLangRuntimeException *) cast_chk([returnException get], [JavaLangRuntimeException class]);
    }
    else {
      @throw new_JavaLangRuntimeException_initWithNSException_([returnException get]);
    }
  }
  return [returnItem get];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable)

@implementation RxObservablesBlockingObservable_$1

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$exceptionFromOnError_)) setWithId:e];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(id)args {
  [((id<RxFunctionsAction1>) nil_chk(val$onNext_)) callWithId:args];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
             withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
                                  withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$2 {
  RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "initWithJavaUtilConcurrentCountDownLatch:withJavaUtilConcurrentAtomicAtomicReference:withRxFunctionsAction1:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$exceptionFromOnError_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$onNext_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "LJavaUtilConcurrentCountDownLatch;LJavaUtilConcurrentAtomicAtomicReference;LRxFunctionsAction1;", "(Ljava/util/concurrent/CountDownLatch;Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;Lrx/functions/Action1<-TT;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "Lrx/functions/Action1<-TT;>;", "LRxObservablesBlockingObservable;", "forEachWithRxFunctionsAction1:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$1 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 4, 3, 9, -1, 10, 11, -1 };
  return &_RxObservablesBlockingObservable_$1;
}

@end

void RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(RxObservablesBlockingObservable_$1 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<RxFunctionsAction1> capture$2) {
  self->val$latch_ = capture$0;
  self->val$exceptionFromOnError_ = capture$1;
  self->val$onNext_ = capture$2;
  RxSubscriber_init(self);
}

RxObservablesBlockingObservable_$1 *new_RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<RxFunctionsAction1> capture$2) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$1, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_, capture$0, capture$1, capture$2)
}

RxObservablesBlockingObservable_$1 *create_RxObservablesBlockingObservable_$1_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<RxFunctionsAction1> capture$2) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$1, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withRxFunctionsAction1_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$1)

@implementation RxObservablesBlockingObservable_$2

- (id<JavaUtilIterator>)iterator {
  return [this$0_ getIterator];
}

- (instancetype)initWithRxObservablesBlockingObservable:(RxObservablesBlockingObservable *)outer$ {
  RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "iterator", "LJavaUtilIterator;", 0x1, -1, -1, -1, 0, -1, -1 },
    { "initWithRxObservablesBlockingObservable:", NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRxObservablesBlockingObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<TT;>;", "LRxObservablesBlockingObservable;", "toIterable", "Ljava/lang/Object;Ljava/lang/Iterable<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$2 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 1, 1, -1, 2, 3, -1 };
  return &_RxObservablesBlockingObservable_$2;
}

@end

void RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(RxObservablesBlockingObservable_$2 *self, RxObservablesBlockingObservable *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxObservablesBlockingObservable_$2 *new_RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(RxObservablesBlockingObservable *outer$) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$2, initWithRxObservablesBlockingObservable_, outer$)
}

RxObservablesBlockingObservable_$2 *create_RxObservablesBlockingObservable_$2_initWithRxObservablesBlockingObservable_(RxObservablesBlockingObservable *outer$) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$2, initWithRxObservablesBlockingObservable_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$2)

@implementation RxObservablesBlockingObservable_$3

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$returnException_)) setWithId:e];
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$latch_)) countDown];
}

- (void)onNextWithId:(id)item {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$returnItem_)) setWithId:item];
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0
             withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
             withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$2 {
  RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "onNextWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { "initWithJavaUtilConcurrentCountDownLatch:withJavaUtilConcurrentAtomicAtomicReference:withJavaUtilConcurrentAtomicAtomicReference:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$latch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$returnException_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$returnItem_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onNext", "LNSObject;", "(TT;)V", "LJavaUtilConcurrentCountDownLatch;LJavaUtilConcurrentAtomicAtomicReference;LJavaUtilConcurrentAtomicAtomicReference;", "(Ljava/util/concurrent/CountDownLatch;Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;Ljava/util/concurrent/atomic/AtomicReference<TT;>;)V", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "Ljava/util/concurrent/atomic/AtomicReference<TT;>;", "LRxObservablesBlockingObservable;", "blockForSingleWithRxObservable:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$3 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 4, 3, 9, -1, 10, 11, -1 };
  return &_RxObservablesBlockingObservable_$3;
}

@end

void RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(RxObservablesBlockingObservable_$3 *self, JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, JavaUtilConcurrentAtomicAtomicReference *capture$2) {
  self->val$latch_ = capture$0;
  self->val$returnException_ = capture$1;
  self->val$returnItem_ = capture$2;
  RxSubscriber_init(self);
}

RxObservablesBlockingObservable_$3 *new_RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, JavaUtilConcurrentAtomicAtomicReference *capture$2) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$3, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_, capture$0, capture$1, capture$2)
}

RxObservablesBlockingObservable_$3 *create_RxObservablesBlockingObservable_$3_initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_(JavaUtilConcurrentCountDownLatch *capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, JavaUtilConcurrentAtomicAtomicReference *capture$2) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$3, initWithJavaUtilConcurrentCountDownLatch_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilConcurrentAtomicAtomicReference_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$3)

@implementation RxObservablesBlockingObservable_$4

- (void)onNextWithId:(id)t {
}

- (void)onErrorWithNSException:(NSException *)e {
  (void) IOSObjectArray_Set(nil_chk(val$error_), 0, e);
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (void)onCompleted {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$cdl_)) countDown];
}

- (instancetype)initWithNSExceptionArray:(IOSObjectArray *)capture$0
    withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$1 {
  RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithNSExceptionArray:withJavaUtilConcurrentCountDownLatch:", NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$error_", "[LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$cdl_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "[LNSException;LJavaUtilConcurrentCountDownLatch;", "LRxObservablesBlockingObservable;", "subscribe", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$4 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 4, 2, 6, -1, 7, 8, -1 };
  return &_RxObservablesBlockingObservable_$4;
}

@end

void RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(RxObservablesBlockingObservable_$4 *self, IOSObjectArray *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  self->val$error_ = capture$0;
  self->val$cdl_ = capture$1;
  RxSubscriber_init(self);
}

RxObservablesBlockingObservable_$4 *new_RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(IOSObjectArray *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$4, initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_, capture$0, capture$1)
}

RxObservablesBlockingObservable_$4 *create_RxObservablesBlockingObservable_$4_initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_(IOSObjectArray *capture$0, JavaUtilConcurrentCountDownLatch *capture$1) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$4, initWithNSExceptionArray_withJavaUtilConcurrentCountDownLatch_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$4)

@implementation RxObservablesBlockingObservable_$5

- (void)onNextWithId:(id)t {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(val$nl_)) nextWithId:t]];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(val$nl_)) errorWithNSException:e]];
}

- (void)onCompleted {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(val$nl_)) completed]];
}

- (instancetype)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0
                withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)capture$1 {
  RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentBlockingQueue:withRxInternalOperatorsNotificationLite:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$queue_", "LJavaUtilConcurrentBlockingQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$nl_", "LRxInternalOperatorsNotificationLite;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LJavaUtilConcurrentBlockingQueue;LRxInternalOperatorsNotificationLite;", "(Ljava/util/concurrent/BlockingQueue<Ljava/lang/Object;>;Lrx/internal/operators/NotificationLite<TT;>;)V", "Ljava/util/concurrent/BlockingQueue<Ljava/lang/Object;>;", "Lrx/internal/operators/NotificationLite<TT;>;", "LRxObservablesBlockingObservable;", "subscribeWithRxObserver:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$5 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 4, 2, 9, -1, 10, 11, -1 };
  return &_RxObservablesBlockingObservable_$5;
}

@end

void RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(RxObservablesBlockingObservable_$5 *self, id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1) {
  self->val$queue_ = capture$0;
  self->val$nl_ = capture$1;
  RxSubscriber_init(self);
}

RxObservablesBlockingObservable_$5 *new_RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$5, initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_, capture$0, capture$1)
}

RxObservablesBlockingObservable_$5 *create_RxObservablesBlockingObservable_$5_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$5, initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_, capture$0, capture$1)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$5)

@implementation RxObservablesBlockingObservable_$6

- (void)onNextWithId:(id)t {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(val$nl_)) nextWithId:t]];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(val$nl_)) errorWithNSException:e]];
}

- (void)onCompleted {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(val$nl_)) completed]];
}

- (void)setProducerWithRxProducer:(id<RxProducer>)p {
  (void) IOSObjectArray_Set(nil_chk(val$theProducer_), 0, p);
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:JreLoadStatic(RxObservablesBlockingObservable, SET_PRODUCER)];
}

- (void)onStart {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:JreLoadStatic(RxObservablesBlockingObservable, ON_START)];
}

- (instancetype)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0
                withRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)capture$1
                                    withRxProducerArray:(IOSObjectArray *)capture$2 {
  RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "setProducerWithRxProducer:", "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { "onStart", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentBlockingQueue:withRxInternalOperatorsNotificationLite:withRxProducerArray:", NULL, 0x0, -1, 7, -1, 8, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$queue_", "LJavaUtilConcurrentBlockingQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
    { "val$nl_", "LRxInternalOperatorsNotificationLite;", .constantValue.asLong = 0, 0x1012, -1, -1, 10, -1 },
    { "val$theProducer_", "[LRxProducer;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "setProducer", "LRxProducer;", "LJavaUtilConcurrentBlockingQueue;LRxInternalOperatorsNotificationLite;[LRxProducer;", "(Ljava/util/concurrent/BlockingQueue<Ljava/lang/Object;>;Lrx/internal/operators/NotificationLite<TT;>;[Lrx/Producer;)V", "Ljava/util/concurrent/BlockingQueue<Ljava/lang/Object;>;", "Lrx/internal/operators/NotificationLite<TT;>;", "LRxObservablesBlockingObservable;", "subscribeWithRxSubscriber:", "Lrx/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$6 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 6, 3, 11, -1, 12, 13, -1 };
  return &_RxObservablesBlockingObservable_$6;
}

@end

void RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(RxObservablesBlockingObservable_$6 *self, id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1, IOSObjectArray *capture$2) {
  self->val$queue_ = capture$0;
  self->val$nl_ = capture$1;
  self->val$theProducer_ = capture$2;
  RxSubscriber_init(self);
}

RxObservablesBlockingObservable_$6 *new_RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1, IOSObjectArray *capture$2) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$6, initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_, capture$0, capture$1, capture$2)
}

RxObservablesBlockingObservable_$6 *create_RxObservablesBlockingObservable_$6_initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_(id<JavaUtilConcurrentBlockingQueue> capture$0, RxInternalOperatorsNotificationLite *capture$1, IOSObjectArray *capture$2) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$6, initWithJavaUtilConcurrentBlockingQueue_withRxInternalOperatorsNotificationLite_withRxProducerArray_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$6)

@implementation RxObservablesBlockingObservable_$7

- (void)call {
  [((id<JavaUtilConcurrentBlockingQueue>) nil_chk(val$queue_)) offerWithId:JreLoadStatic(RxObservablesBlockingObservable, UNSUBSCRIBE)];
}

- (instancetype)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0 {
  RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithJavaUtilConcurrentBlockingQueue:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$queue_", "LJavaUtilConcurrentBlockingQueue;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilConcurrentBlockingQueue;", "(Ljava/util/concurrent/BlockingQueue<Ljava/lang/Object;>;)V", "Ljava/util/concurrent/BlockingQueue<Ljava/lang/Object;>;", "LRxObservablesBlockingObservable;", "subscribeWithRxSubscriber:" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$7 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, -1, -1 };
  return &_RxObservablesBlockingObservable_$7;
}

@end

void RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(RxObservablesBlockingObservable_$7 *self, id<JavaUtilConcurrentBlockingQueue> capture$0) {
  self->val$queue_ = capture$0;
  NSObject_init(self);
}

RxObservablesBlockingObservable_$7 *new_RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(id<JavaUtilConcurrentBlockingQueue> capture$0) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$7, initWithJavaUtilConcurrentBlockingQueue_, capture$0)
}

RxObservablesBlockingObservable_$7 *create_RxObservablesBlockingObservable_$7_initWithJavaUtilConcurrentBlockingQueue_(id<JavaUtilConcurrentBlockingQueue> capture$0) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$7, initWithJavaUtilConcurrentBlockingQueue_, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$7)

@implementation RxObservablesBlockingObservable_$8

- (void)callWithId:(NSException *)t {
  @throw new_RxExceptionsOnErrorNotImplementedException_initWithNSException_(t);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObservablesBlockingObservable_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "LRxObservablesBlockingObservable;", "subscribeWithRxFunctionsAction1:", "Ljava/lang/Object;Lrx/functions/Action1<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$8 = { "", "rx.observables", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, 4, -1 };
  return &_RxObservablesBlockingObservable_$8;
}

@end

void RxObservablesBlockingObservable_$8_init(RxObservablesBlockingObservable_$8 *self) {
  NSObject_init(self);
}

RxObservablesBlockingObservable_$8 *new_RxObservablesBlockingObservable_$8_init() {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$8, init)
}

RxObservablesBlockingObservable_$8 *create_RxObservablesBlockingObservable_$8_init() {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$8, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$8)

@implementation RxObservablesBlockingObservable_$9

- (void)onNextWithId:(id)t {
  [((id<RxFunctionsAction1>) nil_chk(val$onNext_)) callWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((id<RxFunctionsAction1>) nil_chk(val$onError_)) callWithId:e];
}

- (void)onCompleted {
  [((id<RxFunctionsAction0>) nil_chk(val$onCompleted_)) call];
}

- (instancetype)initWithRxFunctionsAction1:(id<RxFunctionsAction1>)capture$0
                    withRxFunctionsAction1:(id<RxFunctionsAction1>)capture$1
                    withRxFunctionsAction0:(id<RxFunctionsAction0>)capture$2 {
  RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { "onErrorWithNSException:", "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { "onCompleted", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "initWithRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:", NULL, 0x0, -1, 5, -1, 6, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$onNext_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$onError_", "LRxFunctionsAction1;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
    { "val$onCompleted_", "LRxFunctionsAction0;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LRxFunctionsAction1;LRxFunctionsAction1;LRxFunctionsAction0;", "(Lrx/functions/Action1<-TT;>;Lrx/functions/Action1<-Ljava/lang/Throwable;>;Lrx/functions/Action0;)V", "Lrx/functions/Action1<-TT;>;", "Lrx/functions/Action1<-Ljava/lang/Throwable;>;", "LRxObservablesBlockingObservable;", "subscribeWithRxFunctionsAction1:withRxFunctionsAction1:withRxFunctionsAction0:", "Ljava/lang/Object;Lrx/Observer<TT;>;" };
  static const J2ObjcClassInfo _RxObservablesBlockingObservable_$9 = { "", "rx.observables", ptrTable, methods, fields, 7, 0x8008, 4, 3, 9, -1, 10, 11, -1 };
  return &_RxObservablesBlockingObservable_$9;
}

@end

void RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(RxObservablesBlockingObservable_$9 *self, id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1, id<RxFunctionsAction0> capture$2) {
  self->val$onNext_ = capture$0;
  self->val$onError_ = capture$1;
  self->val$onCompleted_ = capture$2;
  NSObject_init(self);
}

RxObservablesBlockingObservable_$9 *new_RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1, id<RxFunctionsAction0> capture$2) {
  J2OBJC_NEW_IMPL(RxObservablesBlockingObservable_$9, initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_, capture$0, capture$1, capture$2)
}

RxObservablesBlockingObservable_$9 *create_RxObservablesBlockingObservable_$9_initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_(id<RxFunctionsAction1> capture$0, id<RxFunctionsAction1> capture$1, id<RxFunctionsAction0> capture$2) {
  J2OBJC_CREATE_IMPL(RxObservablesBlockingObservable_$9, initWithRxFunctionsAction1_withRxFunctionsAction1_withRxFunctionsAction0_, capture$0, capture$1, capture$2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesBlockingObservable_$9)
