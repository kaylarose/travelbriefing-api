//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/okio-1.9.0-sources/okio/ForwardingSink.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OkioForwardingSink")
#ifdef RESTRICT_OkioForwardingSink
#define INCLUDE_ALL_OkioForwardingSink 0
#else
#define INCLUDE_ALL_OkioForwardingSink 1
#endif
#undef RESTRICT_OkioForwardingSink

#if !defined (OkioForwardingSink_) && (INCLUDE_ALL_OkioForwardingSink || defined(INCLUDE_OkioForwardingSink))
#define OkioForwardingSink_

#define RESTRICT_OkioSink 1
#define INCLUDE_OkioSink 1
#include "okio/Sink.h"

@class OkioBuffer;
@class OkioTimeout;

/*!
 @brief A <code>Sink</code> which forwards calls to another.
 Useful for subclassing. 
 */
@interface OkioForwardingSink : NSObject < OkioSink >

#pragma mark Public

- (instancetype)initWithOkioSink:(id<OkioSink>)delegate;

- (void)close;

/*!
 @brief <code>Sink</code> to which this instance is delegating.
 */
- (id<OkioSink>)delegate;

- (void)flush;

- (OkioTimeout *)timeout;

- (NSString *)description;

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount;

@end

J2OBJC_EMPTY_STATIC_INIT(OkioForwardingSink)

FOUNDATION_EXPORT void OkioForwardingSink_initWithOkioSink_(OkioForwardingSink *self, id<OkioSink> delegate);

J2OBJC_TYPE_LITERAL_HEADER(OkioForwardingSink)

#endif

#pragma pop_macro("INCLUDE_ALL_OkioForwardingSink")
