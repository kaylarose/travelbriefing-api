//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/okio-1.9.0-sources/okio/BufferedSource.java
//

#include "J2ObjC_source.h"
#include "okio/BufferedSource.h"

@interface OkioBufferedSource : NSObject

@end

@implementation OkioBufferedSource

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "buffer", "LOkioBuffer;", 0x401, -1, -1, -1, -1, -1, -1 },
    { "exhausted", "Z", 0x401, -1, -1, 0, -1, -1, -1 },
    { "requireWithLong:", "V", 0x401, 1, 2, 0, -1, -1, -1 },
    { "requestWithLong:", "Z", 0x401, 3, 2, 0, -1, -1, -1 },
    { "readByte", "B", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readShort", "S", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readShortLe", "S", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readInt", "I", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readIntLe", "I", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readLong", "J", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readLongLe", "J", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readDecimalLong", "J", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readHexadecimalUnsignedLong", "J", 0x401, -1, -1, 0, -1, -1, -1 },
    { "skipWithLong:", "V", 0x401, 4, 2, 0, -1, -1, -1 },
    { "readByteString", "LOkioByteString;", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readByteStringWithLong:", "LOkioByteString;", 0x401, 5, 2, 0, -1, -1, -1 },
    { "selectWithOkioOptions:", "I", 0x401, 6, 7, 0, -1, -1, -1 },
    { "readByteArray", "[B", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readByteArrayWithLong:", "[B", 0x401, 8, 2, 0, -1, -1, -1 },
    { "readWithByteArray:", "I", 0x401, 9, 10, 0, -1, -1, -1 },
    { "readFullyWithByteArray:", "V", 0x401, 11, 10, 0, -1, -1, -1 },
    { "readWithByteArray:withInt:withInt:", "I", 0x401, 9, 12, 0, -1, -1, -1 },
    { "readFullyWithOkioBuffer:withLong:", "V", 0x401, 11, 13, 0, -1, -1, -1 },
    { "readAllWithOkioSink:", "J", 0x401, 14, 15, 0, -1, -1, -1 },
    { "readUtf8", "LNSString;", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readUtf8WithLong:", "LNSString;", 0x401, 16, 2, 0, -1, -1, -1 },
    { "readUtf8Line", "LNSString;", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readUtf8LineStrict", "LNSString;", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readUtf8CodePoint", "I", 0x401, -1, -1, 0, -1, -1, -1 },
    { "readStringWithJavaNioCharsetCharset:", "LNSString;", 0x401, 17, 18, 0, -1, -1, -1 },
    { "readStringWithLong:withJavaNioCharsetCharset:", "LNSString;", 0x401, 17, 19, 0, -1, -1, -1 },
    { "indexOfWithByte:", "J", 0x401, 20, 21, 0, -1, -1, -1 },
    { "indexOfWithByte:withLong:", "J", 0x401, 20, 22, 0, -1, -1, -1 },
    { "indexOfWithOkioByteString:", "J", 0x401, 20, 23, 0, -1, -1, -1 },
    { "indexOfWithOkioByteString:withLong:", "J", 0x401, 20, 24, 0, -1, -1, -1 },
    { "indexOfElementWithOkioByteString:", "J", 0x401, 25, 23, 0, -1, -1, -1 },
    { "indexOfElementWithOkioByteString:withLong:", "J", 0x401, 25, 24, 0, -1, -1, -1 },
    { "rangeEqualsWithLong:withOkioByteString:", "Z", 0x401, 26, 27, 0, -1, -1, -1 },
    { "rangeEqualsWithLong:withOkioByteString:withInt:withInt:", "Z", 0x401, 26, 28, 0, -1, -1, -1 },
    { "inputStream", "LJavaIoInputStream;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "require", "J", "request", "skip", "readByteString", "select", "LOkioOptions;", "readByteArray", "read", "[B", "readFully", "[BII", "LOkioBuffer;J", "readAll", "LOkioSink;", "readUtf8", "readString", "LJavaNioCharsetCharset;", "JLJavaNioCharsetCharset;", "indexOf", "B", "BJ", "LOkioByteString;", "LOkioByteString;J", "indexOfElement", "rangeEquals", "JLOkioByteString;", "JLOkioByteString;II" };
  static const J2ObjcClassInfo _OkioBufferedSource = { "BufferedSource", "okio", ptrTable, methods, NULL, 7, 0x609, 40, 0, -1, -1, -1, -1, -1 };
  return &_OkioBufferedSource;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OkioBufferedSource)
