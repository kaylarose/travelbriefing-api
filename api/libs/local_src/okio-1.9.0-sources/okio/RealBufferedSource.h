//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/okio-1.9.0-sources/okio/RealBufferedSource.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OkioRealBufferedSource")
#ifdef RESTRICT_OkioRealBufferedSource
#define INCLUDE_ALL_OkioRealBufferedSource 0
#else
#define INCLUDE_ALL_OkioRealBufferedSource 1
#endif
#undef RESTRICT_OkioRealBufferedSource

#if !defined (OkioRealBufferedSource_) && (INCLUDE_ALL_OkioRealBufferedSource || defined(INCLUDE_OkioRealBufferedSource))
#define OkioRealBufferedSource_

#define RESTRICT_OkioBufferedSource 1
#define INCLUDE_OkioBufferedSource 1
#include "okio/BufferedSource.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaNioCharsetCharset;
@class OkioBuffer;
@class OkioByteString;
@class OkioOptions;
@class OkioTimeout;
@protocol OkioSink;
@protocol OkioSource;

@interface OkioRealBufferedSource : NSObject < OkioBufferedSource > {
 @public
  OkioBuffer *buffer_;
  id<OkioSource> source_;
  jboolean closed_;
}

#pragma mark Public

- (OkioBuffer *)buffer;

- (void)close;

- (jboolean)exhausted;

- (jlong)indexOfWithByte:(jbyte)b;

- (jlong)indexOfWithByte:(jbyte)b
                withLong:(jlong)fromIndex;

- (jlong)indexOfWithOkioByteString:(OkioByteString *)bytes;

- (jlong)indexOfWithOkioByteString:(OkioByteString *)bytes
                          withLong:(jlong)fromIndex;

- (jlong)indexOfElementWithOkioByteString:(OkioByteString *)targetBytes;

- (jlong)indexOfElementWithOkioByteString:(OkioByteString *)targetBytes
                                 withLong:(jlong)fromIndex;

- (JavaIoInputStream *)inputStream;

- (jboolean)rangeEqualsWithLong:(jlong)offset
             withOkioByteString:(OkioByteString *)bytes;

- (jboolean)rangeEqualsWithLong:(jlong)offset
             withOkioByteString:(OkioByteString *)bytes
                        withInt:(jint)bytesOffset
                        withInt:(jint)byteCount;

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount;

- (jint)readWithByteArray:(IOSByteArray *)sink;

- (jint)readWithByteArray:(IOSByteArray *)sink
                  withInt:(jint)offset
                  withInt:(jint)byteCount;

- (jlong)readAllWithOkioSink:(id<OkioSink>)sink;

- (jbyte)readByte;

- (IOSByteArray *)readByteArray;

- (IOSByteArray *)readByteArrayWithLong:(jlong)byteCount;

- (OkioByteString *)readByteString;

- (OkioByteString *)readByteStringWithLong:(jlong)byteCount;

- (jlong)readDecimalLong;

- (void)readFullyWithOkioBuffer:(OkioBuffer *)sink
                       withLong:(jlong)byteCount;

- (void)readFullyWithByteArray:(IOSByteArray *)sink;

- (jlong)readHexadecimalUnsignedLong;

- (jint)readInt;

- (jint)readIntLe;

- (jlong)readLong;

- (jlong)readLongLe;

- (jshort)readShort;

- (jshort)readShortLe;

- (NSString *)readStringWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (NSString *)readStringWithLong:(jlong)byteCount
       withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (NSString *)readUtf8;

- (NSString *)readUtf8WithLong:(jlong)byteCount;

- (jint)readUtf8CodePoint;

- (NSString *)readUtf8Line;

- (NSString *)readUtf8LineStrict;

- (jboolean)requestWithLong:(jlong)byteCount;

- (void)requireWithLong:(jlong)byteCount;

- (jint)selectWithOkioOptions:(OkioOptions *)options;

- (void)skipWithLong:(jlong)byteCount;

- (OkioTimeout *)timeout;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithOkioSource:(id<OkioSource>)source;

@end

J2OBJC_EMPTY_STATIC_INIT(OkioRealBufferedSource)

J2OBJC_FIELD_SETTER(OkioRealBufferedSource, buffer_, OkioBuffer *)
J2OBJC_FIELD_SETTER(OkioRealBufferedSource, source_, id<OkioSource>)

FOUNDATION_EXPORT void OkioRealBufferedSource_initWithOkioSource_(OkioRealBufferedSource *self, id<OkioSource> source);

FOUNDATION_EXPORT OkioRealBufferedSource *new_OkioRealBufferedSource_initWithOkioSource_(id<OkioSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OkioRealBufferedSource *create_OkioRealBufferedSource_initWithOkioSource_(id<OkioSource> source);

J2OBJC_TYPE_LITERAL_HEADER(OkioRealBufferedSource)

#endif

#pragma pop_macro("INCLUDE_ALL_OkioRealBufferedSource")
