//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/okio-1.9.0-sources/okio/Options.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/AbstractList.h"
#include "okio/ByteString.h"
#include "okio/Options.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OkioOptions ()

- (instancetype)initWithOkioByteStringArray:(IOSObjectArray *)byteStrings;

@end

__attribute__((unused)) static void OkioOptions_initWithOkioByteStringArray_(OkioOptions *self, IOSObjectArray *byteStrings);

__attribute__((unused)) static OkioOptions *new_OkioOptions_initWithOkioByteStringArray_(IOSObjectArray *byteStrings) NS_RETURNS_RETAINED;

__attribute__((unused)) static OkioOptions *create_OkioOptions_initWithOkioByteStringArray_(IOSObjectArray *byteStrings);

@implementation OkioOptions

- (instancetype)initWithOkioByteStringArray:(IOSObjectArray *)byteStrings {
  OkioOptions_initWithOkioByteStringArray_(self, byteStrings);
  return self;
}

+ (OkioOptions *)ofWithOkioByteStringArray:(IOSObjectArray *)byteStrings {
  return OkioOptions_ofWithOkioByteStringArray_(byteStrings);
}

- (OkioByteString *)getWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(byteStrings_), i);
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(byteStrings_))->size_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOkioByteStringArray:", NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { "ofWithOkioByteStringArray:", "LOkioOptions;", 0x89, 1, 0, -1, -1, -1, -1 },
    { "getWithInt:", "LOkioByteString;", 0x1, 2, 3, -1, 4, -1, -1 },
    { "size", "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "byteStrings_", "[LOkioByteString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LOkioByteString;", "of", "get", "I", "(I)Lokio/ByteString;", "Ljava/util/AbstractList<Lokio/ByteString;>;Ljava/util/RandomAccess;" };
  static const J2ObjcClassInfo _OkioOptions = { "Options", "okio", ptrTable, methods, fields, 7, 0x11, 4, 1, -1, -1, -1, 5, -1 };
  return &_OkioOptions;
}

@end

void OkioOptions_initWithOkioByteStringArray_(OkioOptions *self, IOSObjectArray *byteStrings) {
  JavaUtilAbstractList_init(self);
  self->byteStrings_ = byteStrings;
}

OkioOptions *new_OkioOptions_initWithOkioByteStringArray_(IOSObjectArray *byteStrings) {
  J2OBJC_NEW_IMPL(OkioOptions, initWithOkioByteStringArray_, byteStrings)
}

OkioOptions *create_OkioOptions_initWithOkioByteStringArray_(IOSObjectArray *byteStrings) {
  J2OBJC_CREATE_IMPL(OkioOptions, initWithOkioByteStringArray_, byteStrings)
}

OkioOptions *OkioOptions_ofWithOkioByteStringArray_(IOSObjectArray *byteStrings) {
  OkioOptions_initialize();
  return new_OkioOptions_initWithOkioByteStringArray_([((IOSObjectArray *) nil_chk(byteStrings)) clone]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OkioOptions)
