//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: build/libs_raw/adapter-rxjava-2.1.0-sources/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "retrofit2/Call.h"
#include "retrofit2/CallAdapter.h"
#include "retrofit2/Response.h"
#include "retrofit2/Retrofit.h"
#include "retrofit2/adapter/rxjava/CompletableHelper.h"
#include "retrofit2/adapter/rxjava/OperatorMapResponseToBodyOrError.h"
#include "retrofit2/adapter/rxjava/Result.h"
#include "retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.h"
#include "retrofit2/adapter/rxjava/SingleHelper.h"
#include "rx/Observable.h"
#include "rx/Scheduler.h"
#include "rx/Subscriber.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Func1.h"

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory () {
 @public
  RxScheduler *scheduler_;
}

- (instancetype)initWithRxScheduler:(RxScheduler *)scheduler;

- (id<Retrofit2CallAdapter>)getCallAdapterWithJavaLangReflectType:(id<JavaLangReflectType>)returnType
                                                  withRxScheduler:(RxScheduler *)scheduler;

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory, scheduler_, RxScheduler *)

__attribute__((unused)) static void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *self, RxScheduler *scheduler);

__attribute__((unused)) static Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(RxScheduler *scheduler) NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(RxScheduler *scheduler);

__attribute__((unused)) static id<Retrofit2CallAdapter> Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_getCallAdapterWithJavaLangReflectType_withRxScheduler_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *self, id<JavaLangReflectType> returnType, RxScheduler *scheduler);

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe () {
 @public
  id<Retrofit2Call> originalCall_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe, originalCall_, id<Retrofit2Call>)

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter () {
 @public
  id<Retrofit2Call> call_;
  RxSubscriber *subscriber_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter, call_, id<Retrofit2Call>)
J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter, subscriber_, RxSubscriber *)

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter () {
 @public
  id<JavaLangReflectType> responseType_;
  RxScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter, responseType_, id<JavaLangReflectType>)
J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter, scheduler_, RxScheduler *)

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter () {
 @public
  id<JavaLangReflectType> responseType_;
  RxScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter, responseType_, id<JavaLangReflectType>)
J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter, scheduler_, RxScheduler *)

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter () {
 @public
  id<JavaLangReflectType> responseType_;
  RxScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter, responseType_, id<JavaLangReflectType>)
J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter, scheduler_, RxScheduler *)

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 : NSObject < RxFunctionsFunc1 >

- (Retrofit2AdapterRxjavaResult *)callWithId:(Retrofit2Response *)response;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1)

__attribute__((unused)) static void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 *self);

__attribute__((unused)) static Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1)

@interface Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 : NSObject < RxFunctionsFunc1 >

- (Retrofit2AdapterRxjavaResult *)callWithId:(NSException *)throwable;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2)

__attribute__((unused)) static void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 *self);

__attribute__((unused)) static Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init();

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory

+ (Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *)create {
  return Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_create();
}

+ (Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *)createWithSchedulerWithRxScheduler:(RxScheduler *)scheduler {
  return Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_createWithSchedulerWithRxScheduler_(scheduler);
}

- (instancetype)initWithRxScheduler:(RxScheduler *)scheduler {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(self, scheduler);
  return self;
}

- (id<Retrofit2CallAdapter>)getWithJavaLangReflectType:(id<JavaLangReflectType>)returnType
                 withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations
                                 withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit {
  IOSClass *rawType = Retrofit2CallAdapter_Factory_getRawTypeWithJavaLangReflectType_(returnType);
  NSString *canonicalName = [((IOSClass *) nil_chk(rawType)) getCanonicalName];
  jboolean isSingle = [@"rx.Single" isEqual:canonicalName];
  jboolean isCompletable = [@"rx.Completable" isEqual:canonicalName];
  if (rawType != RxObservable_class_() && !isSingle && !isCompletable) {
    return nil;
  }
  if (!isCompletable && !([JavaLangReflectParameterizedType_class_() isInstance:returnType])) {
    NSString *name = isSingle ? @"Single" : @"Observable";
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$$$$", name, @" return type must be parameterized as ", name, @"<Foo> or ", name, @"<? extends Foo>"));
  }
  if (isCompletable) {
    return Retrofit2AdapterRxjavaCompletableHelper_createCallAdapterWithRxScheduler_(scheduler_);
  }
  id<Retrofit2CallAdapter> callAdapter = Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_getCallAdapterWithJavaLangReflectType_withRxScheduler_(self, returnType, scheduler_);
  if (isSingle) {
    return Retrofit2AdapterRxjavaSingleHelper_makeSingleWithRetrofit2CallAdapter_(callAdapter);
  }
  return callAdapter;
}

- (id<Retrofit2CallAdapter>)getCallAdapterWithJavaLangReflectType:(id<JavaLangReflectType>)returnType
                                                  withRxScheduler:(RxScheduler *)scheduler {
  return Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_getCallAdapterWithJavaLangReflectType_withRxScheduler_(self, returnType, scheduler);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory;", 0x9, -1, -1, -1, -1, -1, -1 },
    { "createWithSchedulerWithRxScheduler:", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { "initWithRxScheduler:", NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { "getWithJavaLangReflectType:withJavaLangAnnotationAnnotationArray:withRetrofit2Retrofit:", "LRetrofit2CallAdapter;", 0x1, 2, 3, -1, 4, -1, -1 },
    { "getCallAdapterWithJavaLangReflectType:withRxScheduler:", "LRetrofit2CallAdapter;", 0x2, 5, 6, -1, 7, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createWithScheduler", "LRxScheduler;", "get", "LJavaLangReflectType;[LJavaLangAnnotationAnnotation;LRetrofit2Retrofit;", "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter<*>;", "getCallAdapter", "LJavaLangReflectType;LRxScheduler;", "(Ljava/lang/reflect/Type;Lrx/Scheduler;)Lretrofit2/CallAdapter<Lrx/Observable<*>;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe;LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter;LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter;LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter;LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory = { "RxJavaCallAdapterFactory", "retrofit2.adapter.rxjava", ptrTable, methods, fields, 7, 0x11, 5, 1, -1, 8, -1, -1, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory;
}

@end

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_create() {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initialize();
  return new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(nil);
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_createWithSchedulerWithRxScheduler_(RxScheduler *scheduler) {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initialize();
  if (scheduler == nil) @throw new_JavaLangNullPointerException_initWithNSString_(@"scheduler == null");
  return new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(scheduler);
}

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *self, RxScheduler *scheduler) {
  Retrofit2CallAdapter_Factory_init(self);
  self->scheduler_ = scheduler;
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory, initWithRxScheduler_, scheduler)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_initWithRxScheduler_(RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory, initWithRxScheduler_, scheduler)
}

id<Retrofit2CallAdapter> Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_getCallAdapterWithJavaLangReflectType_withRxScheduler_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory *self, id<JavaLangReflectType> returnType, RxScheduler *scheduler) {
  id<JavaLangReflectType> observableType = Retrofit2CallAdapter_Factory_getParameterUpperBoundWithInt_withJavaLangReflectParameterizedType_(0, (id<JavaLangReflectParameterizedType>) cast_check(returnType, JavaLangReflectParameterizedType_class_()));
  IOSClass *rawObservableType = Retrofit2CallAdapter_Factory_getRawTypeWithJavaLangReflectType_(observableType);
  if (rawObservableType == Retrofit2Response_class_()) {
    if (!([JavaLangReflectParameterizedType_class_() isInstance:observableType])) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"Response must be parameterized as Response<Foo> or Response<? extends Foo>");
    }
    id<JavaLangReflectType> responseType = Retrofit2CallAdapter_Factory_getParameterUpperBoundWithInt_withJavaLangReflectParameterizedType_(0, (id<JavaLangReflectParameterizedType>) cast_check(observableType, JavaLangReflectParameterizedType_class_()));
    return new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter_initWithJavaLangReflectType_withRxScheduler_(responseType, scheduler);
  }
  if (rawObservableType == Retrofit2AdapterRxjavaResult_class_()) {
    if (!([JavaLangReflectParameterizedType_class_() isInstance:observableType])) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"Result must be parameterized as Result<Foo> or Result<? extends Foo>");
    }
    id<JavaLangReflectType> responseType = Retrofit2CallAdapter_Factory_getParameterUpperBoundWithInt_withJavaLangReflectParameterizedType_(0, (id<JavaLangReflectParameterizedType>) cast_check(observableType, JavaLangReflectParameterizedType_class_()));
    return new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_initWithJavaLangReflectType_withRxScheduler_(responseType, scheduler);
  }
  return new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter_initWithJavaLangReflectType_withRxScheduler_(observableType, scheduler);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe

- (instancetype)initWithRetrofit2Call:(id<Retrofit2Call>)originalCall {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe_initWithRetrofit2Call_(self, originalCall);
  return self;
}

- (void)callWithId:(RxSubscriber *)subscriber {
  id<Retrofit2Call> call = [((id<Retrofit2Call>) nil_chk(originalCall_)) clone];
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter *requestArbiter = new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter_initWithRetrofit2Call_withRxSubscriber_(call, subscriber);
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:requestArbiter];
  [subscriber setProducerWithRxProducer:requestArbiter];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRetrofit2Call:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { "callWithId:", "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "originalCall_", "LRetrofit2Call;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Call;", "(Lretrofit2/Call<TT;>;)V", "call", "LRxSubscriber;", "(Lrx/Subscriber<-Lretrofit2/Response<TT;>;>;)V", "Lretrofit2/Call<TT;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<Lretrofit2/Response<TT;>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe = { "CallOnSubscribe", "retrofit2.adapter.rxjava", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe;
}

@end

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe_initWithRetrofit2Call_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe *self, id<Retrofit2Call> originalCall) {
  NSObject_init(self);
  self->originalCall_ = originalCall;
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe_initWithRetrofit2Call_(id<Retrofit2Call> originalCall) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe, initWithRetrofit2Call_, originalCall)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe_initWithRetrofit2Call_(id<Retrofit2Call> originalCall) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe, initWithRetrofit2Call_, originalCall)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter

- (instancetype)initWithRetrofit2Call:(id<Retrofit2Call>)call
                     withRxSubscriber:(RxSubscriber *)subscriber {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter_initWithRetrofit2Call_withRxSubscriber_(self, call, subscriber);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (n < 0) @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"n < 0: ", n));
  if (n == 0) return;
  if (![self compareAndSetWithBoolean:false withBoolean:true]) return;
  @try {
    Retrofit2Response *response = [((id<Retrofit2Call>) nil_chk(call_)) execute];
    if (![((RxSubscriber *) nil_chk(subscriber_)) isUnsubscribed]) {
      [subscriber_ onNextWithId:response];
    }
  }
  @catch (NSException *t) {
    RxExceptionsExceptions_throwIfFatalWithNSException_(t);
    if (![((RxSubscriber *) nil_chk(subscriber_)) isUnsubscribed]) {
      [subscriber_ onErrorWithNSException:t];
    }
    return;
  }
  if (![((RxSubscriber *) nil_chk(subscriber_)) isUnsubscribed]) {
    [subscriber_ onCompleted];
  }
}

- (void)unsubscribe {
  [((id<Retrofit2Call>) nil_chk(call_)) cancel];
}

- (jboolean)isUnsubscribed {
  return [((id<Retrofit2Call>) nil_chk(call_)) isCanceled];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRetrofit2Call:withRxSubscriber:", NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { "requestWithLong:", "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { "unsubscribe", "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { "isUnsubscribed", "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "call_", "LRetrofit2Call;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
    { "subscriber_", "LRxSubscriber;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LRetrofit2Call;LRxSubscriber;", "(Lretrofit2/Call<TT;>;Lrx/Subscriber<-Lretrofit2/Response<TT;>;>;)V", "request", "J", "Lretrofit2/Call<TT;>;", "Lrx/Subscriber<-Lretrofit2/Response<TT;>;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory;", "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicBoolean;Lrx/Subscription;Lrx/Producer;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter = { "RequestArbiter", "retrofit2.adapter.rxjava", ptrTable, methods, fields, 7, 0x18, 4, 2, 6, -1, -1, 7, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter;
}

@end

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter_initWithRetrofit2Call_withRxSubscriber_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter *self, id<Retrofit2Call> call, RxSubscriber *subscriber) {
  JavaUtilConcurrentAtomicAtomicBoolean_init(self);
  self->call_ = call;
  self->subscriber_ = subscriber;
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter_initWithRetrofit2Call_withRxSubscriber_(id<Retrofit2Call> call, RxSubscriber *subscriber) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter, initWithRetrofit2Call_withRxSubscriber_, call, subscriber)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter_initWithRetrofit2Call_withRxSubscriber_(id<Retrofit2Call> call, RxSubscriber *subscriber) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter, initWithRetrofit2Call_withRxSubscriber_, call, subscriber)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_RequestArbiter)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)responseType
                            withRxScheduler:(RxScheduler *)scheduler {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter_initWithJavaLangReflectType_withRxScheduler_(self, responseType, scheduler);
  return self;
}

- (id<JavaLangReflectType>)responseType {
  return responseType_;
}

- (RxObservable *)adaptWithRetrofit2Call:(id<Retrofit2Call>)call {
  RxObservable *observable = RxObservable_createWithRxObservable_OnSubscribe_(new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe_initWithRetrofit2Call_(call));
  if (scheduler_ != nil) {
    return [((RxObservable *) nil_chk(observable)) subscribeOnWithRxScheduler:scheduler_];
  }
  return observable;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangReflectType:withRxScheduler:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { "responseType", "LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { "adaptWithRetrofit2Call:", "LRxObservable;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "responseType_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectType;LRxScheduler;", "adapt", "LRetrofit2Call;", "<R:Ljava/lang/Object;>(Lretrofit2/Call<TR;>;)Lrx/Observable<Lretrofit2/Response<TR;>;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory;", "Ljava/lang/Object;Lretrofit2/CallAdapter<Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter = { "ResponseCallAdapter", "retrofit2.adapter.rxjava", ptrTable, methods, fields, 7, 0x18, 3, 2, 4, -1, -1, 5, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter;
}

@end

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter_initWithJavaLangReflectType_withRxScheduler_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter *self, id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  NSObject_init(self);
  self->responseType_ = responseType;
  self->scheduler_ = scheduler;
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter_initWithJavaLangReflectType_withRxScheduler_(id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter, initWithJavaLangReflectType_withRxScheduler_, responseType, scheduler)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter_initWithJavaLangReflectType_withRxScheduler_(id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter, initWithJavaLangReflectType_withRxScheduler_, responseType, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResponseCallAdapter)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)responseType
                            withRxScheduler:(RxScheduler *)scheduler {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter_initWithJavaLangReflectType_withRxScheduler_(self, responseType, scheduler);
  return self;
}

- (id<JavaLangReflectType>)responseType {
  return responseType_;
}

- (RxObservable *)adaptWithRetrofit2Call:(id<Retrofit2Call>)call {
  RxObservable *observable = [((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe_initWithRetrofit2Call_(call)))) liftWithRxObservable_Operator:Retrofit2AdapterRxjavaOperatorMapResponseToBodyOrError_instance()];
  if (scheduler_ != nil) {
    return [((RxObservable *) nil_chk(observable)) subscribeOnWithRxScheduler:scheduler_];
  }
  return observable;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangReflectType:withRxScheduler:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { "responseType", "LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { "adaptWithRetrofit2Call:", "LRxObservable;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "responseType_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectType;LRxScheduler;", "adapt", "LRetrofit2Call;", "<R:Ljava/lang/Object;>(Lretrofit2/Call<TR;>;)Lrx/Observable<TR;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory;", "Ljava/lang/Object;Lretrofit2/CallAdapter<Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter = { "SimpleCallAdapter", "retrofit2.adapter.rxjava", ptrTable, methods, fields, 7, 0x18, 3, 2, 4, -1, -1, 5, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter;
}

@end

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter_initWithJavaLangReflectType_withRxScheduler_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter *self, id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  NSObject_init(self);
  self->responseType_ = responseType;
  self->scheduler_ = scheduler;
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter_initWithJavaLangReflectType_withRxScheduler_(id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter, initWithJavaLangReflectType_withRxScheduler_, responseType, scheduler)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter_initWithJavaLangReflectType_withRxScheduler_(id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter, initWithJavaLangReflectType_withRxScheduler_, responseType, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_SimpleCallAdapter)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)responseType
                            withRxScheduler:(RxScheduler *)scheduler {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_initWithJavaLangReflectType_withRxScheduler_(self, responseType, scheduler);
  return self;
}

- (id<JavaLangReflectType>)responseType {
  return responseType_;
}

- (RxObservable *)adaptWithRetrofit2Call:(id<Retrofit2Call>)call {
  RxObservable *observable = [((RxObservable *) nil_chk([((RxObservable *) nil_chk(RxObservable_createWithRxObservable_OnSubscribe_(new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_CallOnSubscribe_initWithRetrofit2Call_(call)))) mapWithRxFunctionsFunc1:new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init()])) onErrorReturnWithRxFunctionsFunc1:new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init()];
  if (scheduler_ != nil) {
    return [((RxObservable *) nil_chk(observable)) subscribeOnWithRxScheduler:scheduler_];
  }
  return observable;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangReflectType:withRxScheduler:", NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { "responseType", "LJavaLangReflectType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { "adaptWithRetrofit2Call:", "LRxObservable;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "responseType_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scheduler_", "LRxScheduler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectType;LRxScheduler;", "adapt", "LRetrofit2Call;", "<R:Ljava/lang/Object;>(Lretrofit2/Call<TR;>;)Lrx/Observable<Lretrofit2/adapter/rxjava/Result<TR;>;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory;", "Ljava/lang/Object;Lretrofit2/CallAdapter<Lrx/Observable<*>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter = { "ResultCallAdapter", "retrofit2.adapter.rxjava", ptrTable, methods, fields, 7, 0x18, 3, 2, 4, -1, -1, 5, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter;
}

@end

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_initWithJavaLangReflectType_withRxScheduler_(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter *self, id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  NSObject_init(self);
  self->responseType_ = responseType;
  self->scheduler_ = scheduler;
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_initWithJavaLangReflectType_withRxScheduler_(id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter, initWithJavaLangReflectType_withRxScheduler_, responseType, scheduler)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_initWithJavaLangReflectType_withRxScheduler_(id<JavaLangReflectType> responseType, RxScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter, initWithJavaLangReflectType_withRxScheduler_, responseType, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1

- (Retrofit2AdapterRxjavaResult *)callWithId:(Retrofit2Response *)response {
  return Retrofit2AdapterRxjavaResult_responseWithRetrofit2Response_(response);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "LRetrofit2AdapterRxjavaResult;", 0x1, 0, 1, -1, 2, -1, -1 },
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LRetrofit2Response;", "(Lretrofit2/Response<TR;>;)Lretrofit2/adapter/rxjava/Result<TR;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter;", "adaptWithRetrofit2Call:", "Ljava/lang/Object;Lrx/functions/Func1<Lretrofit2/Response<TR;>;Lretrofit2/adapter/rxjava/Result<TR;>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 = { "", "retrofit2.adapter.rxjava", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1;
}

@end

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 *self) {
  NSObject_init(self);
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init() {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1, init)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1 *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1_init() {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$1)

@implementation Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2

- (Retrofit2AdapterRxjavaResult *)callWithId:(NSException *)throwable {
  return Retrofit2AdapterRxjavaResult_errorWithNSException_(throwable);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "LRetrofit2AdapterRxjavaResult;", 0x1, 0, 1, -1, 2, -1, -1 },
    { "init", NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSException;", "(Ljava/lang/Throwable;)Lretrofit2/adapter/rxjava/Result<TR;>;", "LRetrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter;", "adaptWithRetrofit2Call:", "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Throwable;Lretrofit2/adapter/rxjava/Result<TR;>;>;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 = { "", "retrofit2.adapter.rxjava", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, 4, 5, -1 };
  return &_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2;
}

@end

void Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 *self) {
  NSObject_init(self);
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 *new_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init() {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2, init)
}

Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2 *create_Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2_init() {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjavaRxJavaCallAdapterFactory_ResultCallAdapter_$2)
